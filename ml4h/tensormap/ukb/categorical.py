from ml4h.defines import StorageType
from ml4h.TensorMap import TensorMap, Interpretation

adopted_as_a_child_no_0_0 = TensorMap('Adopted-as-a-child_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Adopted-as-a-child_No_0_0': 0, 'Adopted-as-a-child_No_0_0': 1})
alcohol_drinker_status_current_0_0 = TensorMap('Alcohol-drinker-status_Current_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Alcohol-drinker-status_Current_0_0': 0, 'Alcohol-drinker-status_Current_0_0': 1})
alcohol_intake_frequency_once_or_twice_a_week_0_0 = TensorMap('Alcohol-intake-frequency_Once-or-twice-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Alcohol-intake-frequency_Once-or-twice-a-week_0_0': 0, 'Alcohol-intake-frequency_Once-or-twice-a-week_0_0': 1})
alcohol_intake_versus_10_years_previously_less_nowadays_0_0 = TensorMap('Alcohol-intake-versus-10-years-previously_Less-nowadays_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Alcohol-intake-versus-10-years-previously_Less-nowadays_0_0': 0, 'Alcohol-intake-versus-10-years-previously_Less-nowadays_0_0': 1})
alcohol_usually_taken_with_meals_no_0_0 = TensorMap('Alcohol-usually-taken-with-meals_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Alcohol-usually-taken-with-meals_No_0_0': 0, 'Alcohol-usually-taken-with-meals_No_0_0': 1})
average_total_household_income_before_tax_52000_to_100000_0_0 = TensorMap('Average-total-household-income-before-tax_52000-to-100000_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Average-total-household-income-before-tax_52000-to-100000_0_0': 0, 'Average-total-household-income-before-tax_52000-to-100000_0_0': 1})
beef_intake_once_a_week_0_0 = TensorMap('Beef-intake_Once-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Beef-intake_Once-a-week_0_0': 0, 'Beef-intake_Once-a-week_0_0': 1})
birth_weight_known_no_0_0 = TensorMap('Birth-weight-known_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Birth-weight-known_No_0_0': 0, 'Birth-weight-known_No_0_0': 1})
blood_clot_dvt_bronchitis_emphysema_asthma_rhinitis_eczema_allergy_diagnosed_by_doctor_none_of_the_above_0_0 = TensorMap('Blood-clot-DVT-bronchitis-emphysema-asthma-rhinitis-eczema-allergy-diagnosed-by-doctor_None-of-the-above_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Blood-clot-DVT-bronchitis-emphysema-asthma-rhinitis-eczema-allergy-diagnosed-by-doctor_None-of-the-above_0_0': 0, 'Blood-clot-DVT-bronchitis-emphysema-asthma-rhinitis-eczema-allergy-diagnosed-by-doctor_None-of-the-above_0_0': 1})
bread_type_wholemeal_or_wholegrain_0_0 = TensorMap('Bread-type_Wholemeal-or-wholegrain_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Bread-type_Wholemeal-or-wholegrain_0_0': 0, 'Bread-type_Wholemeal-or-wholegrain_0_0': 1})
breastfed_as_a_baby_yes_0_0 = TensorMap('Breastfed-as-a-baby_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Breastfed-as-a-baby_Yes_0_0': 0, 'Breastfed-as-a-baby_Yes_0_0': 1})
breathing_problems_during_period_of_job_no_0_0 = TensorMap('Breathing-problems-during-period-of-job_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Breathing-problems-during-period-of-job_No_0_0': 0, 'Breathing-problems-during-period-of-job_No_0_0': 1})
breathing_problems_during_period_of_job_no_0_1 = TensorMap('Breathing-problems-during-period-of-job_No_0_1', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Breathing-problems-during-period-of-job_No_0_1': 0, 'Breathing-problems-during-period-of-job_No_0_1': 1})
caffeine_drink_within_last_hour_no_0_0 = TensorMap('Caffeine-drink-within-last-hour_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Caffeine-drink-within-last-hour_No_0_0': 0, 'Caffeine-drink-within-last-hour_No_0_0': 1})
cancer_diagnosed_by_doctor_no_0_0 = TensorMap('Cancer-diagnosed-by-doctor_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Cancer-diagnosed-by-doctor_No_0_0': 0, 'Cancer-diagnosed-by-doctor_No_0_0': 1})
cheese_intake_24_times_a_week_0_0 = TensorMap('Cheese-intake_24-times-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Cheese-intake_24-times-a-week_0_0': 0, 'Cheese-intake_24-times-a-week_0_0': 1})
chest_pain_or_discomfort_no_0_0 = TensorMap('Chest-pain-or-discomfort_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Chest-pain-or-discomfort_No_0_0': 0, 'Chest-pain-or-discomfort_No_0_0': 1})
coffee_type_instant_coffee_0_0 = TensorMap('Coffee-type_Instant-coffee_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Coffee-type_Instant-coffee_0_0': 0, 'Coffee-type_Instant-coffee_0_0': 1})
comparative_body_size_at_age_10_about_average_0_0 = TensorMap('Comparative-body-size-at-age-10_About-average_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Comparative-body-size-at-age-10_About-average_0_0': 0, 'Comparative-body-size-at-age-10_About-average_0_0': 1})
comparative_height_size_at_age_10_shorter_0_0 = TensorMap('Comparative-height-size-at-age-10_Shorter_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Comparative-height-size-at-age-10_Shorter_0_0': 0, 'Comparative-height-size-at-age-10_Shorter_0_0': 1})
contraindications_for_spirometry_no_0_0 = TensorMap('Contraindications-for-spirometry_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Contraindications-for-spirometry_No_0_0': 0, 'Contraindications-for-spirometry_No_0_0': 1})
country_of_birth_ukelsewhere_england_0_0 = TensorMap('Country-of-birth-UKelsewhere_England_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Country-of-birth-UKelsewhere_England_0_0': 0, 'Country-of-birth-UKelsewhere_England_0_0': 1})
current_employment_status_in_paid_employment_or_selfemployed_0_0 = TensorMap('Current-employment-status_In-paid-employment-or-selfemployed_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Current-employment-status_In-paid-employment-or-selfemployed_0_0': 0, 'Current-employment-status_In-paid-employment-or-selfemployed_0_0': 1})
current_tobacco_smoking_no_0_0 = TensorMap('Current-tobacco-smoking_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Current-tobacco-smoking_No_0_0': 0, 'Current-tobacco-smoking_No_0_0': 1})
diabetes_diagnosed_by_doctor_no_0_0 = TensorMap('Diabetes-diagnosed-by-doctor_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Diabetes-diagnosed-by-doctor_No_0_0': 0, 'Diabetes-diagnosed-by-doctor_No_0_0': 1})
drive_faster_than_motorway_speed_limit_sometimes_0_0 = TensorMap('Drive-faster-than-motorway-speed-limit_Sometimes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Drive-faster-than-motorway-speed-limit_Sometimes_0_0': 0, 'Drive-faster-than-motorway-speed-limit_Sometimes_0_0': 1})
ease_of_skin_tanning_get_moderately_tanned_0_0 = TensorMap('Ease-of-skin-tanning_Get-moderately-tanned_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Ease-of-skin-tanning_Get-moderately-tanned_0_0': 0, 'Ease-of-skin-tanning_Get-moderately-tanned_0_0': 1})
ethnic_background_british_0_0 = TensorMap('Ethnic-background_British_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Ethnic-background_British_0_0': 0, 'Ethnic-background_British_0_0': 1})
ever_had_bowel_cancer_screening_no_0_0 = TensorMap('Ever-had-bowel-cancer-screening_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Ever-had-bowel-cancer-screening_No_0_0': 0, 'Ever-had-bowel-cancer-screening_No_0_0': 1})
ever_had_prostate_specific_antigen_psa_test_no_0_0 = TensorMap('Ever-had-prostate-specific-antigen-PSA-test_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Ever-had-prostate-specific-antigen-PSA-test_No_0_0': 0, 'Ever-had-prostate-specific-antigen-PSA-test_No_0_0': 1})
ever_smoked_yes_0_0 = TensorMap('Ever-smoked_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Ever-smoked_Yes_0_0': 0, 'Ever-smoked_Yes_0_0': 1})
fi1_numeric_addition_test_15_0_0 = TensorMap('FI1-numeric-addition-test_15_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_FI1-numeric-addition-test_15_0_0': 0, 'FI1-numeric-addition-test_15_0_0': 1})
fi2_identify_largest_number_987_0_0 = TensorMap('FI2-identify-largest-number_987_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_FI2-identify-largest-number_987_0_0': 0, 'FI2-identify-largest-number_987_0_0': 1})
fi3_word_interpolation_adult_0_0 = TensorMap('FI3-word-interpolation_adult_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_FI3-word-interpolation_adult_0_0': 0, 'FI3-word-interpolation_adult_0_0': 1})
fi4_positional_arithmetic_6_0_0 = TensorMap('FI4-positional-arithmetic_6_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_FI4-positional-arithmetic_6_0_0': 0, 'FI4-positional-arithmetic_6_0_0': 1})
facial_ageing_younger_than_you_are_0_0 = TensorMap('Facial-ageing_Younger-than-you-are_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Facial-ageing_Younger-than-you-are_0_0': 0, 'Facial-ageing_Younger-than-you-are_0_0': 1})
falls_in_the_last_year_no_falls_0_0 = TensorMap('Falls-in-the-last-year_No-falls_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Falls-in-the-last-year_No-falls_0_0': 0, 'Falls-in-the-last-year_No-falls_0_0': 1})
frequency_of_stair_climbing_in_last_4_weeks_1115_times_a_day_0_0 = TensorMap('Frequency-of-stair-climbing-in-last-4-weeks_1115-times-a-day_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Frequency-of-stair-climbing-in-last-4-weeks_1115-times-a-day_0_0': 0, 'Frequency-of-stair-climbing-in-last-4-weeks_1115-times-a-day_0_0': 1})
frequency_of_walking_for_pleasure_in_last_4_weeks_23_times_in_the_last_4_weeks_0_0 = TensorMap('Frequency-of-walking-for-pleasure-in-last-4-weeks_23-times-in-the-last-4-weeks_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Frequency-of-walking-for-pleasure-in-last-4-weeks_23-times-in-the-last-4-weeks_0_0': 0, 'Frequency-of-walking-for-pleasure-in-last-4-weeks_23-times-in-the-last-4-weeks_0_0': 1})
genetic_ethnic_grouping_caucasian_0_0 = TensorMap('Genetic-ethnic-grouping_Caucasian_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Genetic-ethnic-grouping_Caucasian_0_0': 0, 'Genetic-ethnic-grouping_Caucasian_0_0': 1})
genetic_sex_male_0_0 = TensorMap('Genetic-sex_Male_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Genetic-sex_Male_0_0': 0, 'Genetic-sex_Male_0_0': 1})
had_major_operations_no_0_0 = TensorMap('Had-major-operations_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Had-major-operations_No_0_0': 0, 'Had-major-operations_No_0_0': 1})
hair_colour_natural_before_greying_dark_brown_0_0 = TensorMap('Hair-colour-natural-before-greying_Dark-brown_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Hair-colour-natural-before-greying_Dark-brown_0_0': 0, 'Hair-colour-natural-before-greying_Dark-brown_0_0': 1})
handedness_chiralitylaterality_righthanded_0_0 = TensorMap('Handedness-chiralitylaterality_Righthanded_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Handedness-chiralitylaterality_Righthanded_0_0': 0, 'Handedness-chiralitylaterality_Righthanded_0_0': 1})
hearing_aid_user_no_0_0 = TensorMap('Hearing-aid-user_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Hearing-aid-user_No_0_0': 0, 'Hearing-aid-user_No_0_0': 1})
hearing_difficultyproblems_with_background_noise_yes_0_0 = TensorMap('Hearing-difficultyproblems-with-background-noise_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Hearing-difficultyproblems-with-background-noise_Yes_0_0': 0, 'Hearing-difficultyproblems-with-background-noise_Yes_0_0': 1})
hearing_difficultyproblems_no_0_0 = TensorMap('Hearing-difficultyproblems_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Hearing-difficultyproblems_No_0_0': 0, 'Hearing-difficultyproblems_No_0_0': 1})
hot_drink_temperature_hot_0_0 = TensorMap('Hot-drink-temperature_Hot_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Hot-drink-temperature_Hot_0_0': 0, 'Hot-drink-temperature_Hot_0_0': 1})
illnesses_of_mother_high_blood_pressure_0_0 = TensorMap('Illnesses-of-mother_High-blood-pressure_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Illnesses-of-mother_High-blood-pressure_0_0': 0, 'Illnesses-of-mother_High-blood-pressure_0_0': 1})
illnesses_of_mother_none_of_the_above_group_2_0_1 = TensorMap('Illnesses-of-mother_None-of-the-above-group-2_0_1', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Illnesses-of-mother_None-of-the-above-group-2_0_1': 0, 'Illnesses-of-mother_None-of-the-above-group-2_0_1': 1})
illnesses_of_siblings_none_of_the_above_group_2_0_1 = TensorMap('Illnesses-of-siblings_None-of-the-above-group-2_0_1', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Illnesses-of-siblings_None-of-the-above-group-2_0_1': 0, 'Illnesses-of-siblings_None-of-the-above-group-2_0_1': 1})
job_involved_shift_work_no_0_0 = TensorMap('Job-involved-shift-work_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Job-involved-shift-work_No_0_0': 0, 'Job-involved-shift-work_No_0_0': 1})
job_involved_shift_work_no_0_1 = TensorMap('Job-involved-shift-work_No_0_1', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Job-involved-shift-work_No_0_1': 0, 'Job-involved-shift-work_No_0_1': 1})
lambmutton_intake_once_a_week_0_0 = TensorMap('Lambmutton-intake_Once-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Lambmutton-intake_Once-a-week_0_0': 0, 'Lambmutton-intake_Once-a-week_0_0': 1})
light_smokers_at_least_100_smokes_in_lifetime_no_0_0 = TensorMap('Light-smokers-at-least-100-smokes-in-lifetime_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Light-smokers-at-least-100-smokes-in-lifetime_No_0_0': 0, 'Light-smokers-at-least-100-smokes-in-lifetime_No_0_0': 1})
longstanding_illness_disability_or_infirmity_no_0_0 = TensorMap('Longstanding-illness-disability-or-infirmity_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Longstanding-illness-disability-or-infirmity_No_0_0': 0, 'Longstanding-illness-disability-or-infirmity_No_0_0': 1})
major_dietary_changes_in_the_last_5_years_no_0_0 = TensorMap('Major-dietary-changes-in-the-last-5-years_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Major-dietary-changes-in-the-last-5-years_No_0_0': 0, 'Major-dietary-changes-in-the-last-5-years_No_0_0': 1})
maternal_smoking_around_birth_yes_0_0 = TensorMap('Maternal-smoking-around-birth_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Maternal-smoking-around-birth_Yes_0_0': 0, 'Maternal-smoking-around-birth_Yes_0_0': 1})
medication_for_cholesterol_blood_pressure_or_diabetes_none_of_the_above_0_0 = TensorMap('Medication-for-cholesterol-blood-pressure-or-diabetes_None-of-the-above_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Medication-for-cholesterol-blood-pressure-or-diabetes_None-of-the-above_0_0': 0, 'Medication-for-cholesterol-blood-pressure-or-diabetes_None-of-the-above_0_0': 1})
medication_for_pain_relief_constipation_heartburn_none_of_the_above_0_0 = TensorMap('Medication-for-pain-relief-constipation-heartburn_None-of-the-above_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Medication-for-pain-relief-constipation-heartburn_None-of-the-above_0_0': 0, 'Medication-for-pain-relief-constipation-heartburn_None-of-the-above_0_0': 1})
milk_type_used_semiskimmed_0_0 = TensorMap('Milk-type-used_Semiskimmed_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Milk-type-used_Semiskimmed_0_0': 0, 'Milk-type-used_Semiskimmed_0_0': 1})
mineral_and_other_dietary_supplements_none_of_the_above_0_0 = TensorMap('Mineral-and-other-dietary-supplements_None-of-the-above_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Mineral-and-other-dietary-supplements_None-of-the-above_0_0': 0, 'Mineral-and-other-dietary-supplements_None-of-the-above_0_0': 1})
mother_still_alive_yes_0_0 = TensorMap('Mother-still-alive_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Mother-still-alive_Yes_0_0': 0, 'Mother-still-alive_Yes_0_0': 1})
mouthteeth_dental_problems_none_of_the_above_0_0 = TensorMap('Mouthteeth-dental-problems_None-of-the-above_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Mouthteeth-dental-problems_None-of-the-above_0_0': 0, 'Mouthteeth-dental-problems_None-of-the-above_0_0': 1})
never_eat_eggs_dairy_wheat_sugar_i_eat_all_of_the_above_0_0 = TensorMap('Never-eat-eggs-dairy-wheat-sugar_I-eat-all-of-the-above_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Never-eat-eggs-dairy-wheat-sugar_I-eat-all-of-the-above_0_0': 0, 'Never-eat-eggs-dairy-wheat-sugar_I-eat-all-of-the-above_0_0': 1})
nonoily_fish_intake_24_times_a_week_0_0 = TensorMap('Nonoily-fish-intake_24-times-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Nonoily-fish-intake_24-times-a-week_0_0': 0, 'Nonoily-fish-intake_24-times-a-week_0_0': 1})
oily_fish_intake_less_than_once_a_week_0_0 = TensorMap('Oily-fish-intake_Less-than-once-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Oily-fish-intake_Less-than-once-a-week_0_0': 0, 'Oily-fish-intake_Less-than-once-a-week_0_0': 1})
other_eye_problems_no_0_0 = TensorMap('Other-eye-problems_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Other-eye-problems_No_0_0': 0, 'Other-eye-problems_No_0_0': 1})
other_serious_medical_conditiondisability_diagnosed_by_doctor_no_0_0 = TensorMap('Other-serious-medical-conditiondisability-diagnosed-by-doctor_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Other-serious-medical-conditiondisability-diagnosed-by-doctor_No_0_0': 0, 'Other-serious-medical-conditiondisability-diagnosed-by-doctor_No_0_0': 1})
overall_health_rating_excellent_0_0 = TensorMap('Overall-health-rating_Excellent_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Overall-health-rating_Excellent_0_0': 0, 'Overall-health-rating_Excellent_0_0': 1})
own_or_rent_accommodation_lived_in_own_with_a_mortgage_0_0 = TensorMap('Own-or-rent-accommodation-lived-in_Own-with-a-mortgage_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Own-or-rent-accommodation-lived-in_Own-with-a-mortgage_0_0': 0, 'Own-or-rent-accommodation-lived-in_Own-with-a-mortgage_0_0': 1})
pacemaker_no_0_0 = TensorMap('Pacemaker_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Pacemaker_No_0_0': 0, 'Pacemaker_No_0_0': 1})
part_of_a_multiple_birth_no_0_0 = TensorMap('Part-of-a-multiple-birth_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Part-of-a-multiple-birth_No_0_0': 0, 'Part-of-a-multiple-birth_No_0_0': 1})
past_tobacco_smoking_just_tried_once_or_twice_0_0 = TensorMap('Past-tobacco-smoking_Just-tried-once-or-twice_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Past-tobacco-smoking_Just-tried-once-or-twice_0_0': 0, 'Past-tobacco-smoking_Just-tried-once-or-twice_0_0': 1})
pork_intake_once_a_week_0_0 = TensorMap('Pork-intake_Once-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Pork-intake_Once-a-week_0_0': 0, 'Pork-intake_Once-a-week_0_0': 1})
poultry_intake_24_times_a_week_0_0 = TensorMap('Poultry-intake_24-times-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Poultry-intake_24-times-a-week_0_0': 0, 'Poultry-intake_24-times-a-week_0_0': 1})
processed_meat_intake_24_times_a_week_0_0 = TensorMap('Processed-meat-intake_24-times-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Processed-meat-intake_24-times-a-week_0_0': 0, 'Processed-meat-intake_24-times-a-week_0_0': 1})
qualifications_o_levelsgcses_or_equivalent_0_0 = TensorMap('Qualifications_O-levelsGCSEs-or-equivalent_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Qualifications_O-levelsGCSEs-or-equivalent_0_0': 0, 'Qualifications_O-levelsGCSEs-or-equivalent_0_0': 1})
reason_for_reducing_amount_of_alcohol_drunk_other_reason_0_0 = TensorMap('Reason-for-reducing-amount-of-alcohol-drunk_Other-reason_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Reason-for-reducing-amount-of-alcohol-drunk_Other-reason_0_0': 0, 'Reason-for-reducing-amount-of-alcohol-drunk_Other-reason_0_0': 1})
relative_age_voice_broke_about_average_age_0_0 = TensorMap('Relative-age-voice-broke_About-average-age_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Relative-age-voice-broke_About-average-age_0_0': 0, 'Relative-age-voice-broke_About-average-age_0_0': 1})
result_ranking_best_0_0 = TensorMap('Result-ranking_best_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Result-ranking_best_0_0': 0, 'Result-ranking_best_0_0': 1})
result_ranking_second_best_0_1 = TensorMap('Result-ranking_second-best_0_1', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Result-ranking_second-best_0_1': 0, 'Result-ranking_second-best_0_1': 1})
result_ranking_third_best_ie_worst_0_2 = TensorMap('Result-ranking_third-best-ie-worst_0_2', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Result-ranking_third-best-ie-worst_0_2': 0, 'Result-ranking_third-best-ie-worst_0_2': 1})
salt_added_to_food_neverrarely_0_0 = TensorMap('Salt-added-to-food_Neverrarely_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Salt-added-to-food_Neverrarely_0_0': 0, 'Salt-added-to-food_Neverrarely_0_0': 1})
sex_male_0_0 = TensorMap('Sex_Male_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Sex_Male_0_0': 0, 'Sex_Male_0_0': 1})
skin_colour_fair_0_0 = TensorMap('Skin-colour_Fair_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Skin-colour_Fair_0_0': 0, 'Skin-colour_Fair_0_0': 1})
smoking_status_never_0_0 = TensorMap('Smoking-status_Never_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Smoking-status_Never_0_0': 0, 'Smoking-status_Never_0_0': 1})
spread_type_butterspreadable_butter_0_0 = TensorMap('Spread-type_Butterspreadable-butter_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Spread-type_Butterspreadable-butter_0_0': 0, 'Spread-type_Butterspreadable-butter_0_0': 1})
taking_other_prescription_medications_no_0_0 = TensorMap('Taking-other-prescription-medications_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Taking-other-prescription-medications_No_0_0': 0, 'Taking-other-prescription-medications_No_0_0': 1})
type_of_accommodation_lived_in_a_house_or_bungalow_0_0 = TensorMap('Type-of-accommodation-lived-in_A-house-or-bungalow_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Type-of-accommodation-lived-in_A-house-or-bungalow_0_0': 0, 'Type-of-accommodation-lived-in_A-house-or-bungalow_0_0': 1})
types_of_physical_activity_in_last_4_weeks_heavy_diy_eg_weeding_lawn_mowing_carpentry_digging_0_2 = TensorMap('Types-of-physical-activity-in-last-4-weeks_Heavy-DIY-eg-weeding-lawn-mowing-carpentry-digging_0_2', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Types-of-physical-activity-in-last-4-weeks_Heavy-DIY-eg-weeding-lawn-mowing-carpentry-digging_0_2': 0, 'Types-of-physical-activity-in-last-4-weeks_Heavy-DIY-eg-weeding-lawn-mowing-carpentry-digging_0_2': 1})
types_of_physical_activity_in_last_4_weeks_walking_for_pleasure_not_as_a_means_of_transport_0_0 = TensorMap('Types-of-physical-activity-in-last-4-weeks_Walking-for-pleasure-not-as-a-means-of-transport_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Types-of-physical-activity-in-last-4-weeks_Walking-for-pleasure-not-as-a-means-of-transport_0_0': 0, 'Types-of-physical-activity-in-last-4-weeks_Walking-for-pleasure-not-as-a-means-of-transport_0_0': 1})
types_of_transport_used_excluding_work_carmotor_vehicle_0_0 = TensorMap('Types-of-transport-used-excluding-work_Carmotor-vehicle_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Types-of-transport-used-excluding-work_Carmotor-vehicle_0_0': 0, 'Types-of-transport-used-excluding-work_Carmotor-vehicle_0_0': 1})
types_of_transport_used_excluding_work_walk_0_1 = TensorMap('Types-of-transport-used-excluding-work_Walk_0_1', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Types-of-transport-used-excluding-work_Walk_0_1': 0, 'Types-of-transport-used-excluding-work_Walk_0_1': 1})
used_an_inhaler_for_chest_within_last_hour_no_0_0 = TensorMap('Used-an-inhaler-for-chest-within-last-hour_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Used-an-inhaler-for-chest-within-last-hour_No_0_0': 0, 'Used-an-inhaler-for-chest-within-last-hour_No_0_0': 1})
usual_walking_pace_brisk_pace_0_0 = TensorMap('Usual-walking-pace_Brisk-pace_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Usual-walking-pace_Brisk-pace_0_0': 0, 'Usual-walking-pace_Brisk-pace_0_0': 1})
variation_in_diet_sometimes_0_0 = TensorMap('Variation-in-diet_Sometimes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Variation-in-diet_Sometimes_0_0': 0, 'Variation-in-diet_Sometimes_0_0': 1})
vascularheart_problems_diagnosed_by_doctor_none_of_the_above_0_0 = TensorMap('Vascularheart-problems-diagnosed-by-doctor_None-of-the-above_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Vascularheart-problems-diagnosed-by-doctor_None-of-the-above_0_0': 0, 'Vascularheart-problems-diagnosed-by-doctor_None-of-the-above_0_0': 1})
vitamin_and_mineral_supplements_none_of_the_above_0_0 = TensorMap('Vitamin-and-mineral-supplements_None-of-the-above_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Vitamin-and-mineral-supplements_None-of-the-above_0_0': 0, 'Vitamin-and-mineral-supplements_None-of-the-above_0_0': 1})
weight_change_compared_with_1_year_ago_yes_gained_weight_0_0 = TensorMap('Weight-change-compared-with-1-year-ago_Yes-gained-weight_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Weight-change-compared-with-1-year-ago_Yes-gained-weight_0_0': 0, 'Weight-change-compared-with-1-year-ago_Yes-gained-weight_0_0': 1})
wheeze_or_whistling_in_the_chest_in_last_year_no_0_0 = TensorMap('Wheeze-or-whistling-in-the-chest-in-last-year_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Wheeze-or-whistling-in-the-chest-in-last-year_No_0_0': 0, 'Wheeze-or-whistling-in-the-chest-in-last-year_No_0_0': 1})
worked_with_materials_containing_asbestos_rarelynever_0_1 = TensorMap('Worked-with-materials-containing-asbestos_Rarelynever_0_1', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Worked-with-materials-containing-asbestos_Rarelynever_0_1': 0, 'Worked-with-materials-containing-asbestos_Rarelynever_0_1': 1})
worked_with_pesticides_rarelynever_0_0 = TensorMap('Worked-with-pesticides_Rarelynever_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Worked-with-pesticides_Rarelynever_0_0': 0, 'Worked-with-pesticides_Rarelynever_0_0': 1})
worked_with_pesticides_rarelynever_0_1 = TensorMap('Worked-with-pesticides_Rarelynever_0_1', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Worked-with-pesticides_Rarelynever_0_1': 0, 'Worked-with-pesticides_Rarelynever_0_1': 1})
workplace_full_of_chemical_or_other_fumes_rarelynever_0_0 = TensorMap('Workplace-full-of-chemical-or-other-fumes_Rarelynever_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Workplace-full-of-chemical-or-other-fumes_Rarelynever_0_0': 0, 'Workplace-full-of-chemical-or-other-fumes_Rarelynever_0_0': 1})
workplace_had_a_lot_of_diesel_exhaust_rarelynever_0_0 = TensorMap('Workplace-had-a-lot-of-diesel-exhaust_Rarelynever_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Workplace-had-a-lot-of-diesel-exhaust_Rarelynever_0_0': 0, 'Workplace-had-a-lot-of-diesel-exhaust_Rarelynever_0_0': 1})
workplace_had_a_lot_of_diesel_exhaust_rarelynever_0_1 = TensorMap('Workplace-had-a-lot-of-diesel-exhaust_Rarelynever_0_1', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Workplace-had-a-lot-of-diesel-exhaust_Rarelynever_0_1': 0, 'Workplace-had-a-lot-of-diesel-exhaust_Rarelynever_0_1': 1})
death = TensorMap('death', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_death': 0, 'death': 1})
osteoarthritis = TensorMap('osteoarthritis', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_osteoarthritis': 0, 'osteoarthritis': 1})
alcohol_intake_frequency_daily_or_almost_daily_0_0 = TensorMap('Alcohol-intake-frequency_Daily-or-almost-daily_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Alcohol-intake-frequency_Daily-or-almost-daily_0_0': 0, 'Alcohol-intake-frequency_Daily-or-almost-daily_0_0': 1})
alcohol_intake_versus_10_years_previously_about_the_same_0_0 = TensorMap('Alcohol-intake-versus-10-years-previously_About-the-same_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Alcohol-intake-versus-10-years-previously_About-the-same_0_0': 0, 'Alcohol-intake-versus-10-years-previously_About-the-same_0_0': 1})
alcohol_usually_taken_with_meals_yes_0_0 = TensorMap('Alcohol-usually-taken-with-meals_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Alcohol-usually-taken-with-meals_Yes_0_0': 0, 'Alcohol-usually-taken-with-meals_Yes_0_0': 1})
average_total_household_income_before_tax_31000_to_51999_0_0 = TensorMap('Average-total-household-income-before-tax_31000-to-51999_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Average-total-household-income-before-tax_31000-to-51999_0_0': 0, 'Average-total-household-income-before-tax_31000-to-51999_0_0': 1})
birth_weight_known_yes_pounds_and_ounces_0_0 = TensorMap('Birth-weight-known_Yes-pounds-and-ounces_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Birth-weight-known_Yes-pounds-and-ounces_0_0': 0, 'Birth-weight-known_Yes-pounds-and-ounces_0_0': 1})
cereal_type_biscuit_cereal_eg_weetabix_0_0 = TensorMap('Cereal-type_Biscuit-cereal-eg-Weetabix_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Cereal-type_Biscuit-cereal-eg-Weetabix_0_0': 0, 'Cereal-type_Biscuit-cereal-eg-Weetabix_0_0': 1})
comparative_body_size_at_age_10_thinner_0_0 = TensorMap('Comparative-body-size-at-age-10_Thinner_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Comparative-body-size-at-age-10_Thinner_0_0': 0, 'Comparative-body-size-at-age-10_Thinner_0_0': 1})
duration_of_other_exercises_between_30_minutes_and_1_hour_0_0 = TensorMap('Duration-of-other-exercises_Between-30-minutes-and-1-hour_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Duration-of-other-exercises_Between-30-minutes-and-1-hour_0_0': 0, 'Duration-of-other-exercises_Between-30-minutes-and-1-hour_0_0': 1})
duration_walking_for_pleasure_between_30_minutes_and_1_hour_0_0 = TensorMap('Duration-walking-for-pleasure_Between-30-minutes-and-1-hour_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Duration-walking-for-pleasure_Between-30-minutes-and-1-hour_0_0': 0, 'Duration-walking-for-pleasure_Between-30-minutes-and-1-hour_0_0': 1})
ease_of_skin_tanning_get_very_tanned_0_0 = TensorMap('Ease-of-skin-tanning_Get-very-tanned_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Ease-of-skin-tanning_Get-very-tanned_0_0': 0, 'Ease-of-skin-tanning_Get-very-tanned_0_0': 1})
ever_smoked_no_0_0 = TensorMap('Ever-smoked_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Ever-smoked_No_0_0': 0, 'Ever-smoked_No_0_0': 1})
facial_ageing_about_your_age_0_0 = TensorMap('Facial-ageing_About-your-age_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Facial-ageing_About-your-age_0_0': 0, 'Facial-ageing_About-your-age_0_0': 1})
father_still_alive_yes_0_0 = TensorMap('Father-still-alive_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Father-still-alive_Yes_0_0': 0, 'Father-still-alive_Yes_0_0': 1})
fracturedbroken_bones_in_last_5_years_no_0_0 = TensorMap('Fracturedbroken-bones-in-last-5-years_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Fracturedbroken-bones-in-last-5-years_No_0_0': 0, 'Fracturedbroken-bones-in-last-5-years_No_0_0': 1})
frequency_of_stair_climbing_in_last_4_weeks_15_times_a_day_0_0 = TensorMap('Frequency-of-stair-climbing-in-last-4-weeks_15-times-a-day_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Frequency-of-stair-climbing-in-last-4-weeks_15-times-a-day_0_0': 0, 'Frequency-of-stair-climbing-in-last-4-weeks_15-times-a-day_0_0': 1})
frequency_of_walking_for_pleasure_in_last_4_weeks_23_times_a_week_0_0 = TensorMap('Frequency-of-walking-for-pleasure-in-last-4-weeks_23-times-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Frequency-of-walking-for-pleasure-in-last-4-weeks_23-times-a-week_0_0': 0, 'Frequency-of-walking-for-pleasure-in-last-4-weeks_23-times-a-week_0_0': 1})
had_major_operations_yes_you_will_be_asked_about_this_later_by_an_interviewer_0_0 = TensorMap('Had-major-operations_Yes-you-will-be-asked-about-this-later-by-an-interviewer_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Had-major-operations_Yes-you-will-be-asked-about-this-later-by-an-interviewer_0_0': 0, 'Had-major-operations_Yes-you-will-be-asked-about-this-later-by-an-interviewer_0_0': 1})
hot_drink_temperature_very_hot_0_0 = TensorMap('Hot-drink-temperature_Very-hot_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Hot-drink-temperature_Very-hot_0_0': 0, 'Hot-drink-temperature_Very-hot_0_0': 1})
illnesses_of_father_none_of_the_above_group_1_0_0 = TensorMap('Illnesses-of-father_None-of-the-above-group-1_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Illnesses-of-father_None-of-the-above-group-1_0_0': 0, 'Illnesses-of-father_None-of-the-above-group-1_0_0': 1})
illnesses_of_father_none_of_the_above_group_2_0_1 = TensorMap('Illnesses-of-father_None-of-the-above-group-2_0_1', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Illnesses-of-father_None-of-the-above-group-2_0_1': 0, 'Illnesses-of-father_None-of-the-above-group-2_0_1': 1})
illnesses_of_mother_none_of_the_above_group_1_0_0 = TensorMap('Illnesses-of-mother_None-of-the-above-group-1_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Illnesses-of-mother_None-of-the-above-group-1_0_0': 0, 'Illnesses-of-mother_None-of-the-above-group-1_0_0': 1})
illnesses_of_siblings_none_of_the_above_group_1_0_0 = TensorMap('Illnesses-of-siblings_None-of-the-above-group-1_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Illnesses-of-siblings_None-of-the-above-group-1_0_0': 0, 'Illnesses-of-siblings_None-of-the-above-group-1_0_0': 1})
lambmutton_intake_less_than_once_a_week_0_0 = TensorMap('Lambmutton-intake_Less-than-once-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Lambmutton-intake_Less-than-once-a-week_0_0': 0, 'Lambmutton-intake_Less-than-once-a-week_0_0': 1})
maternal_smoking_around_birth_no_0_0 = TensorMap('Maternal-smoking-around-birth_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Maternal-smoking-around-birth_No_0_0': 0, 'Maternal-smoking-around-birth_No_0_0': 1})
oily_fish_intake_once_a_week_0_0 = TensorMap('Oily-fish-intake_Once-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Oily-fish-intake_Once-a-week_0_0': 0, 'Oily-fish-intake_Once-a-week_0_0': 1})
own_or_rent_accommodation_lived_in_own_outright_by_you_or_someone_in_your_household_0_0 = TensorMap('Own-or-rent-accommodation-lived-in_Own-outright-by-you-or-someone-in-your-household_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Own-or-rent-accommodation-lived-in_Own-outright-by-you-or-someone-in-your-household_0_0': 0, 'Own-or-rent-accommodation-lived-in_Own-outright-by-you-or-someone-in-your-household_0_0': 1})
pain_types_experienced_in_last_month_none_of_the_above_0_0 = TensorMap('Pain-types-experienced-in-last-month_None-of-the-above_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Pain-types-experienced-in-last-month_None-of-the-above_0_0': 0, 'Pain-types-experienced-in-last-month_None-of-the-above_0_0': 1})
past_tobacco_smoking_i_have_never_smoked_0_0 = TensorMap('Past-tobacco-smoking_I-have-never-smoked_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Past-tobacco-smoking_I-have-never-smoked_0_0': 0, 'Past-tobacco-smoking_I-have-never-smoked_0_0': 1})
pork_intake_less_than_once_a_week_0_0 = TensorMap('Pork-intake_Less-than-once-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Pork-intake_Less-than-once-a-week_0_0': 0, 'Pork-intake_Less-than-once-a-week_0_0': 1})
qualifications_a_levelsas_levels_or_equivalent_0_1 = TensorMap('Qualifications_A-levelsAS-levels-or-equivalent_0_1', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Qualifications_A-levelsAS-levels-or-equivalent_0_1': 0, 'Qualifications_A-levelsAS-levels-or-equivalent_0_1': 1})
qualifications_college_or_university_degree_0_0 = TensorMap('Qualifications_College-or-University-degree_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Qualifications_College-or-University-degree_0_0': 0, 'Qualifications_College-or-University-degree_0_0': 1})
qualifications_o_levelsgcses_or_equivalent_0_2 = TensorMap('Qualifications_O-levelsGCSEs-or-equivalent_0_2', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Qualifications_O-levelsGCSEs-or-equivalent_0_2': 0, 'Qualifications_O-levelsGCSEs-or-equivalent_0_2': 1})
skin_colour_light_olive_0_0 = TensorMap('Skin-colour_Light-olive_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Skin-colour_Light-olive_0_0': 0, 'Skin-colour_Light-olive_0_0': 1})
smokingsmokers_in_household_no_0_0 = TensorMap('Smokingsmokers-in-household_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Smokingsmokers-in-household_No_0_0': 0, 'Smokingsmokers-in-household_No_0_0': 1})
types_of_physical_activity_in_last_4_weeks_other_exercises_eg_swimming_cycling_keep_fit_bowling_0_1 = TensorMap('Types-of-physical-activity-in-last-4-weeks_Other-exercises-eg-swimming-cycling-keep-fit-bowling_0_1', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Types-of-physical-activity-in-last-4-weeks_Other-exercises-eg-swimming-cycling-keep-fit-bowling_0_1': 0, 'Types-of-physical-activity-in-last-4-weeks_Other-exercises-eg-swimming-cycling-keep-fit-bowling_0_1': 1})
usual_walking_pace_steady_average_pace_0_0 = TensorMap('Usual-walking-pace_Steady-average-pace_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Usual-walking-pace_Steady-average-pace_0_0': 0, 'Usual-walking-pace_Steady-average-pace_0_0': 1})
wears_glasses_or_contact_lenses_yes_0_0 = TensorMap('Wears-glasses-or-contact-lenses_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Wears-glasses-or-contact-lenses_Yes_0_0': 0, 'Wears-glasses-or-contact-lenses_Yes_0_0': 1})
weight_change_compared_with_1_year_ago_no_weigh_about_the_same_0_0 = TensorMap('Weight-change-compared-with-1-year-ago_No-weigh-about-the-same_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Weight-change-compared-with-1-year-ago_No-weigh-about-the-same_0_0': 0, 'Weight-change-compared-with-1-year-ago_No-weigh-about-the-same_0_0': 1})
worked_with_materials_containing_asbestos_rarelynever_0_0 = TensorMap('Worked-with-materials-containing-asbestos_Rarelynever_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Worked-with-materials-containing-asbestos_Rarelynever_0_0': 0, 'Worked-with-materials-containing-asbestos_Rarelynever_0_0': 1})
worked_with_paints_thinners_or_glues_rarelynever_0_0 = TensorMap('Worked-with-paints-thinners-or-glues_Rarelynever_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Worked-with-paints-thinners-or-glues_Rarelynever_0_0': 0, 'Worked-with-paints-thinners-or-glues_Rarelynever_0_0': 1})
worked_with_paints_thinners_or_glues_rarelynever_0_1 = TensorMap('Worked-with-paints-thinners-or-glues_Rarelynever_0_1', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Worked-with-paints-thinners-or-glues_Rarelynever_0_1': 0, 'Worked-with-paints-thinners-or-glues_Rarelynever_0_1': 1})
workplace_full_of_chemical_or_other_fumes_rarelynever_0_1 = TensorMap('Workplace-full-of-chemical-or-other-fumes_Rarelynever_0_1', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Workplace-full-of-chemical-or-other-fumes_Rarelynever_0_1': 0, 'Workplace-full-of-chemical-or-other-fumes_Rarelynever_0_1': 1})
workplace_very_cold_rarelynever_0_0 = TensorMap('Workplace-very-cold_Rarelynever_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Workplace-very-cold_Rarelynever_0_0': 0, 'Workplace-very-cold_Rarelynever_0_0': 1})
workplace_very_dusty_rarelynever_0_0 = TensorMap('Workplace-very-dusty_Rarelynever_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Workplace-very-dusty_Rarelynever_0_0': 0, 'Workplace-very-dusty_Rarelynever_0_0': 1})
workplace_very_dusty_rarelynever_0_1 = TensorMap('Workplace-very-dusty_Rarelynever_0_1', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Workplace-very-dusty_Rarelynever_0_1': 0, 'Workplace-very-dusty_Rarelynever_0_1': 1})
able_to_walk_or_cycle_unaided_for_10_minutes_yes_0_0 = TensorMap('Able-to-walk-or-cycle-unaided-for-10-minutes_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Able-to-walk-or-cycle-unaided-for-10-minutes_Yes_0_0': 0, 'Able-to-walk-or-cycle-unaided-for-10-minutes_Yes_0_0': 1})
alcohol_usually_taken_with_meals_it_varies_0_0 = TensorMap('Alcohol-usually-taken-with-meals_It-varies_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Alcohol-usually-taken-with-meals_It-varies_0_0': 0, 'Alcohol-usually-taken-with-meals_It-varies_0_0': 1})
attempted_fluid_intelligence_fi_test_begin_puzzles_0_0 = TensorMap('Attempted-fluid-intelligence-FI-test_Begin-puzzles_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Attempted-fluid-intelligence-FI-test_Begin-puzzles_0_0': 0, 'Attempted-fluid-intelligence-FI-test_Begin-puzzles_0_0': 1})
autorefraction_method_left_measurable_0_0 = TensorMap('Autorefraction-method-left_Measurable_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Autorefraction-method-left_Measurable_0_0': 0, 'Autorefraction-method-left_Measurable_0_0': 1})
autorefraction_method_right_measurable_0_0 = TensorMap('Autorefraction-method-right_Measurable_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Autorefraction-method-right_Measurable_0_0': 0, 'Autorefraction-method-right_Measurable_0_0': 1})
average_total_household_income_before_tax_less_than_18000_0_0 = TensorMap('Average-total-household-income-before-tax_Less-than-18000_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Average-total-household-income-before-tax_Less-than-18000_0_0': 0, 'Average-total-household-income-before-tax_Less-than-18000_0_0': 1})
both_eyes_present_yes_0_0 = TensorMap('Both-eyes-present_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Both-eyes-present_Yes_0_0': 0, 'Both-eyes-present_Yes_0_0': 1})
cereal_type_oat_cereal_eg_ready_brek_porridge_0_0 = TensorMap('Cereal-type_Oat-cereal-eg-Ready-Brek-porridge_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Cereal-type_Oat-cereal-eg-Ready-Brek-porridge_0_0': 0, 'Cereal-type_Oat-cereal-eg-Ready-Brek-porridge_0_0': 1})
cheese_intake_once_a_week_0_0 = TensorMap('Cheese-intake_Once-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Cheese-intake_Once-a-week_0_0': 0, 'Cheese-intake_Once-a-week_0_0': 1})
chest_pain_felt_during_physical_activity_no_0_0 = TensorMap('Chest-pain-felt-during-physical-activity_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Chest-pain-felt-during-physical-activity_No_0_0': 0, 'Chest-pain-felt-during-physical-activity_No_0_0': 1})
chest_pain_or_discomfort_yes_0_0 = TensorMap('Chest-pain-or-discomfort_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Chest-pain-or-discomfort_Yes_0_0': 0, 'Chest-pain-or-discomfort_Yes_0_0': 1})
cochlear_implant_no_0_0 = TensorMap('Cochlear-implant_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Cochlear-implant_No_0_0': 0, 'Cochlear-implant_No_0_0': 1})
coffee_type_ground_coffee_include_espresso_filter_etc_0_0 = TensorMap('Coffee-type_Ground-coffee-include-espresso-filter-etc_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Coffee-type_Ground-coffee-include-espresso-filter-etc_0_0': 0, 'Coffee-type_Ground-coffee-include-espresso-filter-etc_0_0': 1})
comparative_height_size_at_age_10_about_average_0_0 = TensorMap('Comparative-height-size-at-age-10_About-average_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Comparative-height-size-at-age-10_About-average_0_0': 0, 'Comparative-height-size-at-age-10_About-average_0_0': 1})
completion_status_left_completed_0_0 = TensorMap('Completion-status-left_completed_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Completion-status-left_completed_0_0': 0, 'Completion-status-left_completed_0_0': 1})
completion_status_of_test_fully_completed_0_0 = TensorMap('Completion-status-of-test_Fully-completed_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Completion-status-of-test_Fully-completed_0_0': 0, 'Completion-status-of-test_Fully-completed_0_0': 1})
completion_status_right_completed_0_0 = TensorMap('Completion-status-right_completed_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Completion-status-right_completed_0_0': 0, 'Completion-status-right_completed_0_0': 1})
current_eye_infection_no_0_0 = TensorMap('Current-eye-infection_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Current-eye-infection_No_0_0': 0, 'Current-eye-infection_No_0_0': 1})
direct_or_mirror_view_left_plain_0_0 = TensorMap('Direct-or-mirror-view-left_plain_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Direct-or-mirror-view-left_plain_0_0': 0, 'Direct-or-mirror-view-left_plain_0_0': 1})
direct_or_mirror_view_right_plain_0_0 = TensorMap('Direct-or-mirror-view-right_plain_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Direct-or-mirror-view-right_plain_0_0': 0, 'Direct-or-mirror-view-right_plain_0_0': 1})
doctor_restricts_physical_activity_due_to_heart_condition_no_0_0 = TensorMap('Doctor-restricts-physical-activity-due-to-heart-condition_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Doctor-restricts-physical-activity-due-to-heart-condition_No_0_0': 0, 'Doctor-restricts-physical-activity-due-to-heart-condition_No_0_0': 1})
drive_faster_than_motorway_speed_limit_neverrarely_0_0 = TensorMap('Drive-faster-than-motorway-speed-limit_Neverrarely_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Drive-faster-than-motorway-speed-limit_Neverrarely_0_0': 0, 'Drive-faster-than-motorway-speed-limit_Neverrarely_0_0': 1})
duration_of_light_diy_between_30_minutes_and_1_hour_0_0 = TensorMap('Duration-of-light-DIY_Between-30-minutes-and-1-hour_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Duration-of-light-DIY_Between-30-minutes-and-1-hour_0_0': 0, 'Duration-of-light-DIY_Between-30-minutes-and-1-hour_0_0': 1})
duration_walking_for_pleasure_between_15_and_30_minutes_0_0 = TensorMap('Duration-walking-for-pleasure_Between-15-and-30-minutes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Duration-walking-for-pleasure_Between-15-and-30-minutes_0_0': 0, 'Duration-walking-for-pleasure_Between-15-and-30-minutes_0_0': 1})
ever_had_eye_surgery_no_0_0 = TensorMap('Ever-had-eye-surgery_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Ever-had-eye-surgery_No_0_0': 0, 'Ever-had-eye-surgery_No_0_0': 1})
eye_problemsdisorders_none_of_the_above_0_0 = TensorMap('Eye-problemsdisorders_None-of-the-above_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Eye-problemsdisorders_None-of-the-above_0_0': 0, 'Eye-problemsdisorders_None-of-the-above_0_0': 1})
final_attempt_correct_yes_0_0 = TensorMap('Final-attempt-correct_yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Final-attempt-correct_yes_0_0': 0, 'Final-attempt-correct_yes_0_0': 1})
fractured_heel_left_no_0_0 = TensorMap('Fractured-heel-left_no_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Fractured-heel-left_no_0_0': 0, 'Fractured-heel-left_no_0_0': 1})
fractured_heel_right_no_0_0 = TensorMap('Fractured-heel-right_no_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Fractured-heel-right_no_0_0': 0, 'Fractured-heel-right_no_0_0': 1})
frequency_of_stair_climbing_in_last_4_weeks_610_times_a_day_0_0 = TensorMap('Frequency-of-stair-climbing-in-last-4-weeks_610-times-a-day_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Frequency-of-stair-climbing-in-last-4-weeks_610-times-a-day_0_0': 0, 'Frequency-of-stair-climbing-in-last-4-weeks_610-times-a-day_0_0': 1})
hearing_difficultyproblems_with_background_noise_no_0_0 = TensorMap('Hearing-difficultyproblems-with-background-noise_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Hearing-difficultyproblems-with-background-noise_No_0_0': 0, 'Hearing-difficultyproblems-with-background-noise_No_0_0': 1})
hearing_test_done_yes_0_0 = TensorMap('Hearing-test-done_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Hearing-test-done_Yes_0_0': 0, 'Hearing-test-done_Yes_0_0': 1})
heel_ultrasound_method_left_direct_entry_0_0 = TensorMap('Heel-ultrasound-method-left_Direct-entry_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Heel-ultrasound-method-left_Direct-entry_0_0': 0, 'Heel-ultrasound-method-left_Direct-entry_0_0': 1})
heel_ultrasound_method_right_direct_entry_0_0 = TensorMap('Heel-ultrasound-method-right_Direct-entry_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Heel-ultrasound-method-right_Direct-entry_0_0': 0, 'Heel-ultrasound-method-right_Direct-entry_0_0': 1})
hot_drink_temperature_warm_0_0 = TensorMap('Hot-drink-temperature_Warm_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Hot-drink-temperature_Warm_0_0': 0, 'Hot-drink-temperature_Warm_0_0': 1})
illnesses_of_father_high_blood_pressure_0_0 = TensorMap('Illnesses-of-father_High-blood-pressure_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Illnesses-of-father_High-blood-pressure_0_0': 0, 'Illnesses-of-father_High-blood-pressure_0_0': 1})
intraocular_pressure_iop_method_left_measurable_0_0 = TensorMap('Intraocular-pressure-IOP-method-left_Measurable_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Intraocular-pressure-IOP-method-left_Measurable_0_0': 0, 'Intraocular-pressure-IOP-method-left_Measurable_0_0': 1})
intraocular_pressure_iop_method_right_measurable_0_0 = TensorMap('Intraocular-pressure-IOP-method-right_Measurable_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Intraocular-pressure-IOP-method-right_Measurable_0_0': 0, 'Intraocular-pressure-IOP-method-right_Measurable_0_0': 1})
leg_pain_on_walking_no_0_0 = TensorMap('Leg-pain-on-walking_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Leg-pain-on-walking_No_0_0': 0, 'Leg-pain-on-walking_No_0_0': 1})
likelihood_of_resuming_smoking_no_definitely_not_0_0 = TensorMap('Likelihood-of-resuming-smoking_No-definitely-not_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Likelihood-of-resuming-smoking_No-definitely-not_0_0': 0, 'Likelihood-of-resuming-smoking_No-definitely-not_0_0': 1})
major_dietary_changes_in_the_last_5_years_yes_because_of_other_reasons_0_0 = TensorMap('Major-dietary-changes-in-the-last-5-years_Yes-because-of-other-reasons_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Major-dietary-changes-in-the-last-5-years_Yes-because-of-other-reasons_0_0': 0, 'Major-dietary-changes-in-the-last-5-years_Yes-because-of-other-reasons_0_0': 1})
mineral_and_other_dietary_supplements_fish_oil_including_cod_liver_oil_0_0 = TensorMap('Mineral-and-other-dietary-supplements_Fish-oil-including-cod-liver-oil_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Mineral-and-other-dietary-supplements_Fish-oil-including-cod-liver-oil_0_0': 0, 'Mineral-and-other-dietary-supplements_Fish-oil-including-cod-liver-oil_0_0': 1})
nonaccidental_death_in_close_genetic_family_no_0_0 = TensorMap('Nonaccidental-death-in-close-genetic-family_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Nonaccidental-death-in-close-genetic-family_No_0_0': 0, 'Nonaccidental-death-in-close-genetic-family_No_0_0': 1})
nonoily_fish_intake_less_than_once_a_week_0_0 = TensorMap('Nonoily-fish-intake_Less-than-once-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Nonoily-fish-intake_Less-than-once-a-week_0_0': 0, 'Nonoily-fish-intake_Less-than-once-a-week_0_0': 1})
oily_fish_intake_24_times_a_week_0_0 = TensorMap('Oily-fish-intake_24-times-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Oily-fish-intake_24-times-a-week_0_0': 0, 'Oily-fish-intake_24-times-a-week_0_0': 1})
other_eye_problems_yes_0_0 = TensorMap('Other-eye-problems_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Other-eye-problems_Yes_0_0': 0, 'Other-eye-problems_Yes_0_0': 1})
overall_health_rating_fair_0_0 = TensorMap('Overall-health-rating_Fair_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Overall-health-rating_Fair_0_0': 0, 'Overall-health-rating_Fair_0_0': 1})
pm_final_answer_orange_circle_0_0 = TensorMap('PM-final-answer_Orange-circle_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_PM-final-answer_Orange-circle_0_0': 0, 'PM-final-answer_Orange-circle_0_0': 1})
pm_initial_answer_orange_circle_0_0 = TensorMap('PM-initial-answer_Orange-circle_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_PM-initial-answer_Orange-circle_0_0': 0, 'PM-initial-answer_Orange-circle_0_0': 1})
past_tobacco_smoking_smoked_on_most_or_all_days_0_0 = TensorMap('Past-tobacco-smoking_Smoked-on-most-or-all-days_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Past-tobacco-smoking_Smoked-on-most-or-all-days_0_0': 0, 'Past-tobacco-smoking_Smoked-on-most-or-all-days_0_0': 1})
poultry_intake_once_a_week_0_0 = TensorMap('Poultry-intake_Once-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Poultry-intake_Once-a-week_0_0': 0, 'Poultry-intake_Once-a-week_0_0': 1})
processed_meat_intake_once_a_week_0_0 = TensorMap('Processed-meat-intake_Once-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Processed-meat-intake_Once-a-week_0_0': 0, 'Processed-meat-intake_Once-a-week_0_0': 1})
prospective_memory_result_correct_recall_on_first_attempt_0_0 = TensorMap('Prospective-memory-result_Correct-recall-on-first-attempt_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Prospective-memory-result_Correct-recall-on-first-attempt_0_0': 0, 'Prospective-memory-result_Correct-recall-on-first-attempt_0_0': 1})
relative_age_of_first_facial_hair_about_average_age_0_0 = TensorMap('Relative-age-of-first-facial-hair_About-average-age_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Relative-age-of-first-facial-hair_About-average-age_0_0': 0, 'Relative-age-of-first-facial-hair_About-average-age_0_0': 1})
salt_added_to_food_sometimes_0_0 = TensorMap('Salt-added-to-food_Sometimes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Salt-added-to-food_Sometimes_0_0': 0, 'Salt-added-to-food_Sometimes_0_0': 1})
shortness_of_breath_walking_on_level_ground_no_0_0 = TensorMap('Shortness-of-breath-walking-on-level-ground_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Shortness-of-breath-walking-on-level-ground_No_0_0': 0, 'Shortness-of-breath-walking-on-level-ground_No_0_0': 1})
smoking_status_previous_0_0 = TensorMap('Smoking-status_Previous_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Smoking-status_Previous_0_0': 0, 'Smoking-status_Previous_0_0': 1})
spread_type_other_type_of_spreadmargarine_0_0 = TensorMap('Spread-type_Other-type-of-spreadmargarine_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Spread-type_Other-type-of-spreadmargarine_0_0': 0, 'Spread-type_Other-type-of-spreadmargarine_0_0': 1})
stiffness_method_direct_entry_0_0 = TensorMap('Stiffness-method_Direct-entry_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Stiffness-method_Direct-entry_0_0': 0, 'Stiffness-method_Direct-entry_0_0': 1})
test_completion_status_complete_0_0 = TensorMap('Test-completion-status_complete_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Test-completion-status_complete_0_0': 0, 'Test-completion-status_complete_0_0': 1})
tinnitus_no_never_0_0 = TensorMap('Tinnitus_No-never_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Tinnitus_No-never_0_0': 0, 'Tinnitus_No-never_0_0': 1})
triplet_correct_left_no_0_12 = TensorMap('Triplet-correct-left_no_0_12', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_no_0_12': 0, 'Triplet-correct-left_no_0_12': 1})
triplet_correct_left_no_0_13 = TensorMap('Triplet-correct-left_no_0_13', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_no_0_13': 0, 'Triplet-correct-left_no_0_13': 1})
triplet_correct_left_no_0_14 = TensorMap('Triplet-correct-left_no_0_14', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_no_0_14': 0, 'Triplet-correct-left_no_0_14': 1})
triplet_correct_left_no_0_5 = TensorMap('Triplet-correct-left_no_0_5', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_no_0_5': 0, 'Triplet-correct-left_no_0_5': 1})
triplet_correct_left_no_0_6 = TensorMap('Triplet-correct-left_no_0_6', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_no_0_6': 0, 'Triplet-correct-left_no_0_6': 1})
triplet_correct_left_no_0_7 = TensorMap('Triplet-correct-left_no_0_7', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_no_0_7': 0, 'Triplet-correct-left_no_0_7': 1})
triplet_correct_left_no_0_8 = TensorMap('Triplet-correct-left_no_0_8', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_no_0_8': 0, 'Triplet-correct-left_no_0_8': 1})
triplet_correct_left_yes_0_1 = TensorMap('Triplet-correct-left_yes_0_1', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_yes_0_1': 0, 'Triplet-correct-left_yes_0_1': 1})
triplet_correct_left_yes_0_10 = TensorMap('Triplet-correct-left_yes_0_10', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_yes_0_10': 0, 'Triplet-correct-left_yes_0_10': 1})
triplet_correct_left_yes_0_11 = TensorMap('Triplet-correct-left_yes_0_11', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_yes_0_11': 0, 'Triplet-correct-left_yes_0_11': 1})
triplet_correct_left_yes_0_15 = TensorMap('Triplet-correct-left_yes_0_15', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_yes_0_15': 0, 'Triplet-correct-left_yes_0_15': 1})
triplet_correct_left_yes_0_2 = TensorMap('Triplet-correct-left_yes_0_2', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_yes_0_2': 0, 'Triplet-correct-left_yes_0_2': 1})
triplet_correct_left_yes_0_3 = TensorMap('Triplet-correct-left_yes_0_3', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_yes_0_3': 0, 'Triplet-correct-left_yes_0_3': 1})
triplet_correct_left_yes_0_4 = TensorMap('Triplet-correct-left_yes_0_4', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_yes_0_4': 0, 'Triplet-correct-left_yes_0_4': 1})
triplet_correct_left_yes_0_9 = TensorMap('Triplet-correct-left_yes_0_9', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_yes_0_9': 0, 'Triplet-correct-left_yes_0_9': 1})
triplet_correct_right_no_0_11 = TensorMap('Triplet-correct-right_no_0_11', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_no_0_11': 0, 'Triplet-correct-right_no_0_11': 1})
triplet_correct_right_no_0_12 = TensorMap('Triplet-correct-right_no_0_12', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_no_0_12': 0, 'Triplet-correct-right_no_0_12': 1})
triplet_correct_right_no_0_15 = TensorMap('Triplet-correct-right_no_0_15', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_no_0_15': 0, 'Triplet-correct-right_no_0_15': 1})
triplet_correct_right_no_0_5 = TensorMap('Triplet-correct-right_no_0_5', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_no_0_5': 0, 'Triplet-correct-right_no_0_5': 1})
triplet_correct_right_no_0_6 = TensorMap('Triplet-correct-right_no_0_6', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_no_0_6': 0, 'Triplet-correct-right_no_0_6': 1})
triplet_correct_right_no_0_8 = TensorMap('Triplet-correct-right_no_0_8', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_no_0_8': 0, 'Triplet-correct-right_no_0_8': 1})
triplet_correct_right_no_0_9 = TensorMap('Triplet-correct-right_no_0_9', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_no_0_9': 0, 'Triplet-correct-right_no_0_9': 1})
triplet_correct_right_yes_0_1 = TensorMap('Triplet-correct-right_yes_0_1', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_yes_0_1': 0, 'Triplet-correct-right_yes_0_1': 1})
triplet_correct_right_yes_0_10 = TensorMap('Triplet-correct-right_yes_0_10', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_yes_0_10': 0, 'Triplet-correct-right_yes_0_10': 1})
triplet_correct_right_yes_0_13 = TensorMap('Triplet-correct-right_yes_0_13', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_yes_0_13': 0, 'Triplet-correct-right_yes_0_13': 1})
triplet_correct_right_yes_0_14 = TensorMap('Triplet-correct-right_yes_0_14', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_yes_0_14': 0, 'Triplet-correct-right_yes_0_14': 1})
triplet_correct_right_yes_0_2 = TensorMap('Triplet-correct-right_yes_0_2', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_yes_0_2': 0, 'Triplet-correct-right_yes_0_2': 1})
triplet_correct_right_yes_0_3 = TensorMap('Triplet-correct-right_yes_0_3', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_yes_0_3': 0, 'Triplet-correct-right_yes_0_3': 1})
triplet_correct_right_yes_0_4 = TensorMap('Triplet-correct-right_yes_0_4', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_yes_0_4': 0, 'Triplet-correct-right_yes_0_4': 1})
triplet_correct_right_yes_0_7 = TensorMap('Triplet-correct-right_yes_0_7', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_yes_0_7': 0, 'Triplet-correct-right_yes_0_7': 1})
type_of_tobacco_previously_smoked_manufactured_cigarettes_0_0 = TensorMap('Type-of-tobacco-previously-smoked_Manufactured-cigarettes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Type-of-tobacco-previously-smoked_Manufactured-cigarettes_0_0': 0, 'Type-of-tobacco-previously-smoked_Manufactured-cigarettes_0_0': 1})
types_of_physical_activity_in_last_4_weeks_light_diy_eg_pruning_watering_the_lawn_0_2 = TensorMap('Types-of-physical-activity-in-last-4-weeks_Light-DIY-eg-pruning-watering-the-lawn_0_2', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Types-of-physical-activity-in-last-4-weeks_Light-DIY-eg-pruning-watering-the-lawn_0_2': 0, 'Types-of-physical-activity-in-last-4-weeks_Light-DIY-eg-pruning-watering-the-lawn_0_2': 1})
types_of_transport_used_excluding_work_walk_0_0 = TensorMap('Types-of-transport-used-excluding-work_Walk_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Types-of-transport-used-excluding-work_Walk_0_0': 0, 'Types-of-transport-used-excluding-work_Walk_0_0': 1})
use_of_sunuv_protection_sometimes_0_0 = TensorMap('Use-of-sunuv-protection_Sometimes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Use-of-sunuv-protection_Sometimes_0_0': 0, 'Use-of-sunuv-protection_Sometimes_0_0': 1})
visual_acuity_measured_left_measurable_0_0 = TensorMap('Visual-acuity-measured-left_Measurable_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Visual-acuity-measured-left_Measurable_0_0': 0, 'Visual-acuity-measured-left_Measurable_0_0': 1})
visual_acuity_measured_right_measurable_0_0 = TensorMap('Visual-acuity-measured-right_Measurable_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Visual-acuity-measured-right_Measurable_0_0': 0, 'Visual-acuity-measured-right_Measurable_0_0': 1})
vitamin_and_mineral_supplements_multivitamins_minerals_0_0 = TensorMap('Vitamin-and-mineral-supplements_Multivitamins-minerals_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Vitamin-and-mineral-supplements_Multivitamins-minerals_0_0': 0, 'Vitamin-and-mineral-supplements_Multivitamins-minerals_0_0': 1})
wheeze_or_whistling_in_the_chest_in_last_year_yes_0_0 = TensorMap('Wheeze-or-whistling-in-the-chest-in-last-year_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Wheeze-or-whistling-in-the-chest-in-last-year_Yes_0_0': 0, 'Wheeze-or-whistling-in-the-chest-in-last-year_Yes_0_0': 1})
alcohol_intake_versus_10_years_previously_more_nowadays_0_0 = TensorMap('Alcohol-intake-versus-10-years-previously_More-nowadays_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Alcohol-intake-versus-10-years-previously_More-nowadays_0_0': 0, 'Alcohol-intake-versus-10-years-previously_More-nowadays_0_0': 1})
beef_intake_less_than_once_a_week_0_0 = TensorMap('Beef-intake_Less-than-once-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Beef-intake_Less-than-once-a-week_0_0': 0, 'Beef-intake_Less-than-once-a-week_0_0': 1})
bilateral_oophorectomy_both_ovaries_removed_no_0_0 = TensorMap('Bilateral-oophorectomy-both-ovaries-removed_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Bilateral-oophorectomy-both-ovaries-removed_No_0_0': 0, 'Bilateral-oophorectomy-both-ovaries-removed_No_0_0': 1})
cereal_type_muesli_0_0 = TensorMap('Cereal-type_Muesli_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Cereal-type_Muesli_0_0': 0, 'Cereal-type_Muesli_0_0': 1})
ease_of_skin_tanning_never_tan_only_burn_0_0 = TensorMap('Ease-of-skin-tanning_Never-tan-only-burn_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Ease-of-skin-tanning_Never-tan-only-burn_0_0': 0, 'Ease-of-skin-tanning_Never-tan-only-burn_0_0': 1})
ever_had_bowel_cancer_screening_yes_0_0 = TensorMap('Ever-had-bowel-cancer-screening_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Ever-had-bowel-cancer-screening_Yes_0_0': 0, 'Ever-had-bowel-cancer-screening_Yes_0_0': 1})
ever_had_breast_cancer_screening_mammogram_yes_0_0 = TensorMap('Ever-had-breast-cancer-screening-mammogram_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Ever-had-breast-cancer-screening-mammogram_Yes_0_0': 0, 'Ever-had-breast-cancer-screening-mammogram_Yes_0_0': 1})
ever_had_cervical_smear_test_yes_0_0 = TensorMap('Ever-had-cervical-smear-test_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Ever-had-cervical-smear-test_Yes_0_0': 0, 'Ever-had-cervical-smear-test_Yes_0_0': 1})
ever_had_hysterectomy_womb_removed_no_0_0 = TensorMap('Ever-had-hysterectomy-womb-removed_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Ever-had-hysterectomy-womb-removed_No_0_0': 0, 'Ever-had-hysterectomy-womb-removed_No_0_0': 1})
ever_had_stillbirth_spontaneous_miscarriage_or_termination_no_0_0 = TensorMap('Ever-had-stillbirth-spontaneous-miscarriage-or-termination_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Ever-had-stillbirth-spontaneous-miscarriage-or-termination_No_0_0': 0, 'Ever-had-stillbirth-spontaneous-miscarriage-or-termination_No_0_0': 1})
ever_taken_oral_contraceptive_pill_yes_0_0 = TensorMap('Ever-taken-oral-contraceptive-pill_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Ever-taken-oral-contraceptive-pill_Yes_0_0': 0, 'Ever-taken-oral-contraceptive-pill_Yes_0_0': 1})
ever_used_hormonereplacement_therapy_hrt_no_0_0 = TensorMap('Ever-used-hormonereplacement-therapy-HRT_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Ever-used-hormonereplacement-therapy-HRT_No_0_0': 0, 'Ever-used-hormonereplacement-therapy-HRT_No_0_0': 1})
fi6_conditional_arithmetic_69_0_0 = TensorMap('FI6-conditional-arithmetic_69_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_FI6-conditional-arithmetic_69_0_0': 0, 'FI6-conditional-arithmetic_69_0_0': 1})
fi7_synonym_cease_0_0 = TensorMap('FI7-synonym_cease_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_FI7-synonym_cease_0_0': 0, 'FI7-synonym_cease_0_0': 1})
father_still_alive_no_0_0 = TensorMap('Father-still-alive_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Father-still-alive_No_0_0': 0, 'Father-still-alive_No_0_0': 1})
genetic_sex_female_0_0 = TensorMap('Genetic-sex_Female_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Genetic-sex_Female_0_0': 0, 'Genetic-sex_Female_0_0': 1})
had_menopause_yes_0_0 = TensorMap('Had-menopause_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Had-menopause_Yes_0_0': 0, 'Had-menopause_Yes_0_0': 1})
had_other_major_operations_no_0_0 = TensorMap('Had-other-major-operations_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Had-other-major-operations_No_0_0': 0, 'Had-other-major-operations_No_0_0': 1})
hair_colour_natural_before_greying_light_brown_0_0 = TensorMap('Hair-colour-natural-before-greying_Light-brown_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Hair-colour-natural-before-greying_Light-brown_0_0': 0, 'Hair-colour-natural-before-greying_Light-brown_0_0': 1})
loud_music_exposure_frequency_no_0_0 = TensorMap('Loud-music-exposure-frequency_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Loud-music-exposure-frequency_No_0_0': 0, 'Loud-music-exposure-frequency_No_0_0': 1})
medication_for_cholesterol_blood_pressure_diabetes_or_take_exogenous_hormones_none_of_the_above_0_0 = TensorMap('Medication-for-cholesterol-blood-pressure-diabetes-or-take-exogenous-hormones_None-of-the-above_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Medication-for-cholesterol-blood-pressure-diabetes-or-take-exogenous-hormones_None-of-the-above_0_0': 0, 'Medication-for-cholesterol-blood-pressure-diabetes-or-take-exogenous-hormones_None-of-the-above_0_0': 1})
mother_still_alive_no_0_0 = TensorMap('Mother-still-alive_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Mother-still-alive_No_0_0': 0, 'Mother-still-alive_No_0_0': 1})
noisy_workplace_no_0_0 = TensorMap('Noisy-workplace_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Noisy-workplace_No_0_0': 0, 'Noisy-workplace_No_0_0': 1})
nonoily_fish_intake_once_a_week_0_0 = TensorMap('Nonoily-fish-intake_Once-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Nonoily-fish-intake_Once-a-week_0_0': 0, 'Nonoily-fish-intake_Once-a-week_0_0': 1})
overall_health_rating_good_0_0 = TensorMap('Overall-health-rating_Good_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Overall-health-rating_Good_0_0': 0, 'Overall-health-rating_Good_0_0': 1})
pregnant_no_0_0 = TensorMap('Pregnant_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Pregnant_No_0_0': 0, 'Pregnant_No_0_0': 1})
sex_female_0_0 = TensorMap('Sex_Female_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Sex_Female_0_0': 0, 'Sex_Female_0_0': 1})
triplet_correct_left_no_0_10 = TensorMap('Triplet-correct-left_no_0_10', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_no_0_10': 0, 'Triplet-correct-left_no_0_10': 1})
triplet_correct_left_no_0_15 = TensorMap('Triplet-correct-left_no_0_15', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_no_0_15': 0, 'Triplet-correct-left_no_0_15': 1})
triplet_correct_left_no_0_4 = TensorMap('Triplet-correct-left_no_0_4', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_no_0_4': 0, 'Triplet-correct-left_no_0_4': 1})
triplet_correct_left_no_0_9 = TensorMap('Triplet-correct-left_no_0_9', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_no_0_9': 0, 'Triplet-correct-left_no_0_9': 1})
triplet_correct_left_yes_0_14 = TensorMap('Triplet-correct-left_yes_0_14', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_yes_0_14': 0, 'Triplet-correct-left_yes_0_14': 1})
triplet_correct_left_yes_0_5 = TensorMap('Triplet-correct-left_yes_0_5', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_yes_0_5': 0, 'Triplet-correct-left_yes_0_5': 1})
triplet_correct_left_yes_0_7 = TensorMap('Triplet-correct-left_yes_0_7', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_yes_0_7': 0, 'Triplet-correct-left_yes_0_7': 1})
triplet_correct_left_yes_0_8 = TensorMap('Triplet-correct-left_yes_0_8', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_yes_0_8': 0, 'Triplet-correct-left_yes_0_8': 1})
triplet_correct_right_no_0_14 = TensorMap('Triplet-correct-right_no_0_14', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_no_0_14': 0, 'Triplet-correct-right_no_0_14': 1})
triplet_correct_right_yes_0_12 = TensorMap('Triplet-correct-right_yes_0_12', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_yes_0_12': 0, 'Triplet-correct-right_yes_0_12': 1})
triplet_correct_right_yes_0_6 = TensorMap('Triplet-correct-right_yes_0_6', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_yes_0_6': 0, 'Triplet-correct-right_yes_0_6': 1})
triplet_correct_right_yes_0_9 = TensorMap('Triplet-correct-right_yes_0_9', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_yes_0_9': 0, 'Triplet-correct-right_yes_0_9': 1})
use_of_sunuv_protection_most_of_the_time_0_0 = TensorMap('Use-of-sunuv-protection_Most-of-the-time_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Use-of-sunuv-protection_Most-of-the-time_0_0': 0, 'Use-of-sunuv-protection_Most-of-the-time_0_0': 1})
hernia = TensorMap('hernia', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_hernia': 0, 'hernia': 1})
hypertension = TensorMap('hypertension', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_hypertension': 0, 'hypertension': 1})
average_total_household_income_before_tax_18000_to_30999_0_0 = TensorMap('Average-total-household-income-before-tax_18000-to-30999_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Average-total-household-income-before-tax_18000-to-30999_0_0': 0, 'Average-total-household-income-before-tax_18000-to-30999_0_0': 1})
hairbalding_pattern_pattern_1_0_0 = TensorMap('Hairbalding-pattern_Pattern-1_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Hairbalding-pattern_Pattern-1_0_0': 0, 'Hairbalding-pattern_Pattern-1_0_0': 1})
current_employment_status_retired_0_0 = TensorMap('Current-employment-status_Retired_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Current-employment-status_Retired_0_0': 0, 'Current-employment-status_Retired_0_0': 1})
ever_used_hormonereplacement_therapy_hrt_yes_0_0 = TensorMap('Ever-used-hormonereplacement-therapy-HRT_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Ever-used-hormonereplacement-therapy-HRT_Yes_0_0': 0, 'Ever-used-hormonereplacement-therapy-HRT_Yes_0_0': 1})
hearing_difficultyproblems_yes_0_0 = TensorMap('Hearing-difficultyproblems_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Hearing-difficultyproblems_Yes_0_0': 0, 'Hearing-difficultyproblems_Yes_0_0': 1})
qualifications_none_of_the_above_0_0 = TensorMap('Qualifications_None-of-the-above_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Qualifications_None-of-the-above_0_0': 0, 'Qualifications_None-of-the-above_0_0': 1})
taking_other_prescription_medications_yes_you_will_be_asked_about_this_later_by_an_interviewer_0_0 = TensorMap('Taking-other-prescription-medications_Yes-you-will-be-asked-about-this-later-by-an-interviewer_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Taking-other-prescription-medications_Yes-you-will-be-asked-about-this-later-by-an-interviewer_0_0': 0, 'Taking-other-prescription-medications_Yes-you-will-be-asked-about-this-later-by-an-interviewer_0_0': 1})
types_of_physical_activity_in_last_4_weeks_light_diy_eg_pruning_watering_the_lawn_0_1 = TensorMap('Types-of-physical-activity-in-last-4-weeks_Light-DIY-eg-pruning-watering-the-lawn_0_1', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Types-of-physical-activity-in-last-4-weeks_Light-DIY-eg-pruning-watering-the-lawn_0_1': 0, 'Types-of-physical-activity-in-last-4-weeks_Light-DIY-eg-pruning-watering-the-lawn_0_1': 1})
hypercholesterolemia = TensorMap('hypercholesterolemia', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_hypercholesterolemia': 0, 'hypercholesterolemia': 1})
breastfed_as_a_baby_no_0_0 = TensorMap('Breastfed-as-a-baby_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Breastfed-as-a-baby_No_0_0': 0, 'Breastfed-as-a-baby_No_0_0': 1})
coffee_type_decaffeinated_coffee_any_type_0_0 = TensorMap('Coffee-type_Decaffeinated-coffee-any-type_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Coffee-type_Decaffeinated-coffee-any-type_0_0': 0, 'Coffee-type_Decaffeinated-coffee-any-type_0_0': 1})
use_of_sunuv_protection_always_0_0 = TensorMap('Use-of-sunuv-protection_Always_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Use-of-sunuv-protection_Always_0_0': 0, 'Use-of-sunuv-protection_Always_0_0': 1})
variation_in_diet_neverrarely_0_0 = TensorMap('Variation-in-diet_Neverrarely_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Variation-in-diet_Neverrarely_0_0': 0, 'Variation-in-diet_Neverrarely_0_0': 1})
alcohol_intake_frequency_three_or_four_times_a_week_0_0 = TensorMap('Alcohol-intake-frequency_Three-or-four-times-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Alcohol-intake-frequency_Three-or-four-times-a-week_0_0': 0, 'Alcohol-intake-frequency_Three-or-four-times-a-week_0_0': 1})
back_pain_for_3_months_yes_0_0 = TensorMap('Back-pain-for-3-months_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Back-pain-for-3-months_Yes_0_0': 0, 'Back-pain-for-3-months_Yes_0_0': 1})
comparative_height_size_at_age_10_taller_0_0 = TensorMap('Comparative-height-size-at-age-10_Taller_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Comparative-height-size-at-age-10_Taller_0_0': 0, 'Comparative-height-size-at-age-10_Taller_0_0': 1})
frequency_of_other_exercises_in_last_4_weeks_23_times_a_week_0_0 = TensorMap('Frequency-of-other-exercises-in-last-4-weeks_23-times-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Frequency-of-other-exercises-in-last-4-weeks_23-times-a-week_0_0': 0, 'Frequency-of-other-exercises-in-last-4-weeks_23-times-a-week_0_0': 1})
other_serious_medical_conditiondisability_diagnosed_by_doctor_yes_you_will_be_asked_about_this_later_by_an_interviewer_0_0 = TensorMap('Other-serious-medical-conditiondisability-diagnosed-by-doctor_Yes-you-will-be-asked-about-this-later-by-an-interviewer_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Other-serious-medical-conditiondisability-diagnosed-by-doctor_Yes-you-will-be-asked-about-this-later-by-an-interviewer_0_0': 0, 'Other-serious-medical-conditiondisability-diagnosed-by-doctor_Yes-you-will-be-asked-about-this-later-by-an-interviewer_0_0': 1})
asthma = TensorMap('asthma', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_asthma': 0, 'asthma': 1})
absence_of_notch_position_in_the_pulse_waveform_false_0_0 = TensorMap('Absence-of-notch-position-in-the-pulse-waveform_False_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Absence-of-notch-position-in-the-pulse-waveform_False_0_0': 0, 'Absence-of-notch-position-in-the-pulse-waveform_False_0_0': 1})
cheese_intake_less_than_once_a_week_0_0 = TensorMap('Cheese-intake_Less-than-once-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Cheese-intake_Less-than-once-a-week_0_0': 0, 'Cheese-intake_Less-than-once-a-week_0_0': 1})
chest_pain_felt_outside_physical_activity_no_0_0 = TensorMap('Chest-pain-felt-outside-physical-activity_No_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Chest-pain-felt-outside-physical-activity_No_0_0': 0, 'Chest-pain-felt-outside-physical-activity_No_0_0': 1})
comparative_body_size_at_age_10_plumper_0_0 = TensorMap('Comparative-body-size-at-age-10_Plumper_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Comparative-body-size-at-age-10_Plumper_0_0': 0, 'Comparative-body-size-at-age-10_Plumper_0_0': 1})
ease_of_skin_tanning_get_mildly_or_occasionally_tanned_0_0 = TensorMap('Ease-of-skin-tanning_Get-mildly-or-occasionally-tanned_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Ease-of-skin-tanning_Get-mildly-or-occasionally-tanned_0_0': 0, 'Ease-of-skin-tanning_Get-mildly-or-occasionally-tanned_0_0': 1})
had_other_major_operations_yes_you_will_be_asked_about_this_later_by_an_interviewer_0_0 = TensorMap('Had-other-major-operations_Yes-you-will-be-asked-about-this-later-by-an-interviewer_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Had-other-major-operations_Yes-you-will-be-asked-about-this-later-by-an-interviewer_0_0': 0, 'Had-other-major-operations_Yes-you-will-be-asked-about-this-later-by-an-interviewer_0_0': 1})
processed_meat_intake_less_than_once_a_week_0_0 = TensorMap('Processed-meat-intake_Less-than-once-a-week_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Processed-meat-intake_Less-than-once-a-week_0_0': 0, 'Processed-meat-intake_Less-than-once-a-week_0_0': 1})
triplet_correct_left_no_0_11 = TensorMap('Triplet-correct-left_no_0_11', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_no_0_11': 0, 'Triplet-correct-left_no_0_11': 1})
triplet_correct_left_yes_0_13 = TensorMap('Triplet-correct-left_yes_0_13', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_yes_0_13': 0, 'Triplet-correct-left_yes_0_13': 1})
triplet_correct_left_yes_0_6 = TensorMap('Triplet-correct-left_yes_0_6', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_yes_0_6': 0, 'Triplet-correct-left_yes_0_6': 1})
triplet_correct_right_no_0_10 = TensorMap('Triplet-correct-right_no_0_10', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_no_0_10': 0, 'Triplet-correct-right_no_0_10': 1})
triplet_correct_right_no_0_13 = TensorMap('Triplet-correct-right_no_0_13', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_no_0_13': 0, 'Triplet-correct-right_no_0_13': 1})
triplet_correct_right_no_0_4 = TensorMap('Triplet-correct-right_no_0_4', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_no_0_4': 0, 'Triplet-correct-right_no_0_4': 1})
triplet_correct_right_yes_0_15 = TensorMap('Triplet-correct-right_yes_0_15', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_yes_0_15': 0, 'Triplet-correct-right_yes_0_15': 1})
triplet_correct_right_yes_0_5 = TensorMap('Triplet-correct-right_yes_0_5', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_yes_0_5': 0, 'Triplet-correct-right_yes_0_5': 1})
triplet_correct_right_yes_0_8 = TensorMap('Triplet-correct-right_yes_0_8', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_yes_0_8': 0, 'Triplet-correct-right_yes_0_8': 1})
bread_type_white_0_0 = TensorMap('Bread-type_White_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Bread-type_White_0_0': 0, 'Bread-type_White_0_0': 1})
breastfed_as_a_baby_do_not_know_0_0 = TensorMap('Breastfed-as-a-baby_Do-not-know_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Breastfed-as-a-baby_Do-not-know_0_0': 0, 'Breastfed-as-a-baby_Do-not-know_0_0': 1})
never_eat_eggs_dairy_wheat_sugar_sugar_or_foodsdrinks_containing_sugar_0_0 = TensorMap('Never-eat-eggs-dairy-wheat-sugar_Sugar-or-foodsdrinks-containing-sugar_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Never-eat-eggs-dairy-wheat-sugar_Sugar-or-foodsdrinks-containing-sugar_0_0': 0, 'Never-eat-eggs-dairy-wheat-sugar_Sugar-or-foodsdrinks-containing-sugar_0_0': 1})
weight_change_compared_with_1_year_ago_yes_lost_weight_0_0 = TensorMap('Weight-change-compared-with-1-year-ago_Yes-lost-weight_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Weight-change-compared-with-1-year-ago_Yes-lost-weight_0_0': 0, 'Weight-change-compared-with-1-year-ago_Yes-lost-weight_0_0': 1})
neckshoulder_pain_for_3_months_yes_0_0 = TensorMap('Neckshoulder-pain-for-3-months_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Neckshoulder-pain-for-3-months_Yes_0_0': 0, 'Neckshoulder-pain-for-3-months_Yes_0_0': 1})
pain_types_experienced_in_last_month_neck_or_shoulder_pain_0_0 = TensorMap('Pain-types-experienced-in-last-month_Neck-or-shoulder-pain_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Pain-types-experienced-in-last-month_Neck-or-shoulder-pain_0_0': 0, 'Pain-types-experienced-in-last-month_Neck-or-shoulder-pain_0_0': 1})
anycancer = TensorMap('anycancer', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_anycancer': 0, 'anycancer': 1})
composite_mi_cad_stroke_death = TensorMap('composite_mi_cad_stroke_death', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_composite_mi_cad_stroke_death': 0, 'composite_mi_cad_stroke_death': 1})
composite_mi_cad_stroke_death_exclude_aml = TensorMap('composite_mi_cad_stroke_death_exclude_aml', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_composite_mi_cad_stroke_death_exclude_aml': 0, 'composite_mi_cad_stroke_death_exclude_aml': 1})
composite_mi_cad_stroke_death_exclude_heme = TensorMap('composite_mi_cad_stroke_death_exclude_heme', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_composite_mi_cad_stroke_death_exclude_heme': 0, 'composite_mi_cad_stroke_death_exclude_heme': 1})
knee_pain_for_3_months_yes_0_0 = TensorMap('Knee-pain-for-3-months_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Knee-pain-for-3-months_Yes_0_0': 0, 'Knee-pain-for-3-months_Yes_0_0': 1})
longstanding_illness_disability_or_infirmity_yes_0_0 = TensorMap('Longstanding-illness-disability-or-infirmity_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Longstanding-illness-disability-or-infirmity_Yes_0_0': 0, 'Longstanding-illness-disability-or-infirmity_Yes_0_0': 1})
noncancer_illness_code_selfreported_hypertension_0_0 = TensorMap('Noncancer-illness-code-selfreported_hypertension_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Noncancer-illness-code-selfreported_hypertension_0_0': 0, 'Noncancer-illness-code-selfreported_hypertension_0_0': 1})
pain_types_experienced_in_last_month_headache_0_0 = TensorMap('Pain-types-experienced-in-last-month_Headache_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Pain-types-experienced-in-last-month_Headache_0_0': 0, 'Pain-types-experienced-in-last-month_Headache_0_0': 1})
triplet_correct_left_yes_0_12 = TensorMap('Triplet-correct-left_yes_0_12', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-left_yes_0_12': 0, 'Triplet-correct-left_yes_0_12': 1})
vascularheart_problems_diagnosed_by_doctor_high_blood_pressure_0_0 = TensorMap('Vascularheart-problems-diagnosed-by-doctor_High-blood-pressure_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Vascularheart-problems-diagnosed-by-doctor_High-blood-pressure_0_0': 0, 'Vascularheart-problems-diagnosed-by-doctor_High-blood-pressure_0_0': 1})
cereal_type_other_eg_cornflakes_frosties_0_0 = TensorMap('Cereal-type_Other-eg-Cornflakes-Frosties_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Cereal-type_Other-eg-Cornflakes-Frosties_0_0': 0, 'Cereal-type_Other-eg-Cornflakes-Frosties_0_0': 1})
milk_type_used_skimmed_0_0 = TensorMap('Milk-type-used_Skimmed_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Milk-type-used_Skimmed_0_0': 0, 'Milk-type-used_Skimmed_0_0': 1})
nonbutter_spread_type_details_polyunsaturatedsunflower_oil_based_spread_eg_flora_0_0 = TensorMap('Nonbutter-spread-type-details_Polyunsaturatedsunflower-oil-based-spread-eg-Flora_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Nonbutter-spread-type-details_Polyunsaturatedsunflower-oil-based-spread-eg-Flora_0_0': 0, 'Nonbutter-spread-type-details_Polyunsaturatedsunflower-oil-based-spread-eg-Flora_0_0': 1})
imaging = TensorMap('imaging', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_imaging': 0, 'imaging': 1})
blood_clot_dvt_bronchitis_emphysema_asthma_rhinitis_eczema_allergy_diagnosed_by_doctor_hayfever_allergic_rhinitis_or_eczema_0_0 = TensorMap('Blood-clot-DVT-bronchitis-emphysema-asthma-rhinitis-eczema-allergy-diagnosed-by-doctor_Hayfever-allergic-rhinitis-or-eczema_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Blood-clot-DVT-bronchitis-emphysema-asthma-rhinitis-eczema-allergy-diagnosed-by-doctor_Hayfever-allergic-rhinitis-or-eczema_0_0': 0, 'Blood-clot-DVT-bronchitis-emphysema-asthma-rhinitis-eczema-allergy-diagnosed-by-doctor_Hayfever-allergic-rhinitis-or-eczema_0_0': 1})
lambmutton_intake_never_0_0 = TensorMap('Lambmutton-intake_Never_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Lambmutton-intake_Never_0_0': 0, 'Lambmutton-intake_Never_0_0': 1})
pork_intake_never_0_0 = TensorMap('Pork-intake_Never_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Pork-intake_Never_0_0': 0, 'Pork-intake_Never_0_0': 1})
triplet_correct_right_no_0_7 = TensorMap('Triplet-correct-right_no_0_7', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_no_0_7': 0, 'Triplet-correct-right_no_0_7': 1})
triplet_correct_right_yes_0_11 = TensorMap('Triplet-correct-right_yes_0_11', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Triplet-correct-right_yes_0_11': 0, 'Triplet-correct-right_yes_0_11': 1})
ever_had_stillbirth_spontaneous_miscarriage_or_termination_yes_0_0 = TensorMap('Ever-had-stillbirth-spontaneous-miscarriage-or-termination_Yes_0_0', Interpretation.CATEGORICAL, storage_type=StorageType.CATEGORICAL_INDEX, loss='categorical_crossentropy', channel_map={'no_Ever-had-stillbirth-spontaneous-miscarriage-or-termination_Yes_0_0': 0, 'Ever-had-stillbirth-spontaneous-miscarriage-or-termination_Yes_0_0': 1})
