#  TensorMaps automatically generated by tensor_map_maker.py
#  DO NOT EDIT

from TensorMap import TensorMap
from tensor_maps_by_hand import TMAPS 
from metrics import weighted_crossentropy
from defines import MRI_SEGMENTED_CHANNEL_MAP


TMAPS['mri-xyt-lax'] = TensorMap('mri-xyt-lax', (256, 256, 48), dependent_map=TMAPS['lax-view-detect'])
TMAPS['mri-xyt-lax'] = TensorMap('mri-xyt-sax', (256, 256, 48), dependent_map=TMAPS['sax-view-detect'])
TMAPS['mri-xyt-lax'] = TensorMap('mri-xyt-slax', (256, 256, 48), dependent_map=TMAPS['slax-view-detect'])
TMAPS['mri_slice_segmented'] = TensorMap('mri_slice_segmented', (256, 256, 3), loss='categorical_crossentropy', group='categorical', channel_map=MRI_SEGMENTED_CHANNEL_MAP)
TMAPS['mri_slice_segmented_weighted'] = TensorMap('mri_slice_segmented', (256, 256, 3), group='categorical', channel_map=MRI_SEGMENTED_CHANNEL_MAP,loss=weighted_crossentropy([20.0, 250.0, 250.0], 'mri_slice_segmented'))
TMAPS['mri_slice'] = TensorMap('mri_slice', (256, 256, 1), dependent_map=TMAPS['mri_slice_segmented'])
TMAPS['mri_slice_weighted'] = TensorMap('mri_slice', (256, 256, 1), dependent_map=TMAPS['mri_slice_segmented_weighted'])
TMAPS['cine_segmented_sax_inlinevf_segmented'] = TensorMap('cine_segmented_sax_inlinevf_segmented', (256, 256, 48, 3), loss='categorical_crossentropy', group='categorical', channel_map=MRI_SEGMENTED_CHANNEL_MAP)
TMAPS['cine_segmented_sax_inlinevf_segmented_weighted'] = TensorMap('cine_segmented_sax_inlinevf_segmented', (256, 256, 48, 3), group='categorical', channel_map=MRI_SEGMENTED_CHANNEL_MAP, loss=weighted_crossentropy([20.0, 250.0, 250.0], 'cine_segmented_sax_inlinevf_segmented'))
TMAPS['cine_segmented_sax_inlinevf'] = TensorMap('cine_segmented_sax_inlinevf', (256, 256, 48, 1), dependent_map=TMAPS['cine_segmented_sax_inlinevf_segmented'])
TMAPS['cine_segmented_sax_inlinevf_weighted'] = TensorMap('cine_segmented_sax_inlinevf', (256, 256, 48, 1), dependent_map=TMAPS['cine_segmented_sax_inlinevf_segmented_weighted'])
TMAPS['sax_inlinevf_zoom_mask'] = TensorMap('sax_inlinevf_zoom_mask', (96,96,48, 3), loss='categorical_crossentropy', group='categorical', channel_map=MRI_SEGMENTED_CHANNEL_MAP)
TMAPS['sax_inlinevf_zoom_mask_weighted'] = TensorMap('sax_inlinevf_zoom_mask', (96, 96, 48, 3), group='categorical', channel_map=MRI_SEGMENTED_CHANNEL_MAP,loss=weighted_crossentropy([5.0, 15.0, 15.0], 'sax_inlinevf_zoom_mask'))
TMAPS['sax_inlinevf_zoom'] = TensorMap('sax_inlinevf_zoom',(96,96,48, 1), dependent_map=TMAPS['sax_inlinevf_zoom_mask'])
TMAPS['sax_inlinevf_zoom_weighted'] = TensorMap('sax_inlinevf_zoom',(96,96,48, 1), dependent_map=TMAPS['sax_inlinevf_zoom_mask_weighted'])
TMAPS['mri_systole_diastole_segmented'] = TensorMap('mri_systole_diastole_segmented', (256, 256, 2, 3), loss='categorical_crossentropy', group='categorical', channel_map=MRI_SEGMENTED_CHANNEL_MAP)
TMAPS['mri_systole_diastole_segmented_weighted'] = TensorMap('mri_systole_diastole_segmented', (256, 256, 2, 3), group='categorical', channel_map=MRI_SEGMENTED_CHANNEL_MAP,loss=weighted_crossentropy([10.0, 50.0, 50.0], 'mri_systole_diastole_segmented'))
TMAPS['mri_systole_diastole'] = TensorMap('mri_systole_diastole', (256, 256, 2, 1), dependent_map=TMAPS['mri_systole_diastole_segmented'])
TMAPS['mri_systole_diastole_weighted'] = TensorMap('mri_systole_diastole', (256, 256, 2, 1), dependent_map=TMAPS['mri_systole_diastole_segmented_weighted'])
TMAPS['mri_systole_diastole_b0_b3_weighted'] = TensorMap('mri_systole_diastole', (256, 256, 2, 1), dependent_map=TMAPS['mri_systole_diastole_segmented_weighted'], hd5_override=list(range(4)))
TMAPS['mri_systole_diastole_b0_b6_weighted'] = TensorMap('mri_systole_diastole', (256, 256, 2, 1), dependent_map=TMAPS['mri_systole_diastole_segmented_weighted'], hd5_override=list(range(7)))
TMAPS['mri_systole_diastole_b0_b9_weighted'] = TensorMap('mri_systole_diastole', (256, 256, 2, 1), dependent_map=TMAPS['mri_systole_diastole_segmented_weighted'], hd5_override=list(range(10)))
TMAPS['mri_systole_diastole_8_segmented'] = TensorMap('mri_systole_diastole_8_segmented', (256, 256, 8, 3), loss='categorical_crossentropy',  group='categorical', channel_map=MRI_SEGMENTED_CHANNEL_MAP)
TMAPS['mri_systole_diastole_8_segmented_weighted'] = TensorMap('mri_systole_diastole_8_segmented', (256, 256, 8, 3), group='categorical', channel_map=MRI_SEGMENTED_CHANNEL_MAP,loss=weighted_crossentropy([20.0, 250.0, 250.0], 'mri_systole_diastole_8_segmented'))
TMAPS['mri_systole_diastole_8'] = TensorMap('mri_systole_diastole_8', (256, 256, 8, 1), dependent_map=TMAPS['mri_systole_diastole_8_segmented'])



#  Continuous tensor maps from pyukbb
TMAPS['22605_0'] = TensorMap('22605_Work-hours-per-week--exact-value_0_0', group='continuous', channel_map={'22605_Work-hours-per-week--exact-value_0_0':0, 'not-missing':1}, normalization = {'mean':40.435995249406176, 'std':8.814803556803398 }, annotation_units=2)
TMAPS['22631_0'] = TensorMap('22631_Period-spent-working-day-shifts_0_0', group='continuous', channel_map={'22631_Period-spent-working-day-shifts_0_0':0, 'not-missing':1}, normalization = {'mean':-292.811510031679, 'std':462.40730068416843 }, annotation_units=2)
TMAPS['22641_0'] = TensorMap('22641_Period-spent-working-mix-of-day-and-night-shifts_0_0', group='continuous', channel_map={'22641_Period-spent-working-mix-of-day-and-night-shifts_0_0':0, 'not-missing':1}, normalization = {'mean':5.6960232121522445, 'std':7.3092061945099065 }, annotation_units=2)
TMAPS['22651_0'] = TensorMap('22651_Period-spent-working-night-shifts_0_0', group='continuous', channel_map={'22651_Period-spent-working-night-shifts_0_0':0, 'not-missing':1}, normalization = {'mean':5.7575, 'std':8.41226448407323 }, annotation_units=2)
TMAPS['90012_0'] = TensorMap('90012_Overall-acceleration-average_0_0', group='continuous', channel_map={'90012_Overall-acceleration-average_0_0':0, 'not-missing':1}, normalization = {'mean':27.42290902078044, 'std':13.995510744143209 }, annotation_units=2)
TMAPS['90013_0'] = TensorMap('90013_Standard-deviation-of-acceleration_0_0', group='continuous', channel_map={'90013_Standard-deviation-of-acceleration_0_0':0, 'not-missing':1}, normalization = {'mean':53.71538517911359, 'std':28.681839639991356 }, annotation_units=2)
TMAPS['4207_0'] = TensorMap('4207_Pulse-wave-velocity-manual-entry_0_0', group='continuous', channel_map={'4207_Pulse-wave-velocity-manual-entry_0_0':0, 'not-missing':1}, normalization = {'mean':9.845776397515527, 'std':6.254279989417389 }, annotation_units=2)
TMAPS['21021_0'] = TensorMap('21021_Pulse-wave-Arterial-Stiffness-index_0_0', group='continuous', channel_map={'21021_Pulse-wave-Arterial-Stiffness-index_0_0':0, 'not-missing':1}, normalization = {'mean':9.337475451231278, 'std':4.045793736468595 }, annotation_units=2)
TMAPS['23098_0'] = TensorMap('23098_Weight_0_0', group='continuous', channel_map={'23098_Weight_0_0':0, 'not-missing':1}, normalization = {'mean':78.0329312914502, 'std':15.899631133831248 }, annotation_units=2)
TMAPS['23099_0'] = TensorMap('23099_Body-fat-percentage_0_0', group='continuous', channel_map={'23099_Body-fat-percentage_0_0':0, 'not-missing':1}, normalization = {'mean':31.45221391043504, 'std':8.547756645847654 }, annotation_units=2)
TMAPS['23100_0'] = TensorMap('23100_Whole-body-fat-mass_0_0', group='continuous', channel_map={'23100_Whole-body-fat-mass_0_0':0, 'not-missing':1}, normalization = {'mean':24.857192661297073, 'std':9.565518857625698 }, annotation_units=2)
TMAPS['23101_0'] = TensorMap('23101_Whole-body-fatfree-mass_0_0', group='continuous', channel_map={'23101_Whole-body-fatfree-mass_0_0':0, 'not-missing':1}, normalization = {'mean':53.217435697487815, 'std':11.496373113878326 }, annotation_units=2)
TMAPS['23102_0'] = TensorMap('23102_Whole-body-water-mass_0_0', group='continuous', channel_map={'23102_Whole-body-water-mass_0_0':0, 'not-missing':1}, normalization = {'mean':38.94724019809886, 'std':8.414094070886899 }, annotation_units=2)
TMAPS['23104_0'] = TensorMap('23104_Body-mass-index-BMI_0_0', group='continuous', channel_map={'23104_Body-mass-index-BMI_0_0':0, 'not-missing':1}, normalization = {'mean':27.432061533712652, 'std':4.785244772462738 }, annotation_units=2)
TMAPS['23105_0'] = TensorMap('23105_Basal-metabolic-rate_0_0', group='continuous', channel_map={'23105_Basal-metabolic-rate_0_0':0, 'not-missing':1}, normalization = {'mean':6616.103594758633, 'std':1364.284867672919 }, annotation_units=2)
TMAPS['23106_0'] = TensorMap('23106_Impedance-of-whole-body_0_0', group='continuous', channel_map={'23106_Impedance-of-whole-body_0_0':0, 'not-missing':1}, normalization = {'mean':600.1266827367306, 'std':88.97069275658839 }, annotation_units=2)
TMAPS['23107_0'] = TensorMap('23107_Impedance-of-leg-right_0_0', group='continuous', channel_map={'23107_Impedance-of-leg-right_0_0':0, 'not-missing':1}, normalization = {'mean':246.97704566499343, 'std':36.02420751924105 }, annotation_units=2)
TMAPS['23108_0'] = TensorMap('23108_Impedance-of-leg-left_0_0', group='continuous', channel_map={'23108_Impedance-of-leg-left_0_0':0, 'not-missing':1}, normalization = {'mean':247.7684231901716, 'std':35.70936804752652 }, annotation_units=2)
TMAPS['23109_0'] = TensorMap('23109_Impedance-of-arm-right_0_0', group='continuous', channel_map={'23109_Impedance-of-arm-right_0_0':0, 'not-missing':1}, normalization = {'mean':325.555077190517, 'std':55.41389582071339 }, annotation_units=2)
TMAPS['23110_0'] = TensorMap('23110_Impedance-of-arm-left_0_0', group='continuous', channel_map={'23110_Impedance-of-arm-left_0_0':0, 'not-missing':1}, normalization = {'mean':332.2656048834177, 'std':56.83446413263357 }, annotation_units=2)
TMAPS['23111_0'] = TensorMap('23111_Leg-fat-percentage-right_0_0', group='continuous', channel_map={'23111_Leg-fat-percentage-right_0_0':0, 'not-missing':1}, normalization = {'mean':32.04690250930603, 'std':10.694938758735105 }, annotation_units=2)
TMAPS['23112_0'] = TensorMap('23112_Leg-fat-mass-right_0_0', group='continuous', channel_map={'23112_Leg-fat-mass-right_0_0':0, 'not-missing':1}, normalization = {'mean':4.308735312871878, 'std':1.8984685270616948 }, annotation_units=2)
TMAPS['23113_0'] = TensorMap('23113_Leg-fatfree-mass-right_0_0', group='continuous', channel_map={'23113_Leg-fatfree-mass-right_0_0':0, 'not-missing':1}, normalization = {'mean':8.96960761616977, 'std':2.0246242497673084 }, annotation_units=2)
TMAPS['23114_0'] = TensorMap('23114_Leg-predicted-mass-right_0_0', group='continuous', channel_map={'23114_Leg-predicted-mass-right_0_0':0, 'not-missing':1}, normalization = {'mean':8.48642371934806, 'std':1.9272951159364318 }, annotation_units=2)
TMAPS['23115_0'] = TensorMap('23115_Leg-fat-percentage-left_0_0', group='continuous', channel_map={'23115_Leg-fat-percentage-left_0_0':0, 'not-missing':1}, normalization = {'mean':31.952381020074228, 'std':10.648576864659148 }, annotation_units=2)
TMAPS['23116_0'] = TensorMap('23116_Leg-fat-mass-left_0_0', group='continuous', channel_map={'23116_Leg-fat-mass-left_0_0':0, 'not-missing':1}, normalization = {'mean':4.242818586137574, 'std':1.8719364295815333 }, annotation_units=2)
TMAPS['23117_0'] = TensorMap('23117_Leg-fatfree-mass-left_0_0', group='continuous', channel_map={'23117_Leg-fatfree-mass-left_0_0':0, 'not-missing':1}, normalization = {'mean':8.866348491341268, 'std':2.0106670852250454 }, annotation_units=2)
TMAPS['23118_0'] = TensorMap('23118_Leg-predicted-mass-left_0_0', group='continuous', channel_map={'23118_Leg-predicted-mass-left_0_0':0, 'not-missing':1}, normalization = {'mean':8.389555327639963, 'std':1.9140614923347108 }, annotation_units=2)
TMAPS['23119_0'] = TensorMap('23119_Arm-fat-percentage-right_0_0', group='continuous', channel_map={'23119_Arm-fat-percentage-right_0_0':0, 'not-missing':1}, normalization = {'mean':29.532088274539955, 'std':10.173530661739369 }, annotation_units=2)
TMAPS['23120_0'] = TensorMap('23120_Arm-fat-mass-right_0_0', group='continuous', channel_map={'23120_Arm-fat-mass-right_0_0':0, 'not-missing':1}, normalization = {'mean':1.2398337324486135, 'std':0.6384677613157828 }, annotation_units=2)
TMAPS['23121_0'] = TensorMap('23121_Arm-fatfree-mass-right_0_0', group='continuous', channel_map={'23121_Arm-fatfree-mass-right_0_0':0, 'not-missing':1}, normalization = {'mean':2.89313800562619, 'std':0.8215353699367816 }, annotation_units=2)
TMAPS['23122_0'] = TensorMap('23122_Arm-predicted-mass-right_0_0', group='continuous', channel_map={'23122_Arm-predicted-mass-right_0_0':0, 'not-missing':1}, normalization = {'mean':2.7094420984427185, 'std':0.7833222741308254 }, annotation_units=2)
TMAPS['23123_0'] = TensorMap('23123_Arm-fat-percentage-left_0_0', group='continuous', channel_map={'23123_Arm-fat-percentage-left_0_0':0, 'not-missing':1}, normalization = {'mean':30.425667473755848, 'std':10.26760037403711 }, annotation_units=2)
TMAPS['23124_0'] = TensorMap('23124_Arm-fat-mass-left_0_0', group='continuous', channel_map={'23124_Arm-fat-mass-left_0_0':0, 'not-missing':1}, normalization = {'mean':1.3197929151549364, 'std':0.7131946852548494 }, annotation_units=2)
TMAPS['23125_0'] = TensorMap('23125_Arm-fatfree-mass-left_0_0', group='continuous', channel_map={'23125_Arm-fatfree-mass-left_0_0':0, 'not-missing':1}, normalization = {'mean':2.925631696346922, 'std':0.8372207475617244 }, annotation_units=2)
TMAPS['23126_0'] = TensorMap('23126_Arm-predicted-mass-left_0_0', group='continuous', channel_map={'23126_Arm-predicted-mass-left_0_0':0, 'not-missing':1}, normalization = {'mean':2.7400605818047796, 'std':0.7977868804885053 }, annotation_units=2)
TMAPS['23127_0'] = TensorMap('23127_Trunk-fat-percentage_0_0', group='continuous', channel_map={'23127_Trunk-fat-percentage_0_0':0, 'not-missing':1}, normalization = {'mean':31.17374904507412, 'std':8.008618730384642 }, annotation_units=2)
TMAPS['23128_0'] = TensorMap('23128_Trunk-fat-mass_0_0', group='continuous', channel_map={'23128_Trunk-fat-mass_0_0':0, 'not-missing':1}, normalization = {'mean':13.735938125435737, 'std':5.171161074196112 }, annotation_units=2)
TMAPS['23129_0'] = TensorMap('23129_Trunk-fatfree-mass_0_0', group='continuous', channel_map={'23129_Trunk-fatfree-mass_0_0':0, 'not-missing':1}, normalization = {'mean':29.585789913284717, 'std':5.981149165076632 }, annotation_units=2)
TMAPS['23130_0'] = TensorMap('23130_Trunk-predicted-mass_0_0', group='continuous', channel_map={'23130_Trunk-predicted-mass_0_0':0, 'not-missing':1}, normalization = {'mean':28.36853344552192, 'std':5.804824383328627 }, annotation_units=2)
TMAPS['3160_0'] = TensorMap('3160_Weight-manual-entry_0_0', group='continuous', channel_map={'3160_Weight-manual-entry_0_0':0, 'not-missing':1}, normalization = {'mean':79.50487357259372, 'std':18.71471981813927 }, annotation_units=2)
TMAPS['20015_0'] = TensorMap('20015_Sitting-height_0_0', group='continuous', channel_map={'20015_Sitting-height_0_0':0, 'not-missing':1}, normalization = {'mean':89.14293871251733, 'std':4.8826881787491105 }, annotation_units=2)
TMAPS['21001_0'] = TensorMap('21001_Body-mass-index-BMI_0_0', group='continuous', channel_map={'21001_Body-mass-index-BMI_0_0':0, 'not-missing':1}, normalization = {'mean':27.432818965751682, 'std':4.803169363515577 }, annotation_units=2)
TMAPS['21002_0'] = TensorMap('21002_Weight_0_0', group='continuous', channel_map={'21002_Weight_0_0':0, 'not-missing':1}, normalization = {'mean':78.05459335150074, 'std':15.945648716379363 }, annotation_units=2)
TMAPS['5084_0'] = TensorMap('5084_Spherical-power-right_0_0', group='continuous', channel_map={'5084_Spherical-power-right_0_0':0, 'not-missing':1}, normalization = {'mean':-0.8103133342085644, 'std':2.8265175495633215 }, annotation_units=2)
TMAPS['5085_0'] = TensorMap('5085_Spherical-power-left_0_0', group='continuous', channel_map={'5085_Spherical-power-left_0_0':0, 'not-missing':1}, normalization = {'mean':-0.7476071723362906, 'std':2.8391338488215667 }, annotation_units=2)
TMAPS['5086_0'] = TensorMap('5086_Cylindrical-power-left_0_0', group='continuous', channel_map={'5086_Cylindrical-power-left_0_0':0, 'not-missing':1}, normalization = {'mean':0.8718293496777348, 'std':0.7367542724014762 }, annotation_units=2)
TMAPS['5087_0'] = TensorMap('5087_Cylindrical-power-right_0_0', group='continuous', channel_map={'5087_Cylindrical-power-right_0_0':0, 'not-missing':1}, normalization = {'mean':0.8861422257231646, 'std':0.7415257545741885 }, annotation_units=2)
TMAPS['5096_0'] = TensorMap('5096_3mm-weak-meridian-left_0_0', group='continuous', channel_map={'5096_3mm-weak-meridian-left_0_0':0, 'not-missing':1}, normalization = {'mean':43.12860789074573, 'std':1.5301939842016343 }, annotation_units=2)
TMAPS['5097_0'] = TensorMap('5097_6mm-weak-meridian-left_0_0', group='continuous', channel_map={'5097_6mm-weak-meridian-left_0_0':0, 'not-missing':1}, normalization = {'mean':42.626696074528766, 'std':1.5434735510738795 }, annotation_units=2)
TMAPS['5098_0'] = TensorMap('5098_6mm-weak-meridian-right_0_0', group='continuous', channel_map={'5098_6mm-weak-meridian-right_0_0':0, 'not-missing':1}, normalization = {'mean':42.579722343641144, 'std':1.5418496817689604 }, annotation_units=2)
TMAPS['5099_0'] = TensorMap('5099_3mm-weak-meridian-right_0_0', group='continuous', channel_map={'5099_3mm-weak-meridian-right_0_0':0, 'not-missing':1}, normalization = {'mean':43.09490325574257, 'std':1.5263593699146587 }, annotation_units=2)
TMAPS['5116_0'] = TensorMap('5116_3mm-cylindrical-power-right_0_0', group='continuous', channel_map={'5116_3mm-cylindrical-power-right_0_0':0, 'not-missing':1}, normalization = {'mean':-0.8699948148350216, 'std':0.6623023262378106 }, annotation_units=2)
TMAPS['5117_0'] = TensorMap('5117_6mm-cylindrical-power-right_0_0', group='continuous', channel_map={'5117_6mm-cylindrical-power-right_0_0':0, 'not-missing':1}, normalization = {'mean':-0.8480864814236645, 'std':0.6869548674543547 }, annotation_units=2)
TMAPS['5118_0'] = TensorMap('5118_6mm-cylindrical-power-left_0_0', group='continuous', channel_map={'5118_6mm-cylindrical-power-left_0_0':0, 'not-missing':1}, normalization = {'mean':-0.8590785305163369, 'std':0.676672578014933 }, annotation_units=2)
TMAPS['5119_0'] = TensorMap('5119_3mm-cylindrical-power-left_0_0', group='continuous', channel_map={'5119_3mm-cylindrical-power-left_0_0':0, 'not-missing':1}, normalization = {'mean':-0.8788113878356153, 'std':0.6687961413480806 }, annotation_units=2)
TMAPS['5132_0'] = TensorMap('5132_3mm-strong-meridian-right_0_0', group='continuous', channel_map={'5132_3mm-strong-meridian-right_0_0':0, 'not-missing':1}, normalization = {'mean':43.96489807057836, 'std':1.6056959026466644 }, annotation_units=2)
TMAPS['5133_0'] = TensorMap('5133_6mm-strong-meridian-right_0_0', group='continuous', channel_map={'5133_6mm-strong-meridian-right_0_0':0, 'not-missing':1}, normalization = {'mean':43.42780882506577, 'std':1.578264079260177 }, annotation_units=2)
TMAPS['5134_0'] = TensorMap('5134_6mm-strong-meridian-left_0_0', group='continuous', channel_map={'5134_6mm-strong-meridian-left_0_0':0, 'not-missing':1}, normalization = {'mean':43.48577460504651, 'std':1.583154231760117 }, annotation_units=2)
TMAPS['5135_0'] = TensorMap('5135_3mm-strong-meridian-left_0_0', group='continuous', channel_map={'5135_3mm-strong-meridian-left_0_0':0, 'not-missing':1}, normalization = {'mean':44.00741927858263, 'std':1.6122981524471447 }, annotation_units=2)
TMAPS['5156_0'] = TensorMap('5156_3mm-asymmetry-index-left_0_0', group='continuous', channel_map={'5156_3mm-asymmetry-index-left_0_0':0, 'not-missing':1}, normalization = {'mean':8.533903732235915, 'std':7.381516873657739 }, annotation_units=2)
TMAPS['5157_0'] = TensorMap('5157_6mm-asymmetry-index-left_0_0', group='continuous', channel_map={'5157_6mm-asymmetry-index-left_0_0':0, 'not-missing':1}, normalization = {'mean':14.384130662281281, 'std':10.233778064835592 }, annotation_units=2)
TMAPS['5158_0'] = TensorMap('5158_6mm-asymmetry-index-right_0_0', group='continuous', channel_map={'5158_6mm-asymmetry-index-right_0_0':0, 'not-missing':1}, normalization = {'mean':15.111141053424925, 'std':10.252649432168733 }, annotation_units=2)
TMAPS['5159_0'] = TensorMap('5159_3mm-asymmetry-index-right_0_0', group='continuous', channel_map={'5159_3mm-asymmetry-index-right_0_0':0, 'not-missing':1}, normalization = {'mean':9.176335899467942, 'std':7.406084936836121 }, annotation_units=2)
TMAPS['5160_0'] = TensorMap('5160_3mm-regularity-index-right_0_0', group='continuous', channel_map={'5160_3mm-regularity-index-right_0_0':0, 'not-missing':1}, normalization = {'mean':2.0809998209219547, 'std':1.494634517820199 }, annotation_units=2)
TMAPS['5161_0'] = TensorMap('5161_6mm-regularity-index-right_0_0', group='continuous', channel_map={'5161_6mm-regularity-index-right_0_0':0, 'not-missing':1}, normalization = {'mean':2.5834353524353264, 'std':1.738283939374497 }, annotation_units=2)
TMAPS['5162_0'] = TensorMap('5162_6mm-regularity-index-left_0_0', group='continuous', channel_map={'5162_6mm-regularity-index-left_0_0':0, 'not-missing':1}, normalization = {'mean':2.5821406579462924, 'std':1.679953563121361 }, annotation_units=2)
TMAPS['5163_0'] = TensorMap('5163_3mm-regularity-index-left_0_0', group='continuous', channel_map={'5163_3mm-regularity-index-left_0_0':0, 'not-missing':1}, normalization = {'mean':2.0681633767285015, 'std':1.4936694119721197 }, annotation_units=2)
TMAPS['5215_0'] = TensorMap('5215_Vertex-distance-right_0_0', group='continuous', channel_map={'5215_Vertex-distance-right_0_0':0, 'not-missing':1}, normalization = {'mean':12.0, 'std':0.0 }, annotation_units=2)
TMAPS['5274_0'] = TensorMap('5274_Vertex-distance-left_0_0', group='continuous', channel_map={'5274_Vertex-distance-left_0_0':0, 'not-missing':1}, normalization = {'mean':12.000026343056849, 'std':0.0062860075815976664 }, annotation_units=2)
TMAPS['5254_0'] = TensorMap('5254_Intraocular-pressure-cornealcompensated-right_0_0', group='continuous', channel_map={'5254_Intraocular-pressure-cornealcompensated-right_0_0':0, 'not-missing':1}, normalization = {'mean':16.079121757020193, 'std':4.347669570413224 }, annotation_units=2)
TMAPS['5255_0'] = TensorMap('5255_Intraocular-pressure-Goldmanncorrelated-right_0_0', group='continuous', channel_map={'5255_Intraocular-pressure-Goldmanncorrelated-right_0_0':0, 'not-missing':1}, normalization = {'mean':15.884651187645174, 'std':3.9687762669129802 }, annotation_units=2)
TMAPS['5256_0'] = TensorMap('5256_Corneal-hysteresis-right_0_0', group='continuous', channel_map={'5256_Corneal-hysteresis-right_0_0':0, 'not-missing':1}, normalization = {'mean':10.6582893811063, 'std':2.3626939973250574 }, annotation_units=2)
TMAPS['5257_0'] = TensorMap('5257_Corneal-resistance-factor-right_0_0', group='continuous', channel_map={'5257_Corneal-resistance-factor-right_0_0':0, 'not-missing':1}, normalization = {'mean':10.738050516115898, 'std':2.4458378040507505 }, annotation_units=2)
TMAPS['5262_0'] = TensorMap('5262_Intraocular-pressure-cornealcompensated-left_0_0', group='continuous', channel_map={'5262_Intraocular-pressure-cornealcompensated-left_0_0':0, 'not-missing':1}, normalization = {'mean':16.006954506069675, 'std':4.395201099837421 }, annotation_units=2)
TMAPS['5263_0'] = TensorMap('5263_Intraocular-pressure-Goldmanncorrelated-left_0_0', group='continuous', channel_map={'5263_Intraocular-pressure-Goldmanncorrelated-left_0_0':0, 'not-missing':1}, normalization = {'mean':15.741382772512273, 'std':4.0204095461309315 }, annotation_units=2)
TMAPS['5264_0'] = TensorMap('5264_Corneal-hysteresis-left_0_0', group='continuous', channel_map={'5264_Corneal-hysteresis-left_0_0':0, 'not-missing':1}, normalization = {'mean':10.614780123091814, 'std':2.49733336653441 }, annotation_units=2)
TMAPS['5265_0'] = TensorMap('5265_Corneal-resistance-factor-left_0_0', group='continuous', channel_map={'5265_Corneal-resistance-factor-left_0_0':0, 'not-missing':1}, normalization = {'mean':10.657931468793674, 'std':2.5801332606088274 }, annotation_units=2)
TMAPS['5078_0'] = TensorMap('5078_logMAR-in-round-left_0_0', group='continuous', channel_map={'5078_logMAR-in-round-left_0_0':0, 'not-missing':1}, normalization = {'mean':0.13740222700406937, 'std':0.2523135512967788 }, annotation_units=2)
TMAPS['5079_0'] = TensorMap('5079_logMAR-in-round-right_0_0', group='continuous', channel_map={'5079_logMAR-in-round-right_0_0':0, 'not-missing':1}, normalization = {'mean':0.13792238163919085, 'std':0.24625766998708568 }, annotation_units=2)
TMAPS['5199_0'] = TensorMap('5199_logMAR-initial-right_0_0', group='continuous', channel_map={'5199_logMAR-initial-right_0_0':0, 'not-missing':1}, normalization = {'mean':0.0379234413007488, 'std':0.24625708809187422 }, annotation_units=2)
TMAPS['5201_0'] = TensorMap('5201_logMAR-final-right_0_0', group='continuous', channel_map={'5201_logMAR-final-right_0_0':0, 'not-missing':1}, normalization = {'mean':0.027592779285694674, 'std':0.20804118782106537 }, annotation_units=2)
TMAPS['5204_0'] = TensorMap('5204_Distance-of-viewer-to-screen-right_0_0', group='continuous', channel_map={'5204_Distance-of-viewer-to-screen-right_0_0':0, 'not-missing':1}, normalization = {'mean':3.999705543464345, 'std':0.017587098455619624 }, annotation_units=2)
TMAPS['5206_0'] = TensorMap('5206_logMAR-initial-left_0_0', group='continuous', channel_map={'5206_logMAR-initial-left_0_0':0, 'not-missing':1}, normalization = {'mean':0.03740222700415229, 'std':0.2523135512967846 }, annotation_units=2)
TMAPS['5208_0'] = TensorMap('5208_logMAR-final-left_0_0', group='continuous', channel_map={'5208_logMAR-final-left_0_0':0, 'not-missing':1}, normalization = {'mean':0.024298824725576325, 'std':0.21271341436825564 }, annotation_units=2)
TMAPS['5211_0'] = TensorMap('5211_Distance-of-viewer-to-screen-left_0_0', group='continuous', channel_map={'5211_Distance-of-viewer-to-screen-left_0_0':0, 'not-missing':1}, normalization = {'mean':3.999705400143457, 'std':0.017591376820776196 }, annotation_units=2)
TMAPS['3083_0'] = TensorMap('3083_Heel-quantitative-ultrasound-index-QUI-manual-entry_0_0', group='continuous', channel_map={'3083_Heel-quantitative-ultrasound-index-QUI-manual-entry_0_0':0, 'not-missing':1}, normalization = {'mean':97.68872542642553, 'std':20.378743523442353 }, annotation_units=2)
TMAPS['3084_0'] = TensorMap('3084_Heel-bone-mineral-density-BMD-manual-entry_0_0', group='continuous', channel_map={'3084_Heel-bone-mineral-density-BMD-manual-entry_0_0':0, 'not-missing':1}, normalization = {'mean':0.542322258358872, 'std':0.12768934348447242 }, annotation_units=2)
TMAPS['3085_0'] = TensorMap('3085_Heel-Broadband-ultrasound-attenuation-BUA-manual-entry_0_0', group='continuous', channel_map={'3085_Heel-Broadband-ultrasound-attenuation-BUA-manual-entry_0_0':0, 'not-missing':1}, normalization = {'mean':76.18169716184404, 'std':19.63964610378328 }, annotation_units=2)
TMAPS['3086_0'] = TensorMap('3086_Speed-of-sound-through-heel-manual-entry_0_0', group='continuous', channel_map={'3086_Speed-of-sound-through-heel-manual-entry_0_0':0, 'not-missing':1}, normalization = {'mean':1553.1887035260738, 'std':43.56490311594078 }, annotation_units=2)
TMAPS['3143_0'] = TensorMap('3143_Ankle-spacing-width_0_0', group='continuous', channel_map={'3143_Ankle-spacing-width_0_0':0, 'not-missing':1}, normalization = {'mean':43.84052595830049, 'std':4.6054124633911355 }, annotation_units=2)
TMAPS['3144_0'] = TensorMap('3144_Heel-Broadband-ultrasound-attenuation-direct-entry_0_0', group='continuous', channel_map={'3144_Heel-Broadband-ultrasound-attenuation-direct-entry_0_0':0, 'not-missing':1}, normalization = {'mean':77.9129949735427, 'std':19.60206302400695 }, annotation_units=2)
TMAPS['3146_0'] = TensorMap('3146_Speed-of-sound-through-heel_0_0', group='continuous', channel_map={'3146_Speed-of-sound-through-heel_0_0':0, 'not-missing':1}, normalization = {'mean':1553.774095256868, 'std':35.74946314412006 }, annotation_units=2)
TMAPS['3147_0'] = TensorMap('3147_Heel-quantitative-ultrasound-index-QUI-direct-entry_0_0', group='continuous', channel_map={'3147_Heel-quantitative-ultrasound-index-QUI-direct-entry_0_0':0, 'not-missing':1}, normalization = {'mean':97.98964639607452, 'std':22.05708646226495 }, annotation_units=2)
TMAPS['3148_0'] = TensorMap('3148_Heel-bone-mineral-density-BMD_0_0', group='continuous', channel_map={'3148_Heel-bone-mineral-density-BMD_0_0':0, 'not-missing':1}, normalization = {'mean':0.5435519713261716, 'std':0.1389247644873689 }, annotation_units=2)
TMAPS['4100_0'] = TensorMap('4100_Ankle-spacing-width-left_0_0', group='continuous', channel_map={'4100_Ankle-spacing-width-left_0_0':0, 'not-missing':1}, normalization = {'mean':44.02652529853376, 'std':4.628187862302173 }, annotation_units=2)
TMAPS['4101_0'] = TensorMap('4101_Heel-broadband-ultrasound-attenuation-left_0_0', group='continuous', channel_map={'4101_Heel-broadband-ultrasound-attenuation-left_0_0':0, 'not-missing':1}, normalization = {'mean':77.925679231955, 'std':20.76161779820995 }, annotation_units=2)
TMAPS['4103_0'] = TensorMap('4103_Speed-of-sound-through-heel-left_0_0', group='continuous', channel_map={'4103_Speed-of-sound-through-heel-left_0_0':0, 'not-missing':1}, normalization = {'mean':1555.2454639231478, 'std':37.30048313573351 }, annotation_units=2)
TMAPS['4104_0'] = TensorMap('4104_Heel-quantitative-ultrasound-index-QUI-direct-entry-left_0_0', group='continuous', channel_map={'4104_Heel-quantitative-ultrasound-index-QUI-direct-entry-left_0_0':0, 'not-missing':1}, normalization = {'mean':98.59814059883536, 'std':23.209352231440583 }, annotation_units=2)
TMAPS['4105_0'] = TensorMap('4105_Heel-bone-mineral-density-BMD-left_0_0', group='continuous', channel_map={'4105_Heel-bone-mineral-density-BMD-left_0_0':0, 'not-missing':1}, normalization = {'mean':0.5474710176276621, 'std':0.1461033307485894 }, annotation_units=2)
TMAPS['4106_0'] = TensorMap('4106_Heel-bone-mineral-density-BMD-Tscore-automated-left_0_0', group='continuous', channel_map={'4106_Heel-bone-mineral-density-BMD-Tscore-automated-left_0_0':0, 'not-missing':1}, normalization = {'mean':-0.3025354739707335, 'std':1.3102917507941776 }, annotation_units=2)
TMAPS['4119_0'] = TensorMap('4119_Ankle-spacing-width-right_0_0', group='continuous', channel_map={'4119_Ankle-spacing-width-right_0_0':0, 'not-missing':1}, normalization = {'mean':44.03751425161507, 'std':4.577019083093478 }, annotation_units=2)
TMAPS['4120_0'] = TensorMap('4120_Heel-broadband-ultrasound-attenuation-right_0_0', group='continuous', channel_map={'4120_Heel-broadband-ultrasound-attenuation-right_0_0':0, 'not-missing':1}, normalization = {'mean':79.1111864994048, 'std':20.485313820507486 }, annotation_units=2)
TMAPS['4122_0'] = TensorMap('4122_Speed-of-sound-through-heel-right_0_0', group='continuous', channel_map={'4122_Speed-of-sound-through-heel-right_0_0':0, 'not-missing':1}, normalization = {'mean':1555.845741869465, 'std':37.170039017820756 }, annotation_units=2)
TMAPS['4123_0'] = TensorMap('4123_Heel-quantitative-ultrasound-index-QUI-direct-entry-right_0_0', group='continuous', channel_map={'4123_Heel-quantitative-ultrasound-index-QUI-direct-entry-right_0_0':0, 'not-missing':1}, normalization = {'mean':99.32985275259227, 'std':23.021965642765103 }, annotation_units=2)
TMAPS['4124_0'] = TensorMap('4124_Heel-bone-mineral-density-BMD-right_0_0', group='continuous', channel_map={'4124_Heel-bone-mineral-density-BMD-right_0_0':0, 'not-missing':1}, normalization = {'mean':0.5521481253541791, 'std':0.14481544929473045 }, annotation_units=2)
TMAPS['4125_0'] = TensorMap('4125_Heel-bone-mineral-density-BMD-Tscore-automated-right_0_0', group='continuous', channel_map={'4125_Heel-bone-mineral-density-BMD-Tscore-automated-right_0_0':0, 'not-missing':1}, normalization = {'mean':-0.261226850639667, 'std':1.2997143243639506 }, annotation_units=2)
TMAPS['4138_0'] = TensorMap('4138_Heel-bone-mineral-density-BMD-Tscore-manual-entry-left_0_0', group='continuous', channel_map={'4138_Heel-bone-mineral-density-BMD-Tscore-manual-entry-left_0_0':0, 'not-missing':1}, normalization = {'mean':0.6429804560260588, 'std':1.0072602452059902 }, annotation_units=2)
TMAPS['4139_0'] = TensorMap('4139_Heel-quantitative-ultrasound-index-QUI-manual-entry-left_0_0', group='continuous', channel_map={'4139_Heel-quantitative-ultrasound-index-QUI-manual-entry-left_0_0':0, 'not-missing':1}, normalization = {'mean':97.70309446254066, 'std':20.436117107803174 }, annotation_units=2)
TMAPS['4140_0'] = TensorMap('4140_Heel-bone-mineral-density-BMD-manual-entry-left_0_0', group='continuous', channel_map={'4140_Heel-bone-mineral-density-BMD-manual-entry-left_0_0':0, 'not-missing':1}, normalization = {'mean':0.5419315960912059, 'std':0.12833758622288968 }, annotation_units=2)
TMAPS['4141_0'] = TensorMap('4141_Heel-broadband-ultrasound-attenuation-BUA-manual-entry-left_0_0', group='continuous', channel_map={'4141_Heel-broadband-ultrasound-attenuation-BUA-manual-entry-left_0_0':0, 'not-missing':1}, normalization = {'mean':76.35365635179154, 'std':24.75271927092776 }, annotation_units=2)
TMAPS['4142_0'] = TensorMap('4142_Speed-of-sound-through-heel-manual-entry-left_0_0', group='continuous', channel_map={'4142_Speed-of-sound-through-heel-manual-entry-left_0_0':0, 'not-missing':1}, normalization = {'mean':1551.8999185667772, 'std':69.63348586286318 }, annotation_units=2)
TMAPS['4143_0'] = TensorMap('4143_Heel-bone-mineral-density-BMD-Tscore-manual-entry-right_0_0', group='continuous', channel_map={'4143_Heel-bone-mineral-density-BMD-Tscore-manual-entry-right_0_0':0, 'not-missing':1}, normalization = {'mean':0.676391509433962, 'std':0.9572768049585045 }, annotation_units=2)
TMAPS['4144_0'] = TensorMap('4144_Heel-quantitative-ultrasound-index-QUI-manual-entry-right_0_0', group='continuous', channel_map={'4144_Heel-quantitative-ultrasound-index-QUI-manual-entry-right_0_0':0, 'not-missing':1}, normalization = {'mean':98.52704402515734, 'std':20.415469025690843 }, annotation_units=2)
TMAPS['4145_0'] = TensorMap('4145_Heel-bone-mineral-density-BMD-manual-entry-right_0_0', group='continuous', channel_map={'4145_Heel-bone-mineral-density-BMD-manual-entry-right_0_0':0, 'not-missing':1}, normalization = {'mean':0.5485754716981137, 'std':0.1267972703300126 }, annotation_units=2)
TMAPS['4146_0'] = TensorMap('4146_Heel-broadband-ultrasound-attenuation-BUA-manual-entry-right_0_0', group='continuous', channel_map={'4146_Heel-broadband-ultrasound-attenuation-BUA-manual-entry-right_0_0':0, 'not-missing':1}, normalization = {'mean':77.37633647798738, 'std':20.011428686828946 }, annotation_units=2)
TMAPS['4147_0'] = TensorMap('4147_Speed-of-sound-through-heel-manual-entry-right_0_0', group='continuous', channel_map={'4147_Speed-of-sound-through-heel-manual-entry-right_0_0':0, 'not-missing':1}, normalization = {'mean':1554.7818396226417, 'std':47.45582164762303 }, annotation_units=2)
TMAPS['3062_0'] = TensorMap('3062_Forced-vital-capacity-FVC_0_0', group='continuous', channel_map={'3062_Forced-vital-capacity-FVC_0_0':0, 'not-missing':1}, normalization = {'mean':3.7096043393756473, 'std':1.059471863636424 }, annotation_units=2)
TMAPS['3063_0'] = TensorMap('3063_Forced-expiratory-volume-in-1second-FEV1_0_0', group='continuous', channel_map={'3063_Forced-expiratory-volume-in-1second-FEV1_0_0':0, 'not-missing':1}, normalization = {'mean':2.809858879942245, 'std':0.798755044666147 }, annotation_units=2)
TMAPS['20019_0'] = TensorMap('20019_Speechreceptionthreshold-SRT-estimate-left_0_0', group='continuous', channel_map={'20019_Speechreceptionthreshold-SRT-estimate-left_0_0':0, 'not-missing':1}, normalization = {'mean':-6.5871350616422, 'std':2.0968659376689365 }, annotation_units=2)
TMAPS['20021_0'] = TensorMap('20021_Speechreceptionthreshold-SRT-estimate-right_0_0', group='continuous', channel_map={'20021_Speechreceptionthreshold-SRT-estimate-right_0_0':0, 'not-missing':1}, normalization = {'mean':-6.546864086949063, 'std':2.108430442978835 }, annotation_units=2)
TMAPS['20022_0'] = TensorMap('20022_Birth-weight_0_0', group='continuous', channel_map={'20022_Birth-weight_0_0':0, 'not-missing':1}, normalization = {'mean':3.3190356940482992, 'std':0.6682835112392286 }, annotation_units=2)
TMAPS['20007_0'] = TensorMap('20007_Interpolated-Age-of-participant-when-cancer-first-diagnosed_0_0', group='continuous', channel_map={'20007_Interpolated-Age-of-participant-when-cancer-first-diagnosed_0_0':0, 'not-missing':1}, normalization = {'mean':50.81431690706362, 'std':11.436262716076179 }, annotation_units=2)
TMAPS['20009_0'] = TensorMap('20009_Interpolated-Age-of-participant-when-noncancer-illness-first-diagnosed_0_0', group='continuous', channel_map={'20009_Interpolated-Age-of-participant-when-noncancer-illness-first-diagnosed_0_0':0, 'not-missing':1}, normalization = {'mean':42.16155454743022, 'std':18.182237945402438 }, annotation_units=2)
TMAPS['20011_0'] = TensorMap('20011_Interpolated-Age-of-participant-when-operation-took-place_0_0', group='continuous', channel_map={'20011_Interpolated-Age-of-participant-when-operation-took-place_0_0':0, 'not-missing':1}, normalization = {'mean':33.36014170467479, 'std':18.162652587014733 }, annotation_units=2)
TMAPS['30000_0'] = TensorMap('30000_White-blood-cell-leukocyte-count_0_0', group='continuous', channel_map={'30000_White-blood-cell-leukocyte-count_0_0':0, 'not-missing':1}, normalization = {'mean':6.885059161514123, 'std':2.122680319304614 }, annotation_units=2)
TMAPS['30010_0'] = TensorMap('30010_Red-blood-cell-erythrocyte-count_0_0', group='continuous', channel_map={'30010_Red-blood-cell-erythrocyte-count_0_0':0, 'not-missing':1}, normalization = {'mean':4.516905746102486, 'std':0.4169112378752827 }, annotation_units=2)
TMAPS['30020_0'] = TensorMap('30020_Haemoglobin-concentration_0_0', group='continuous', channel_map={'30020_Haemoglobin-concentration_0_0':0, 'not-missing':1}, normalization = {'mean':14.174787213133067, 'std':1.2469768810198993 }, annotation_units=2)
TMAPS['30030_0'] = TensorMap('30030_Haematocrit-percentage_0_0', group='continuous', channel_map={'30030_Haematocrit-percentage_0_0':0, 'not-missing':1}, normalization = {'mean':41.08502410762284, 'std':3.5559491979999334 }, annotation_units=2)
TMAPS['30040_0'] = TensorMap('30040_Mean-corpuscular-volume_0_0', group='continuous', channel_map={'30040_Mean-corpuscular-volume_0_0':0, 'not-missing':1}, normalization = {'mean':91.12005802162041, 'std':4.606122747176825 }, annotation_units=2)
TMAPS['30050_0'] = TensorMap('30050_Mean-corpuscular-haemoglobin_0_0', group='continuous', channel_map={'30050_Mean-corpuscular-haemoglobin_0_0':0, 'not-missing':1}, normalization = {'mean':31.450959815502703, 'std':1.9215203806327537 }, annotation_units=2)
TMAPS['30060_0'] = TensorMap('30060_Mean-corpuscular-haemoglobin-concentration_0_0', group='continuous', channel_map={'30060_Mean-corpuscular-haemoglobin-concentration_0_0':0, 'not-missing':1}, normalization = {'mean':34.51284948721166, 'std':1.0760104545503775 }, annotation_units=2)
TMAPS['30070_0'] = TensorMap('30070_Red-blood-cell-erythrocyte-distribution-width_0_0', group='continuous', channel_map={'30070_Red-blood-cell-erythrocyte-distribution-width_0_0':0, 'not-missing':1}, normalization = {'mean':13.493241265393136, 'std':0.9876884557199477 }, annotation_units=2)
TMAPS['30080_0'] = TensorMap('30080_Platelet-count_0_0', group='continuous', channel_map={'30080_Platelet-count_0_0':0, 'not-missing':1}, normalization = {'mean':252.9889378153251, 'std':60.04801914529837 }, annotation_units=2)
TMAPS['30090_0'] = TensorMap('30090_Platelet-crit_0_0', group='continuous', channel_map={'30090_Platelet-crit_0_0':0, 'not-missing':1}, normalization = {'mean':0.23272585073129817, 'std':0.04901230590117511 }, annotation_units=2)
TMAPS['30100_0'] = TensorMap('30100_Mean-platelet-thrombocyte-volume_0_0', group='continuous', channel_map={'30100_Mean-platelet-thrombocyte-volume_0_0':0, 'not-missing':1}, normalization = {'mean':9.333074996235823, 'std':1.0849697753739544 }, annotation_units=2)
TMAPS['30110_0'] = TensorMap('30110_Platelet-distribution-width_0_0', group='continuous', channel_map={'30110_Platelet-distribution-width_0_0':0, 'not-missing':1}, normalization = {'mean':16.490364840338735, 'std':0.5224245812397579 }, annotation_units=2)
TMAPS['30120_0'] = TensorMap('30120_Lymphocyte-count_0_0', group='continuous', channel_map={'30120_Lymphocyte-count_0_0':0, 'not-missing':1}, normalization = {'mean':1.9660022455763873, 'std':1.1723387896401989 }, annotation_units=2)
TMAPS['30130_0'] = TensorMap('30130_Monocyte-count_0_0', group='continuous', channel_map={'30130_Monocyte-count_0_0':0, 'not-missing':1}, normalization = {'mean':0.47595259990372907, 'std':0.27290490219619984 }, annotation_units=2)
TMAPS['30140_0'] = TensorMap('30140_Neutrophill-count_0_0', group='continuous', channel_map={'30140_Neutrophill-count_0_0':0, 'not-missing':1}, normalization = {'mean':4.227879187151636, 'std':1.4217886395361201 }, annotation_units=2)
TMAPS['30150_0'] = TensorMap('30150_Eosinophill-count_0_0', group='continuous', channel_map={'30150_Eosinophill-count_0_0':0, 'not-missing':1}, normalization = {'mean':0.17488004390602815, 'std':0.13857405474510603 }, annotation_units=2)
TMAPS['30160_0'] = TensorMap('30160_Basophill-count_0_0', group='continuous', channel_map={'30160_Basophill-count_0_0':0, 'not-missing':1}, normalization = {'mean':0.034056763646942496, 'std':0.05160576368910327 }, annotation_units=2)
TMAPS['30170_0'] = TensorMap('30170_Nucleated-red-blood-cell-count_0_0', group='continuous', channel_map={'30170_Nucleated-red-blood-cell-count_0_0':0, 'not-missing':1}, normalization = {'mean':0.0022171388351223376, 'std':0.03318917930716754 }, annotation_units=2)
TMAPS['30180_0'] = TensorMap('30180_Lymphocyte-percentage_0_0', group='continuous', channel_map={'30180_Lymphocyte-percentage_0_0':0, 'not-missing':1}, normalization = {'mean':28.913304789175502, 'std':7.499398759956817 }, annotation_units=2)
TMAPS['30190_0'] = TensorMap('30190_Monocyte-percentage_0_0', group='continuous', channel_map={'30190_Monocyte-percentage_0_0':0, 'not-missing':1}, normalization = {'mean':7.064299009822086, 'std':2.6980754787818255 }, annotation_units=2)
TMAPS['30200_0'] = TensorMap('30200_Neutrophill-percentage_0_0', group='continuous', channel_map={'30200_Neutrophill-percentage_0_0':0, 'not-missing':1}, normalization = {'mean':60.88038561843654, 'std':8.52578618044327 }, annotation_units=2)
TMAPS['30210_0'] = TensorMap('30210_Eosinophill-percentage_0_0', group='continuous', channel_map={'30210_Eosinophill-percentage_0_0':0, 'not-missing':1}, normalization = {'mean':2.5724425782747313, 'std':1.8756082961198473 }, annotation_units=2)
TMAPS['30220_0'] = TensorMap('30220_Basophill-percentage_0_0', group='continuous', channel_map={'30220_Basophill-percentage_0_0':0, 'not-missing':1}, normalization = {'mean':0.5696715466839913, 'std':0.6104263025849384 }, annotation_units=2)
TMAPS['30230_0'] = TensorMap('30230_Nucleated-red-blood-cell-percentage_0_0', group='continuous', channel_map={'30230_Nucleated-red-blood-cell-percentage_0_0':0, 'not-missing':1}, normalization = {'mean':0.03518532871914334, 'std':0.4471278765412359 }, annotation_units=2)
TMAPS['30240_0'] = TensorMap('30240_Reticulocyte-percentage_0_0', group='continuous', channel_map={'30240_Reticulocyte-percentage_0_0':0, 'not-missing':1}, normalization = {'mean':1.3502982934355068, 'std':0.8904541845788909 }, annotation_units=2)
TMAPS['30250_0'] = TensorMap('30250_Reticulocyte-count_0_0', group='continuous', channel_map={'30250_Reticulocyte-count_0_0':0, 'not-missing':1}, normalization = {'mean':0.06100770933078072, 'std':0.03878930861670543 }, annotation_units=2)
TMAPS['30260_0'] = TensorMap('30260_Mean-reticulocyte-volume_0_0', group='continuous', channel_map={'30260_Mean-reticulocyte-volume_0_0':0, 'not-missing':1}, normalization = {'mean':105.91980848985729, 'std':7.834306172539685 }, annotation_units=2)
TMAPS['30270_0'] = TensorMap('30270_Mean-sphered-cell-volume_0_0', group='continuous', channel_map={'30270_Mean-sphered-cell-volume_0_0':0, 'not-missing':1}, normalization = {'mean':82.86685358686582, 'std':5.315085491812304 }, annotation_units=2)
TMAPS['30280_0'] = TensorMap('30280_Immature-reticulocyte-fraction_0_0', group='continuous', channel_map={'30280_Immature-reticulocyte-fraction_0_0':0, 'not-missing':1}, normalization = {'mean':0.2907946330346597, 'std':0.06104905564938929 }, annotation_units=2)
TMAPS['30290_0'] = TensorMap('30290_High-light-scatter-reticulocyte-percentage_0_0', group='continuous', channel_map={'30290_High-light-scatter-reticulocyte-percentage_0_0':0, 'not-missing':1}, normalization = {'mean':0.40206451736457427, 'std':0.3317020073279109 }, annotation_units=2)
TMAPS['30300_0'] = TensorMap('30300_High-light-scatter-reticulocyte-count_0_0', group='continuous', channel_map={'30300_High-light-scatter-reticulocyte-count_0_0':0, 'not-missing':1}, normalization = {'mean':0.018121138418991233, 'std':0.01023813955070856 }, annotation_units=2)
TMAPS['30500_0'] = TensorMap('30500_Microalbumin-in-urine_0_0', group='continuous', channel_map={'30500_Microalbumin-in-urine_0_0':0, 'not-missing':1}, normalization = {'mean':31.2081299164981, 'std':129.404046604083 }, annotation_units=2)
TMAPS['30510_0'] = TensorMap('30510_Creatinine-enzymatic-in-urine_0_0', group='continuous', channel_map={'30510_Creatinine-enzymatic-in-urine_0_0':0, 'not-missing':1}, normalization = {'mean':8881.448467633058, 'std':5821.0444198635205 }, annotation_units=2)
TMAPS['30520_0'] = TensorMap('30520_Potassium-in-urine_0_0', group='continuous', channel_map={'30520_Potassium-in-urine_0_0':0, 'not-missing':1}, normalization = {'mean':63.061779553199514, 'std':33.841973397822876 }, annotation_units=2)
TMAPS['30530_0'] = TensorMap('30530_Sodium-in-urine_0_0', group='continuous', channel_map={'30530_Sodium-in-urine_0_0':0, 'not-missing':1}, normalization = {'mean':77.45334322201364, 'std':44.44008804164033 }, annotation_units=2)
TMAPS['40008_0'] = TensorMap('40008_Age-at-cancer-diagnosis_0_0', group='continuous', channel_map={'40008_Age-at-cancer-diagnosis_0_0':0, 'not-missing':1}, normalization = {'mean':56.48074482564985, 'std':11.277220070614971 }, annotation_units=2)
TMAPS['40007_0'] = TensorMap('40007_Age-at-death_0_0', group='continuous', channel_map={'40007_Age-at-death_0_0':0, 'not-missing':1}, normalization = {'mean':65.99969899452185, 'std':6.954231456508905 }, annotation_units=2)
TMAPS['189_0'] = TensorMap('189_Townsend-deprivation-index-at-recruitment_0_0', group='continuous', channel_map={'189_Townsend-deprivation-index-at-recruitment_0_0':0, 'not-missing':1}, normalization = {'mean':-1.2937131672350863, 'std':3.0950435059542127 }, annotation_units=2)
TMAPS['22003_0'] = TensorMap('22003_Heterozygosity_0_0', group='continuous', channel_map={'22003_Heterozygosity_0_0':0, 'not-missing':1}, normalization = {'mean':0.1881170413995314, 'std':0.004555504172307132 }, annotation_units=2)
TMAPS['22004_0'] = TensorMap('22004_Heterozygosity-PCA-corrected_0_0', group='continuous', channel_map={'22004_Heterozygosity-PCA-corrected_0_0':0, 'not-missing':1}, normalization = {'mean':0.19029569706755173, 'std':0.0016696938701946454 }, annotation_units=2)
TMAPS['22005_0'] = TensorMap('22005_Missingness_0_0', group='continuous', channel_map={'22005_Missingness_0_0':0, 'not-missing':1}, normalization = {'mean':0.004750018955162429, 'std':0.004848293695738143 }, annotation_units=2)
TMAPS['20191_0'] = TensorMap('20191_Fluid-intelligence-score_0_0', group='continuous', channel_map={'20191_Fluid-intelligence-score_0_0':0, 'not-missing':1}, normalization = {'mean':5.434152218915772, 'std':2.038944723965398 }, annotation_units=2)
TMAPS['20159_0'] = TensorMap('20159_Number-of-symbol-digit-matches-made-correctly_0_0', group='continuous', channel_map={'20159_Number-of-symbol-digit-matches-made-correctly_0_0':0, 'not-missing':1}, normalization = {'mean':19.676552253795712, 'std':5.237163992328014 }, annotation_units=2)
TMAPS['22200_0'] = TensorMap('22200_Year-of-birth_0_0', group='continuous', channel_map={'22200_Year-of-birth_0_0':0, 'not-missing':1}, normalization = {'mean':1952.0639129359386, 'std':7.656326148519739 }, annotation_units=2)
TMAPS['22599_0'] = TensorMap('22599_Number-of-jobs-held_0_0', group='continuous', channel_map={'22599_Number-of-jobs-held_0_0':0, 'not-missing':1}, normalization = {'mean':3.323186708567481, 'std':2.190817467592636 }, annotation_units=2)
TMAPS['22602_0'] = TensorMap('22602_Year-job-started_0_0', group='continuous', channel_map={'22602_Year-job-started_0_0':0, 'not-missing':1}, normalization = {'mean':1971.6478850996982, 'std':8.886250998210771 }, annotation_units=2)
TMAPS['22603_0'] = TensorMap('22603_Year-job-ended_0_0', group='continuous', channel_map={'22603_Year-job-ended_0_0':0, 'not-missing':1}, normalization = {'mean':1982.3460420204678, 'std':14.626366827497725 }, annotation_units=2)
TMAPS['22642_0'] = TensorMap('22642_Usual-length-of-each-night-shift-during-mixed-shift-periods_0_0', group='continuous', channel_map={'22642_Usual-length-of-each-night-shift-during-mixed-shift-periods_0_0':0, 'not-missing':1}, normalization = {'mean':10.061545440798428, 'std':3.2360847048222716 }, annotation_units=2)
TMAPS['22643_0'] = TensorMap('22643_Number-of-night-shifts-worked-monthly-during-mixed-shift-periods_0_0', group='continuous', channel_map={'22643_Number-of-night-shifts-worked-monthly-during-mixed-shift-periods_0_0':0, 'not-missing':1}, normalization = {'mean':8.640632088310904, 'std':6.2372017720724156 }, annotation_units=2)
TMAPS['22644_0'] = TensorMap('22644_Consecutive-night-shifts-during-mixed-shift-periods_0_0', group='continuous', channel_map={'22644_Consecutive-night-shifts-during-mixed-shift-periods_0_0':0, 'not-missing':1}, normalization = {'mean':4.236881899289279, 'std':3.4080881661938145 }, annotation_units=2)
TMAPS['22645_0'] = TensorMap('22645_Rest-days-during-mixed-shift-periods_0_0', group='continuous', channel_map={'22645_Rest-days-during-mixed-shift-periods_0_0':0, 'not-missing':1}, normalization = {'mean':2.8382299601015597, 'std':2.4501449375089175 }, annotation_units=2)
TMAPS['22652_0'] = TensorMap('22652_Usual-length-of-each-night-shift-during-night-shift-periods_0_0', group='continuous', channel_map={'22652_Usual-length-of-each-night-shift-during-night-shift-periods_0_0':0, 'not-missing':1}, normalization = {'mean':10.139084507042254, 'std':2.4307349508552543 }, annotation_units=2)
TMAPS['22653_0'] = TensorMap('22653_Number-of-night-shifts-worked-monthly-during-night-shift-periods_0_0', group='continuous', channel_map={'22653_Number-of-night-shifts-worked-monthly-during-night-shift-periods_0_0':0, 'not-missing':1}, normalization = {'mean':13.109154929577464, 'std':7.477340463869274 }, annotation_units=2)
TMAPS['22654_0'] = TensorMap('22654_Consecutive-night-shifts-during-night-shift-periods_0_0', group='continuous', channel_map={'22654_Consecutive-night-shifts-during-night-shift-periods_0_0':0, 'not-missing':1}, normalization = {'mean':4.198943661971831, 'std':3.4130340902269496 }, annotation_units=2)
TMAPS['22655_0'] = TensorMap('22655_Rest-days-during-night-shift-periods_0_0', group='continuous', channel_map={'22655_Rest-days-during-night-shift-periods_0_0':0, 'not-missing':1}, normalization = {'mean':3.048449612403101, 'std':2.258398949112533 }, annotation_units=2)
TMAPS['22661_0'] = TensorMap('22661_Number-of-gap-periods_0_0', group='continuous', channel_map={'22661_Number-of-gap-periods_0_0':0, 'not-missing':1}, normalization = {'mean':1.4835415736395574, 'std':1.3516998817958708 }, annotation_units=2)
TMAPS['22663_0'] = TensorMap('22663_Year-gap-started_0_0', group='continuous', channel_map={'22663_Year-gap-started_0_0':0, 'not-missing':1}, normalization = {'mean':1990.3457027776324, 'std':16.75148147429217 }, annotation_units=2)
TMAPS['22664_0'] = TensorMap('22664_Year-gap-ended_0_0', group='continuous', channel_map={'22664_Year-gap-ended_0_0':0, 'not-missing':1}, normalization = {'mean':1985.4262622302222, 'std':12.267969922750574 }, annotation_units=2)
TMAPS['41083_0'] = TensorMap('41083_Episodes-containing-"Episode-start-date"-data_0_0', group='continuous', channel_map={'41083_Episodes-containing-"Episode-start-date"-data_0_0':0, 'not-missing':1}, normalization = {'mean':6.94457158164632, 'std':16.98366497105212 }, annotation_units=2)
TMAPS['41084_0'] = TensorMap('41084_Episodes-containing-"Episode-end-date"-data_0_0', group='continuous', channel_map={'41084_Episodes-containing-"Episode-end-date"-data_0_0':0, 'not-missing':1}, normalization = {'mean':6.938812165620209, 'std':16.9769992156272 }, annotation_units=2)
TMAPS['41085_0'] = TensorMap('41085_Episodes-containing-"Duration-of-episode"-data_0_0', group='continuous', channel_map={'41085_Episodes-containing-"Duration-of-episode"-data_0_0':0, 'not-missing':1}, normalization = {'mean':7.015283274778176, 'std':17.14710582452167 }, annotation_units=2)
TMAPS['41086_0'] = TensorMap('41086_Episodes-containing-"Episode-order"-data_0_0', group='continuous', channel_map={'41086_Episodes-containing-"Episode-order"-data_0_0':0, 'not-missing':1}, normalization = {'mean':6.255246450990654, 'std':15.42097930320687 }, annotation_units=2)
TMAPS['41087_0'] = TensorMap('41087_Episodes-containing-"Episode-status"-data_0_0', group='continuous', channel_map={'41087_Episodes-containing-"Episode-status"-data_0_0':0, 'not-missing':1}, normalization = {'mean':5.841608548028172, 'std':14.716005172790732 }, annotation_units=2)
TMAPS['41088_0'] = TensorMap('41088_Episodes-containing-"Duration-of-episode-within-HES-data-year"-data_0_0', group='continuous', channel_map={'41088_Episodes-containing-"Duration-of-episode-within-HES-data-year"-data_0_0':0, 'not-missing':1}, normalization = {'mean':5.841286137486629, 'std':14.716001530793536 }, annotation_units=2)
TMAPS['41089_0'] = TensorMap('41089_Episodes-containing-"Beginning-of-spell-indicator"-data_0_0', group='continuous', channel_map={'41089_Episodes-containing-"Beginning-of-spell-indicator"-data_0_0':0, 'not-missing':1}, normalization = {'mean':5.841518881343489, 'std':14.716157054539005 }, annotation_units=2)
TMAPS['41090_0'] = TensorMap('41090_Episodes-containing-"End-of-spell-indicator"-data_0_0', group='continuous', channel_map={'41090_Episodes-containing-"End-of-spell-indicator"-data_0_0':0, 'not-missing':1}, normalization = {'mean':5.841608548028172, 'std':14.716005172790732 }, annotation_units=2)
TMAPS['41091_0'] = TensorMap('41091_Episodes-containing-"Duration-of-spell"-data_0_0', group='continuous', channel_map={'41091_Episodes-containing-"Duration-of-spell"-data_0_0':0, 'not-missing':1}, normalization = {'mean':5.908605539689414, 'std':14.964131704007418 }, annotation_units=2)
TMAPS['41092_0'] = TensorMap('41092_Episodes-containing-"Current-PCT-responsible-for-patient"-data_0_0', group='continuous', channel_map={'41092_Episodes-containing-"Current-PCT-responsible-for-patient"-data_0_0':0, 'not-missing':1}, normalization = {'mean':4.652252968525848, 'std':12.78932443011997 }, annotation_units=2)
TMAPS['41093_0'] = TensorMap('41093_Episodes-containing-"PCT-where-patients-GP-was-registered"-data_0_0', group='continuous', channel_map={'41093_Episodes-containing-"PCT-where-patients-GP-was-registered"-data_0_0':0, 'not-missing':1}, normalization = {'mean':5.84070461435213, 'std':14.71554617031024 }, annotation_units=2)
TMAPS['41094_0'] = TensorMap('41094_Episodes-containing-"Administrative-and-legal-status-of-patient"-data_0_0', group='continuous', channel_map={'41094_Episodes-containing-"Administrative-and-legal-status-of-patient"-data_0_0':0, 'not-missing':1}, normalization = {'mean':2.239299991236408, 'std':3.723328562096877 }, annotation_units=2)
TMAPS['41095_0'] = TensorMap('41095_Episodes-containing-"Date-of-decision-to-admit-to-hospital"-data_0_0', group='continuous', channel_map={'41095_Episodes-containing-"Date-of-decision-to-admit-to-hospital"-data_0_0':0, 'not-missing':1}, normalization = {'mean':4.950612842941997, 'std':13.169239099145097 }, annotation_units=2)
TMAPS['41096_0'] = TensorMap('41096_Episodes-containing-"Date-of-admission-to-hospital"-data_0_0', group='continuous', channel_map={'41096_Episodes-containing-"Date-of-admission-to-hospital"-data_0_0':0, 'not-missing':1}, normalization = {'mean':6.069611256089526, 'std':15.046702030462244 }, annotation_units=2)
TMAPS['41097_0'] = TensorMap('41097_Episodes-containing-"Waiting-time-for-hospital-admission"-data_0_0', group='continuous', channel_map={'41097_Episodes-containing-"Waiting-time-for-hospital-admission"-data_0_0':0, 'not-missing':1}, normalization = {'mean':4.5732696997101865, 'std':10.086573507115476 }, annotation_units=2)
TMAPS['41098_0'] = TensorMap('41098_Episodes-containing-"Method-of-admission-to-hospital"-data-polymorphic_0_0', group='continuous', channel_map={'41098_Episodes-containing-"Method-of-admission-to-hospital"-data-polymorphic_0_0':0, 'not-missing':1}, normalization = {'mean':7.019349086721086, 'std':17.150987159329606 }, annotation_units=2)
TMAPS['41099_0'] = TensorMap('41099_Episodes-containing-"Source-of-admission-to-hospital"-data-polymorphic_0_0', group='continuous', channel_map={'41099_Episodes-containing-"Source-of-admission-to-hospital"-data-polymorphic_0_0':0, 'not-missing':1}, normalization = {'mean':7.019366766346076, 'std':17.15107704162061 }, annotation_units=2)
TMAPS['41100_0'] = TensorMap('41100_Episodes-containing-"First-regular-day-or-night-of-admission-to-hosp"-data_0_0', group='continuous', channel_map={'41100_Episodes-containing-"First-regular-day-or-night-of-admission-to-hosp"-data_0_0':0, 'not-missing':1}, normalization = {'mean':3.438592774693198, 'std':13.94591578582647 }, annotation_units=2)
TMAPS['41101_0'] = TensorMap('41101_Episodes-containing-"Date-of-discharge-from-hospital"-data_0_0', group='continuous', channel_map={'41101_Episodes-containing-"Date-of-discharge-from-hospital"-data_0_0':0, 'not-missing':1}, normalization = {'mean':5.772761474793078, 'std':14.648786112275967 }, annotation_units=2)
TMAPS['41102_0'] = TensorMap('41102_Episodes-containing-"Method-of-discharge-from-hospital"-data-polymorphic_0_0', group='continuous', channel_map={'41102_Episodes-containing-"Method-of-discharge-from-hospital"-data-polymorphic_0_0':0, 'not-missing':1}, normalization = {'mean':7.019172290471187, 'std':17.15091711452907 }, annotation_units=2)
TMAPS['41103_0'] = TensorMap('41103_Episodes-containing-"Destination-on-discharge-from-hospital"-data-polymorphic_0_0', group='continuous', channel_map={'41103_Episodes-containing-"Destination-on-discharge-from-hospital"-data-polymorphic_0_0':0, 'not-missing':1}, normalization = {'mean':6.944139009574639, 'std':16.982956509718406 }, annotation_units=2)
TMAPS['41109_0'] = TensorMap('41109_Episodes-containing-"Patient-classification-on-admission"-data-polymorphic_0_0', group='continuous', channel_map={'41109_Episodes-containing-"Patient-classification-on-admission"-data-polymorphic_0_0':0, 'not-missing':1}, normalization = {'mean':6.41594902544554, 'std':16.860842705813997 }, annotation_units=2)
TMAPS['41110_0'] = TensorMap('41110_Episodes-containing-"Intended-management-of-patient"-data-polymorphic_0_0', group='continuous', channel_map={'41110_Episodes-containing-"Intended-management-of-patient"-data-polymorphic_0_0':0, 'not-missing':1}, normalization = {'mean':6.254967722136367, 'std':15.420771434941496 }, annotation_units=2)
TMAPS['41111_0'] = TensorMap('41111_Episodes-containing-"Main-speciality-of-consultant"-data-polymorphic_0_0', group='continuous', channel_map={'41111_Episodes-containing-"Main-speciality-of-consultant"-data-polymorphic_0_0':0, 'not-missing':1}, normalization = {'mean':6.255052719261711, 'std':15.420881391472475 }, annotation_units=2)
TMAPS['41112_0'] = TensorMap('41112_Episodes-containing-"Treatment-speciality-of-consultant"-data-polymorphic_0_0', group='continuous', channel_map={'41112_Episodes-containing-"Treatment-speciality-of-consultant"-data-polymorphic_0_0':0, 'not-missing':1}, normalization = {'mean':7.019364631953285, 'std':17.15125849109182 }, annotation_units=2)
TMAPS['41132_0'] = TensorMap('41132_Episodes-containing-"Episode-type"-data_0_0', group='continuous', channel_map={'41132_Episodes-containing-"Episode-type"-data_0_0':0, 'not-missing':1}, normalization = {'mean':5.841608548028172, 'std':14.716005172790732 }, annotation_units=2)
TMAPS['41076_0'] = TensorMap('41076_Episodes-containing-"Diagnoses--secondary-ICD9"-data_0_0', group='continuous', channel_map={'41076_Episodes-containing-"Diagnoses--secondary-ICD9"-data_0_0':0, 'not-missing':1}, normalization = {'mean':2.315052776502983, 'std':3.164578237935741 }, annotation_units=2)
TMAPS['41078_0'] = TensorMap('41078_Episodes-containing-"Diagnoses--secondary-ICD10"-data_0_0', group='continuous', channel_map={'41078_Episodes-containing-"Diagnoses--secondary-ICD10"-data_0_0':0, 'not-missing':1}, normalization = {'mean':15.413505467345717, 'std':40.65627483813659 }, annotation_units=2)
TMAPS['41079_0'] = TensorMap('41079_Episodes-containing-"Diagnoses--secondary-ICD10-addendum"-data_0_0', group='continuous', channel_map={'41079_Episodes-containing-"Diagnoses--secondary-ICD10-addendum"-data_0_0':0, 'not-missing':1}, normalization = {'mean':4.104764411687286, 'std':11.336722178203168 }, annotation_units=2)
TMAPS['41104_0'] = TensorMap('41104_Episodes-containing-"External-cause--ICD10"-data_0_0', group='continuous', channel_map={'41104_Episodes-containing-"External-cause--ICD10"-data_0_0':0, 'not-missing':1}, normalization = {'mean':1.535025319508078, 'std':1.5589387371205363 }, annotation_units=2)
TMAPS['41105_0'] = TensorMap('41105_Episodes-containing-"External-cause--ICD10-addendum"-data_0_0', group='continuous', channel_map={'41105_Episodes-containing-"External-cause--ICD10-addendum"-data_0_0':0, 'not-missing':1}, normalization = {'mean':1.1875, 'std':0.5045953599397515 }, annotation_units=2)
TMAPS['41142_0'] = TensorMap('41142_Episodes-containing-"Diagnoses--main-ICD10"-data_0_0', group='continuous', channel_map={'41142_Episodes-containing-"Diagnoses--main-ICD10"-data_0_0':0, 'not-missing':1}, normalization = {'mean':6.918417913187116, 'std':16.92746858995995 }, annotation_units=2)
TMAPS['41143_0'] = TensorMap('41143_Episodes-containing-"Diagnoses--main-ICD10--addendum"-data_0_0', group='continuous', channel_map={'41143_Episodes-containing-"Diagnoses--main-ICD10--addendum"-data_0_0':0, 'not-missing':1}, normalization = {'mean':2.0724213606437454, 'std':3.485242194850206 }, annotation_units=2)
TMAPS['41144_0'] = TensorMap('41144_Episodes-containing-"Diagnoses--main-ICD9"-data_0_0', group='continuous', channel_map={'41144_Episodes-containing-"Diagnoses--main-ICD9"-data_0_0':0, 'not-missing':1}, normalization = {'mean':2.5663991333891376, 'std':3.149137478026787 }, annotation_units=2)
TMAPS['41080_0'] = TensorMap('41080_Episodes-containing-"Operative-procedures--secondary-OPCS"-data_0_0', group='continuous', channel_map={'41080_Episodes-containing-"Operative-procedures--secondary-OPCS"-data_0_0':0, 'not-missing':1}, normalization = {'mean':7.518695331774054, 'std':11.85628602715881 }, annotation_units=2)
TMAPS['41082_0'] = TensorMap('41082_Episodes-containing-"Dates-of-operations"-data_0_0', group='continuous', channel_map={'41082_Episodes-containing-"Dates-of-operations"-data_0_0':0, 'not-missing':1}, normalization = {'mean':7.202499666387645, 'std':11.595286226510064 }, annotation_units=2)
TMAPS['41106_0'] = TensorMap('41106_Episodes-containing-"Operation-status"-data_0_0', group='continuous', channel_map={'41106_Episodes-containing-"Operation-status"-data_0_0':0, 'not-missing':1}, normalization = {'mean':4.692278275714895, 'std':12.663944657170253 }, annotation_units=2)
TMAPS['41107_0'] = TensorMap('41107_Episodes-containing-"Duration-of-postoperative-stay"-data_0_0', group='continuous', channel_map={'41107_Episodes-containing-"Duration-of-postoperative-stay"-data_0_0':0, 'not-missing':1}, normalization = {'mean':4.648103666245259, 'std':12.529593631042843 }, annotation_units=2)
TMAPS['41108_0'] = TensorMap('41108_Episodes-containing-"Duration-of-preoperative-stay"-data_0_0', group='continuous', channel_map={'41108_Episodes-containing-"Duration-of-preoperative-stay"-data_0_0':0, 'not-missing':1}, normalization = {'mean':4.649021791476041, 'std':12.532172392585341 }, annotation_units=2)
TMAPS['41146_0'] = TensorMap('41146_Episodes-containing-"Operative-procedure--main-OPCS"-data_0_0', group='continuous', channel_map={'41146_Episodes-containing-"Operative-procedure--main-OPCS"-data_0_0':0, 'not-missing':1}, normalization = {'mean':6.511103010342076, 'std':15.901931680454393 }, annotation_units=2)
TMAPS['41148_0'] = TensorMap('41148_Episodes-containing-"Date-of-operation"-data_0_0', group='continuous', channel_map={'41148_Episodes-containing-"Date-of-operation"-data_0_0':0, 'not-missing':1}, normalization = {'mean':5.509675916366197, 'std':14.264631762413561 }, annotation_units=2)
TMAPS['4194_0'] = TensorMap('4194_Pulse-rate_0_0', group='continuous', channel_map={'4194_Pulse-rate_0_0':0, 'not-missing':1}, normalization = {'mean':68.99399798566543, 'std':11.565395228695131 }, annotation_units=2)
TMAPS['4195_0'] = TensorMap('4195_Pulse-wave-reflection-index_0_0', group='continuous', channel_map={'4195_Pulse-wave-reflection-index_0_0':0, 'not-missing':1}, normalization = {'mean':67.73221647069846, 'std':32.2378595507904 }, annotation_units=2)
TMAPS['4196_0'] = TensorMap('4196_Pulse-wave-peak-to-peak-time_0_0', group='continuous', channel_map={'4196_Pulse-wave-peak-to-peak-time_0_0':0, 'not-missing':1}, normalization = {'mean':201.86109093039607, 'std':73.06232237329239 }, annotation_units=2)
TMAPS['4198_0'] = TensorMap('4198_Position-of-the-pulse-wave-peak_0_0', group='continuous', channel_map={'4198_Position-of-the-pulse-wave-peak_0_0':0, 'not-missing':1}, normalization = {'mean':22.284466201339768, 'std':5.413715360231675 }, annotation_units=2)
TMAPS['4199_0'] = TensorMap('4199_Position-of-pulse-wave-notch_0_0', group='continuous', channel_map={'4199_Position-of-pulse-wave-notch_0_0':0, 'not-missing':1}, normalization = {'mean':43.559990865226965, 'std':6.3531143053004016 }, annotation_units=2)
TMAPS['4200_0'] = TensorMap('4200_Position-of-the-shoulder-on-the-pulse-waveform_0_0', group='continuous', channel_map={'4200_Position-of-the-shoulder-on-the-pulse-waveform_0_0':0, 'not-missing':1}, normalization = {'mean':21.145160912540405, 'std':5.60611061746762 }, annotation_units=2)
TMAPS['93_0'] = TensorMap('93_Systolic-blood-pressure-manual-reading_0_0', group='continuous', channel_map={'93_Systolic-blood-pressure-manual-reading_0_0':0, 'not-missing':1}, normalization = {'mean':140.3862133518524, 'std':19.724899980685816 }, annotation_units=2)
TMAPS['94_0'] = TensorMap('94_Diastolic-blood-pressure-manual-reading_0_0', group='continuous', channel_map={'94_Diastolic-blood-pressure-manual-reading_0_0':0, 'not-missing':1}, normalization = {'mean':82.82571937558501, 'std':10.92371630412132 }, annotation_units=2)
TMAPS['95_0'] = TensorMap('95_Pulse-rate-during-bloodpressure-measurement_0_0', group='continuous', channel_map={'95_Pulse-rate-during-bloodpressure-measurement_0_0':0, 'not-missing':1}, normalization = {'mean':70.99827893354268, 'std':11.895857494232564 }, annotation_units=2)
TMAPS['102_0'] = TensorMap('102_Pulse-rate-automated-reading_0_0', group='continuous', channel_map={'102_Pulse-rate-automated-reading_0_0':0, 'not-missing':1}, normalization = {'mean':69.59752398691079, 'std':11.660299424180042 }, annotation_units=2)
TMAPS['4079_0'] = TensorMap('4079_Diastolic-blood-pressure-automated-reading_0_0', group='continuous', channel_map={'4079_Diastolic-blood-pressure-automated-reading_0_0':0, 'not-missing':1}, normalization = {'mean':82.20596276582111, 'std':10.70239616248642 }, annotation_units=2)
TMAPS['4080_0'] = TensorMap('4080_Systolic-blood-pressure-automated-reading_0_0', group='continuous', channel_map={'4080_Systolic-blood-pressure-automated-reading_0_0':0, 'not-missing':1}, normalization = {'mean':139.7395137122217, 'std':19.697135599750094 }, annotation_units=2)
TMAPS['6032_0'] = TensorMap('6032_Maximum-workload-during-fitness-test_0_0', group='continuous', channel_map={'6032_Maximum-workload-during-fitness-test_0_0':0, 'not-missing':1}, normalization = {'mean':71.6512910632512, 'std':35.672114699769054 }, annotation_units=2)
TMAPS['6033_0'] = TensorMap('6033_Maximum-heart-rate-during-fitness-test_0_0', group='continuous', channel_map={'6033_Maximum-heart-rate-during-fitness-test_0_0':0, 'not-missing':1}, normalization = {'mean':110.24538444760915, 'std':20.141409803234687 }, annotation_units=2)
TMAPS['6038_0'] = TensorMap('6038_Number-of-trend-entries_0_0', group='continuous', channel_map={'6038_Number-of-trend-entries_0_0':0, 'not-missing':1}, normalization = {'mean':58.75859415084659, 'std':25.777687705688756 }, annotation_units=2)
TMAPS['6039_0'] = TensorMap('6039_Duration-of-fitness-test_0_0', group='continuous', channel_map={'6039_Duration-of-fitness-test_0_0':0, 'not-missing':1}, normalization = {'mean':386.375346331452, 'std':107.83328117607346 }, annotation_units=2)
TMAPS['5088_0'] = TensorMap('5088_Astigmatism-angle-right_0_0', group='continuous', channel_map={'5088_Astigmatism-angle-right_0_0':0, 'not-missing':1}, normalization = {'mean':94.2498555394071, 'std':57.07598428829398 }, annotation_units=2)
TMAPS['5089_0'] = TensorMap('5089_Astigmatism-angle-left_0_0', group='continuous', channel_map={'5089_Astigmatism-angle-left_0_0':0, 'not-missing':1}, normalization = {'mean':91.69257457049503, 'std':56.23618224164145 }, annotation_units=2)
TMAPS['5100_0'] = TensorMap('5100_3mm-weak-meridian-angle-right_0_0', group='continuous', channel_map={'5100_3mm-weak-meridian-angle-right_0_0':0, 'not-missing':1}, normalization = {'mean':91.80619308826606, 'std':68.15464840591628 }, annotation_units=2)
TMAPS['5101_0'] = TensorMap('5101_6mm-weak-meridian-angle-right_0_0', group='continuous', channel_map={'5101_6mm-weak-meridian-angle-right_0_0':0, 'not-missing':1}, normalization = {'mean':83.39636798834427, 'std':61.854632248278364 }, annotation_units=2)
TMAPS['5102_0'] = TensorMap('5102_6mm-weak-meridian-angle-left_0_0', group='continuous', channel_map={'5102_6mm-weak-meridian-angle-left_0_0':0, 'not-missing':1}, normalization = {'mean':98.57233073872816, 'std':62.362890312378205 }, annotation_units=2)
TMAPS['5103_0'] = TensorMap('5103_3mm-weak-meridian-angle-left_0_0', group='continuous', channel_map={'5103_3mm-weak-meridian-angle-left_0_0':0, 'not-missing':1}, normalization = {'mean':86.5725469870973, 'std':68.06646293624155 }, annotation_units=2)
TMAPS['5104_0'] = TensorMap('5104_3mm-strong-meridian-angle-left_0_0', group='continuous', channel_map={'5104_3mm-strong-meridian-angle-left_0_0':0, 'not-missing':1}, normalization = {'mean':94.31662074797458, 'std':37.542963491957266 }, annotation_units=2)
TMAPS['5105_0'] = TensorMap('5105_6mm-strong-meridian-angle-left_0_0', group='continuous', channel_map={'5105_6mm-strong-meridian-angle-left_0_0':0, 'not-missing':1}, normalization = {'mean':86.6498751652225, 'std':44.754646366773336 }, annotation_units=2)
TMAPS['5106_0'] = TensorMap('5106_6mm-strong-meridian-angle-right_0_0', group='continuous', channel_map={'5106_6mm-strong-meridian-angle-right_0_0':0, 'not-missing':1}, normalization = {'mean':93.215912165678, 'std':45.974338391237026 }, annotation_units=2)
TMAPS['5107_0'] = TensorMap('5107_3mm-strong-meridian-angle-right_0_0', group='continuous', channel_map={'5107_3mm-strong-meridian-angle-right_0_0':0, 'not-missing':1}, normalization = {'mean':87.55626813670642, 'std':37.94401885453752 }, annotation_units=2)
TMAPS['5108_0'] = TensorMap('5108_3mm-asymmetry-angle-right_0_0', group='continuous', channel_map={'5108_3mm-asymmetry-angle-right_0_0':0, 'not-missing':1}, normalization = {'mean':173.69323081277417, 'std':125.48735922506422 }, annotation_units=2)
TMAPS['5109_0'] = TensorMap('5109_6mm-asymmetry-angle-right_0_0', group='continuous', channel_map={'5109_6mm-asymmetry-angle-right_0_0':0, 'not-missing':1}, normalization = {'mean':142.9314425704325, 'std':130.3438931201706 }, annotation_units=2)
TMAPS['5110_0'] = TensorMap('5110_6mm-asymmetry-angle-left_0_0', group='continuous', channel_map={'5110_6mm-asymmetry-angle-left_0_0':0, 'not-missing':1}, normalization = {'mean':154.4566452384512, 'std':64.77376267793522 }, annotation_units=2)
TMAPS['5111_0'] = TensorMap('5111_3mm-asymmetry-angle-left_0_0', group='continuous', channel_map={'5111_3mm-asymmetry-angle-left_0_0':0, 'not-missing':1}, normalization = {'mean':171.18433965285038, 'std':88.31132321489437 }, annotation_units=2)
TMAPS['5112_0'] = TensorMap('5112_3mm-cylindrical-power-angle-left_0_0', group='continuous', channel_map={'5112_3mm-cylindrical-power-angle-left_0_0':0, 'not-missing':1}, normalization = {'mean':86.5740747486522, 'std':68.08951169692335 }, annotation_units=2)
TMAPS['5113_0'] = TensorMap('5113_6mm-cylindrical-power-angle-left_0_0', group='continuous', channel_map={'5113_6mm-cylindrical-power-angle-left_0_0':0, 'not-missing':1}, normalization = {'mean':98.60493684453878, 'std':62.37910916935674 }, annotation_units=2)
TMAPS['5114_0'] = TensorMap('5114_6mm-cylindrical-power-angle-right_0_0', group='continuous', channel_map={'5114_6mm-cylindrical-power-angle-right_0_0':0, 'not-missing':1}, normalization = {'mean':83.4009946410326, 'std':61.86976754010024 }, annotation_units=2)
TMAPS['5115_0'] = TensorMap('5115_3mm-cylindrical-power-angle-right_0_0', group='continuous', channel_map={'5115_3mm-cylindrical-power-angle-right_0_0':0, 'not-missing':1}, normalization = {'mean':91.81374880415471, 'std':68.17829080571137 }, annotation_units=2)
TMAPS['5190_0'] = TensorMap('5190_Duration-at-which-refractometer-first-shown-right_0_0', group='continuous', channel_map={'5190_Duration-at-which-refractometer-first-shown-right_0_0':0, 'not-missing':1}, normalization = {'mean':135.90780062583818, 'std':55.56519262101874 }, annotation_units=2)
TMAPS['5193_0'] = TensorMap('5193_Duration-at-which-refractometer-first-shown-left_0_0', group='continuous', channel_map={'5193_Duration-at-which-refractometer-first-shown-left_0_0':0, 'not-missing':1}, normalization = {'mean':207.66262004453577, 'std':81.13354323283787 }, annotation_units=2)
TMAPS['5221_0'] = TensorMap('5221_Index-of-best-refractometry-result-right_0_0', group='continuous', channel_map={'5221_Index-of-best-refractometry-result-right_0_0':0, 'not-missing':1}, normalization = {'mean':1.0269484924073344, 'std':0.8333977950226363 }, annotation_units=2)
TMAPS['5237_0'] = TensorMap('5237_3mm-index-of-best-keratometry-results-right_0_0', group='continuous', channel_map={'5237_3mm-index-of-best-keratometry-results-right_0_0':0, 'not-missing':1}, normalization = {'mean':1.6441612313402287, 'std':0.6504802192997038 }, annotation_units=2)
TMAPS['5251_0'] = TensorMap('5251_6mm-index-of-best-keratometry-results-right_0_0', group='continuous', channel_map={'5251_6mm-index-of-best-keratometry-results-right_0_0':0, 'not-missing':1}, normalization = {'mean':1.4736809241336248, 'std':0.7158170127951107 }, annotation_units=2)
TMAPS['5276_0'] = TensorMap('5276_Index-of-best-refractometry-result-left_0_0', group='continuous', channel_map={'5276_Index-of-best-refractometry-result-left_0_0':0, 'not-missing':1}, normalization = {'mean':1.0177815633726137, 'std':0.8297549550655651 }, annotation_units=2)
TMAPS['5292_0'] = TensorMap('5292_3mm-index-of-best-keratometry-results-left_0_0', group='continuous', channel_map={'5292_3mm-index-of-best-keratometry-results-left_0_0':0, 'not-missing':1}, normalization = {'mean':1.7062022059157824, 'std':0.5957749977657647 }, annotation_units=2)
TMAPS['5306_0'] = TensorMap('5306_6mm-index-of-best-keratometry-results-left_0_0', group='continuous', channel_map={'5306_6mm-index-of-best-keratometry-results-left_0_0':0, 'not-missing':1}, normalization = {'mean':1.5475421186245095, 'std':0.6727983410882893 }, annotation_units=2)
TMAPS['6071_0'] = TensorMap('6071_Duration-at-which-OCT-screen-shown-right_0_0', group='continuous', channel_map={'6071_Duration-at-which-OCT-screen-shown-right_0_0':0, 'not-missing':1}, normalization = {'mean':306.4951370132258, 'std':106.94407584446039 }, annotation_units=2)
TMAPS['6073_0'] = TensorMap('6073_Duration-at-which-OCT-screen-shown-left_0_0', group='continuous', channel_map={'6073_Duration-at-which-OCT-screen-shown-left_0_0':0, 'not-missing':1}, normalization = {'mean':489.3518558439747, 'std':165.82050223475304 }, annotation_units=2)
TMAPS['5074_0'] = TensorMap('5074_Number-of-letters-shown-in-round-left_0_0', group='continuous', channel_map={'5074_Number-of-letters-shown-in-round-left_0_0':0, 'not-missing':1}, normalization = {'mean':4.967286607234348, 'std':0.28827070895619367 }, annotation_units=2)
TMAPS['5075_0'] = TensorMap('5075_Number-of-letters-shown-in-round-right_0_0', group='continuous', channel_map={'5075_Number-of-letters-shown-in-round-right_0_0':0, 'not-missing':1}, normalization = {'mean':4.972277937574149, 'std':0.26497080291379665 }, annotation_units=2)
TMAPS['5076_0'] = TensorMap('5076_Number-of-letters-correct-in-round-right_0_0', group='continuous', channel_map={'5076_Number-of-letters-correct-in-round-right_0_0':0, 'not-missing':1}, normalization = {'mean':4.391932606710309, 'std':1.0244422670255124 }, annotation_units=2)
TMAPS['5077_0'] = TensorMap('5077_Number-of-letters-correct-in-round-left_0_0', group='continuous', channel_map={'5077_Number-of-letters-correct-in-round-left_0_0':0, 'not-missing':1}, normalization = {'mean':4.439918707517847, 'std':1.0047716706498468 }, annotation_units=2)
TMAPS['5186_0'] = TensorMap('5186_Duration-visualacuity-screen-displayed-right_0_0', group='continuous', channel_map={'5186_Duration-visualacuity-screen-displayed-right_0_0':0, 'not-missing':1}, normalization = {'mean':20.12300642704118, 'std':21.512258697977963 }, annotation_units=2)
TMAPS['5188_0'] = TensorMap('5188_Duration-visualacuity-screen-displayed-left_0_0', group='continuous', channel_map={'5188_Duration-visualacuity-screen-displayed-left_0_0':0, 'not-missing':1}, normalization = {'mean':90.05816385525779, 'std':43.040300251799884 }, annotation_units=2)
TMAPS['5200_0'] = TensorMap('5200_Final-number-of-letters-displayed-right_0_0', group='continuous', channel_map={'5200_Final-number-of-letters-displayed-right_0_0':0, 'not-missing':1}, normalization = {'mean':4.985627107071224, 'std':0.18950836830050796 }, annotation_units=2)
TMAPS['5202_0'] = TensorMap('5202_Number-of-rounds-to-result-right_0_0', group='continuous', channel_map={'5202_Number-of-rounds-to-result-right_0_0':0, 'not-missing':1}, normalization = {'mean':2.8046942346263815, 'std':1.3398354820441578 }, annotation_units=2)
TMAPS['5207_0'] = TensorMap('5207_Final-number-of-letters-displayed-left_0_0', group='continuous', channel_map={'5207_Final-number-of-letters-displayed-left_0_0':0, 'not-missing':1}, normalization = {'mean':4.983434095023397, 'std':0.20249372141733327 }, annotation_units=2)
TMAPS['5209_0'] = TensorMap('5209_Number-of-rounds-to-result-left_0_0', group='continuous', channel_map={'5209_Number-of-rounds-to-result-left_0_0':0, 'not-missing':1}, normalization = {'mean':2.847158178775148, 'std':1.3276253610531024 }, annotation_units=2)
TMAPS['3064_0'] = TensorMap('3064_Peak-expiratory-flow-PEF_0_0', group='continuous', channel_map={'3064_Peak-expiratory-flow-PEF_0_0':0, 'not-missing':1}, normalization = {'mean':388.38859801056856, 'std':135.5885639331755 }, annotation_units=2)
TMAPS['21003_0'] = TensorMap('21003_Age-when-attended-assessment-centre_0_0', group='continuous', channel_map={'21003_Age-when-attended-assessment-centre_0_0':0, 'not-missing':1}, normalization = {'mean':56.528664029796104, 'std':8.095178263369803 }, annotation_units=2)
TMAPS['20016_0'] = TensorMap('20016_Fluid-intelligence-score_0_0', group='continuous', channel_map={'20016_Fluid-intelligence-score_0_0':0, 'not-missing':1}, normalization = {'mean':5.97912814377047, 'std':2.1597012338707624 }, annotation_units=2)
TMAPS['4282_0'] = TensorMap('4282_Maximum-digits-remembered-correctly_0_0', group='continuous', channel_map={'4282_Maximum-digits-remembered-correctly_0_0':0, 'not-missing':1}, normalization = {'mean':6.499363106496314, 'std':1.7234354203219537 }, annotation_units=2)
TMAPS['4283_0'] = TensorMap('4283_Number-of-rounds-of-numeric-memory-test-performed_0_0', group='continuous', channel_map={'4283_Number-of-rounds-of-numeric-memory-test-performed_0_0':0, 'not-missing':1}, normalization = {'mean':8.0918863627591, 'std':1.7582801757456386 }, annotation_units=2)
TMAPS['4285_0'] = TensorMap('4285_Time-to-complete-test_0_0', group='continuous', channel_map={'4285_Time-to-complete-test_0_0':0, 'not-missing':1}, normalization = {'mean':1353.3786814374494, 'std':473.86402801986645 }, annotation_units=2)
TMAPS['4288_0'] = TensorMap('4288_Time-to-answer_0_0', group='continuous', channel_map={'4288_Time-to-answer_0_0':0, 'not-missing':1}, normalization = {'mean':462.3688038746, 'std':196.64393058796793 }, annotation_units=2)
TMAPS['4290_0'] = TensorMap('4290_Duration-screen-displayed_0_0', group='continuous', channel_map={'4290_Duration-screen-displayed_0_0':0, 'not-missing':1}, normalization = {'mean':145.98500399233006, 'std':343.0132835234738 }, annotation_units=2)
TMAPS['4291_0'] = TensorMap('4291_Number-of-attempts_0_0', group='continuous', channel_map={'4291_Number-of-attempts_0_0':0, 'not-missing':1}, normalization = {'mean':1.4689734757750075, 'std':1.4088822137582422 }, annotation_units=2)
TMAPS['404_0'] = TensorMap('404_Duration-to-first-press-of-snapbutton-in-each-round_0_0', group='continuous', channel_map={'404_Duration-to-first-press-of-snapbutton-in-each-round_0_0':0, 'not-missing':1}, normalization = {'mean':719.7000622216077, 'std':302.46065759040846 }, annotation_units=2)
TMAPS['20023_0'] = TensorMap('20023_Mean-time-to-correctly-identify-matches_0_0', group='continuous', channel_map={'20023_Mean-time-to-correctly-identify-matches_0_0':0, 'not-missing':1}, normalization = {'mean':559.6448276625596, 'std':117.99682686035678 }, annotation_units=2)
TMAPS['1807_0'] = TensorMap('1807_Fathers-age-at-death_0_0', group='continuous', channel_map={'1807_Fathers-age-at-death_0_0':0, 'not-missing':1}, normalization = {'mean':70.55702039915778, 'std':13.016989918985754 }, annotation_units=2)
TMAPS['1845_0'] = TensorMap('1845_Mothers-age_0_0', group='continuous', channel_map={'1845_Mothers-age_0_0':0, 'not-missing':1}, normalization = {'mean':78.267340513838, 'std':8.147265792727755 }, annotation_units=2)
TMAPS['1873_0'] = TensorMap('1873_Number-of-full-brothers_0_0', group='continuous', channel_map={'1873_Number-of-full-brothers_0_0':0, 'not-missing':1}, normalization = {'mean':1.1572519981670797, 'std':1.2897229940862351 }, annotation_units=2)
TMAPS['1883_0'] = TensorMap('1883_Number-of-full-sisters_0_0', group='continuous', channel_map={'1883_Number-of-full-sisters_0_0':0, 'not-missing':1}, normalization = {'mean':1.0769838936922875, 'std':1.2215229105431702 }, annotation_units=2)
TMAPS['2946_0'] = TensorMap('2946_Fathers-age_0_0', group='continuous', channel_map={'2946_Fathers-age_0_0':0, 'not-missing':1}, normalization = {'mean':77.86767974637586, 'std':7.339275164160879 }, annotation_units=2)
TMAPS['3526_0'] = TensorMap('3526_Mothers-age-at-death_0_0', group='continuous', channel_map={'3526_Mothers-age-at-death_0_0':0, 'not-missing':1}, normalization = {'mean':74.12838348241905, 'std':13.249252559096163 }, annotation_units=2)
TMAPS['3972_0'] = TensorMap('3972_Number-of-adopted-brothers_0_0', group='continuous', channel_map={'3972_Number-of-adopted-brothers_0_0':0, 'not-missing':1}, normalization = {'mean':0.6873114181356201, 'std':1.1829150196999665 }, annotation_units=2)
TMAPS['3982_0'] = TensorMap('3982_Number-of-adopted-sisters_0_0', group='continuous', channel_map={'3982_Number-of-adopted-sisters_0_0':0, 'not-missing':1}, normalization = {'mean':0.6215491402429405, 'std':1.0470171415456753 }, annotation_units=2)
TMAPS['5057_0'] = TensorMap('5057_Number-of-older-siblings_0_0', group='continuous', channel_map={'5057_Number-of-older-siblings_0_0':0, 'not-missing':1}, normalization = {'mean':1.2008838517889373, 'std':1.49184809839756 }, annotation_units=2)
TMAPS['2355_0'] = TensorMap('2355_Most-recent-bowel-cancer-screening_0_0', group='continuous', channel_map={'2355_Most-recent-bowel-cancer-screening_0_0':0, 'not-missing':1}, normalization = {'mean':2.797046020516682, 'std':4.39132337722672 }, annotation_units=2)
TMAPS['3809_0'] = TensorMap('3809_Time-since-last-prostate-specific-antigen-PSA-test_0_0', group='continuous', channel_map={'3809_Time-since-last-prostate-specific-antigen-PSA-test_0_0':0, 'not-missing':1}, normalization = {'mean':2.13875806326261, 'std':2.5094964014406607 }, annotation_units=2)
TMAPS['2217_0'] = TensorMap('2217_Age-started-wearing-glasses-or-contact-lenses_0_0', group='continuous', channel_map={'2217_Age-started-wearing-glasses-or-contact-lenses_0_0':0, 'not-missing':1}, normalization = {'mean':31.791430485840905, 'std':16.920459928839417 }, annotation_units=2)
TMAPS['4689_0'] = TensorMap('4689_Age-glaucoma-diagnosed_0_0', group='continuous', channel_map={'4689_Age-glaucoma-diagnosed_0_0':0, 'not-missing':1}, normalization = {'mean':52.86446342369105, 'std':11.282773430777182 }, annotation_units=2)
TMAPS['4700_0'] = TensorMap('4700_Age-cataract-diagnosed_0_0', group='continuous', channel_map={'4700_Age-cataract-diagnosed_0_0':0, 'not-missing':1}, normalization = {'mean':57.14578376949511, 'std':11.461195437623577 }, annotation_units=2)
TMAPS['5430_0'] = TensorMap('5430_Age-when-loss-of-vision-due-to-injury-or-trauma-diagnosed_0_0', group='continuous', channel_map={'5430_Age-when-loss-of-vision-due-to-injury-or-trauma-diagnosed_0_0':0, 'not-missing':1}, normalization = {'mean':33.99254658385093, 'std':19.237836530766042 }, annotation_units=2)
TMAPS['5901_0'] = TensorMap('5901_Age-when-diabetesrelated-eye-disease-diagnosed_0_0', group='continuous', channel_map={'5901_Age-when-diabetesrelated-eye-disease-diagnosed_0_0':0, 'not-missing':1}, normalization = {'mean':50.8926453143535, 'std':13.563732274556074 }, annotation_units=2)
TMAPS['5923_0'] = TensorMap('5923_Age-macular-degeneration-diagnosed_0_0', group='continuous', channel_map={'5923_Age-macular-degeneration-diagnosed_0_0':0, 'not-missing':1}, normalization = {'mean':56.25661587810746, 'std':10.77486616684387 }, annotation_units=2)
TMAPS['5945_0'] = TensorMap('5945_Age-other-serious-eye-condition-diagnosed_0_0', group='continuous', channel_map={'5945_Age-other-serious-eye-condition-diagnosed_0_0':0, 'not-missing':1}, normalization = {'mean':44.57197452229299, 'std':17.765164872237442 }, annotation_units=2)
TMAPS['2966_0'] = TensorMap('2966_Age-high-blood-pressure-diagnosed_0_0', group='continuous', channel_map={'2966_Age-high-blood-pressure-diagnosed_0_0':0, 'not-missing':1}, normalization = {'mean':50.62932990158471, 'std':9.947631697169944 }, annotation_units=2)
TMAPS['2976_0'] = TensorMap('2976_Age-diabetes-diagnosed_0_0', group='continuous', channel_map={'2976_Age-diabetes-diagnosed_0_0':0, 'not-missing':1}, normalization = {'mean':50.96060815480304, 'std':12.595242793780113 }, annotation_units=2)
TMAPS['3627_0'] = TensorMap('3627_Age-angina-diagnosed_0_0', group='continuous', channel_map={'3627_Age-angina-diagnosed_0_0':0, 'not-missing':1}, normalization = {'mean':53.52818496801706, 'std':7.994576377131897 }, annotation_units=2)
TMAPS['3761_0'] = TensorMap('3761_Age-hay-fever-rhinitis-or-eczema-diagnosed_0_0', group='continuous', channel_map={'3761_Age-hay-fever-rhinitis-or-eczema-diagnosed_0_0':0, 'not-missing':1}, normalization = {'mean':25.20712345728322, 'std':16.126860650550718 }, annotation_units=2)
TMAPS['3786_0'] = TensorMap('3786_Age-asthma-diagnosed_0_0', group='continuous', channel_map={'3786_Age-asthma-diagnosed_0_0':0, 'not-missing':1}, normalization = {'mean':31.15730315152698, 'std':18.68789469479193 }, annotation_units=2)
TMAPS['3894_0'] = TensorMap('3894_Age-heart-attack-diagnosed_0_0', group='continuous', channel_map={'3894_Age-heart-attack-diagnosed_0_0':0, 'not-missing':1}, normalization = {'mean':52.69559782123404, 'std':8.420140564124607 }, annotation_units=2)
TMAPS['3992_0'] = TensorMap('3992_Age-emphysemachronic-bronchitis-diagnosed_0_0', group='continuous', channel_map={'3992_Age-emphysemachronic-bronchitis-diagnosed_0_0':0, 'not-missing':1}, normalization = {'mean':41.85701545778835, 'std':19.9536414596822 }, annotation_units=2)
TMAPS['4012_0'] = TensorMap('4012_Age-deepvein-thrombosis-DVT-blood-clot-in-leg-diagnosed_0_0', group='continuous', channel_map={'4012_Age-deepvein-thrombosis-DVT-blood-clot-in-leg-diagnosed_0_0':0, 'not-missing':1}, normalization = {'mean':43.03936501126247, 'std':13.76365587339617 }, annotation_units=2)
TMAPS['4022_0'] = TensorMap('4022_Age-pulmonary-embolism-blood-clot-in-lung-diagnosed_0_0', group='continuous', channel_map={'4022_Age-pulmonary-embolism-blood-clot-in-lung-diagnosed_0_0':0, 'not-missing':1}, normalization = {'mean':45.80101137800253, 'std':13.01058983198316 }, annotation_units=2)
TMAPS['4056_0'] = TensorMap('4056_Age-stroke-diagnosed_0_0', group='continuous', channel_map={'4056_Age-stroke-diagnosed_0_0':0, 'not-missing':1}, normalization = {'mean':53.57414500683995, 'std':9.477407172006835 }, annotation_units=2)
TMAPS['4269_0'] = TensorMap('4269_Number-of-triplets-attempted-left_0_0', group='continuous', channel_map={'4269_Number-of-triplets-attempted-left_0_0':0, 'not-missing':1}, normalization = {'mean':14.663892064399352, 'std':2.0772202974185565 }, annotation_units=2)
TMAPS['4272_0'] = TensorMap('4272_Duration-of-hearing-test-left_0_0', group='continuous', channel_map={'4272_Duration-of-hearing-test-left_0_0':0, 'not-missing':1}, normalization = {'mean':1723.7206106506621, 'std':601.5781982464171 }, annotation_units=2)
TMAPS['4276_0'] = TensorMap('4276_Number-of-triplets-attempted-right_0_0', group='continuous', channel_map={'4276_Number-of-triplets-attempted-right_0_0':0, 'not-missing':1}, normalization = {'mean':14.652431840630243, 'std':2.111530237245023 }, annotation_units=2)
TMAPS['4279_0'] = TensorMap('4279_Duration-of-hearing-test-right_0_0', group='continuous', channel_map={'4279_Duration-of-hearing-test-right_0_0':0, 'not-missing':1}, normalization = {'mean':1719.613481929288, 'std':611.0714896145527 }, annotation_units=2)
TMAPS['1568_0'] = TensorMap('1568_Average-weekly-red-wine-intake_0_0', group='continuous', channel_map={'1568_Average-weekly-red-wine-intake_0_0':0, 'not-missing':1}, normalization = {'mean':3.915260290838134, 'std':5.582441118091592 }, annotation_units=2)
TMAPS['1578_0'] = TensorMap('1578_Average-weekly-champagne-plus-white-wine-intake_0_0', group='continuous', channel_map={'1578_Average-weekly-champagne-plus-white-wine-intake_0_0':0, 'not-missing':1}, normalization = {'mean':2.6540082181112292, 'std':4.711185503776027 }, annotation_units=2)
TMAPS['1588_0'] = TensorMap('1588_Average-weekly-beer-plus-cider-intake_0_0', group='continuous', channel_map={'1588_Average-weekly-beer-plus-cider-intake_0_0':0, 'not-missing':1}, normalization = {'mean':3.012861447528539, 'std':5.6049821762136345 }, annotation_units=2)
TMAPS['1598_0'] = TensorMap('1598_Average-weekly-spirits-intake_0_0', group='continuous', channel_map={'1598_Average-weekly-spirits-intake_0_0':0, 'not-missing':1}, normalization = {'mean':1.8542343500504626, 'std':5.341069773159757 }, annotation_units=2)
TMAPS['1608_0'] = TensorMap('1608_Average-weekly-fortified-wine-intake_0_0', group='continuous', channel_map={'1608_Average-weekly-fortified-wine-intake_0_0':0, 'not-missing':1}, normalization = {'mean':0.2385852295131399, 'std':1.272780338014268 }, annotation_units=2)
TMAPS['4407_0'] = TensorMap('4407_Average-monthly-red-wine-intake_0_0', group='continuous', channel_map={'4407_Average-monthly-red-wine-intake_0_0':0, 'not-missing':1}, normalization = {'mean':0.9920394802102966, 'std':1.8402392843801867 }, annotation_units=2)
TMAPS['4418_0'] = TensorMap('4418_Average-monthly-champagne-plus-white-wine-intake_0_0', group='continuous', channel_map={'4418_Average-monthly-champagne-plus-white-wine-intake_0_0':0, 'not-missing':1}, normalization = {'mean':0.9911348398311398, 'std':1.6259766993760472 }, annotation_units=2)
TMAPS['4429_0'] = TensorMap('4429_Average-monthly-beer-plus-cider-intake_0_0', group='continuous', channel_map={'4429_Average-monthly-beer-plus-cider-intake_0_0':0, 'not-missing':1}, normalization = {'mean':1.0124589029243813, 'std':2.3721334384336195 }, annotation_units=2)
TMAPS['4440_0'] = TensorMap('4440_Average-monthly-spirits-intake_0_0', group='continuous', channel_map={'4440_Average-monthly-spirits-intake_0_0':0, 'not-missing':1}, normalization = {'mean':0.7451365251310591, 'std':2.2294504290302917 }, annotation_units=2)
TMAPS['4451_0'] = TensorMap('4451_Average-monthly-fortified-wine-intake_0_0', group='continuous', channel_map={'4451_Average-monthly-fortified-wine-intake_0_0':0, 'not-missing':1}, normalization = {'mean':0.1654761610519291, 'std':0.8525769142369897 }, annotation_units=2)
TMAPS['4462_0'] = TensorMap('4462_Average-monthly-intake-of-other-alcoholic-drinks_0_0', group='continuous', channel_map={'4462_Average-monthly-intake-of-other-alcoholic-drinks_0_0':0, 'not-missing':1}, normalization = {'mean':0.10944598064388703, 'std':0.643182120683188 }, annotation_units=2)
TMAPS['5364_0'] = TensorMap('5364_Average-weekly-intake-of-other-alcoholic-drinks_0_0', group='continuous', channel_map={'5364_Average-weekly-intake-of-other-alcoholic-drinks_0_0':0, 'not-missing':1}, normalization = {'mean':0.03852570253005904, 'std':0.512608370266108 }, annotation_units=2)
TMAPS['1289_0'] = TensorMap('1289_Cooked-vegetable-intake_0_0', group='continuous', channel_map={'1289_Cooked-vegetable-intake_0_0':0, 'not-missing':1}, normalization = {'mean':2.7333324579460587, 'std':1.9271371998003681 }, annotation_units=2)
TMAPS['1299_0'] = TensorMap('1299_Salad--raw-vegetable-intake_0_0', group='continuous', channel_map={'1299_Salad--raw-vegetable-intake_0_0':0, 'not-missing':1}, normalization = {'mean':2.1893353410204845, 'std':2.1572698908462056 }, annotation_units=2)
TMAPS['1309_0'] = TensorMap('1309_Fresh-fruit-intake_0_0', group='continuous', channel_map={'1309_Fresh-fruit-intake_0_0':0, 'not-missing':1}, normalization = {'mean':2.2351524108183445, 'std':1.613452452840948 }, annotation_units=2)
TMAPS['1319_0'] = TensorMap('1319_Dried-fruit-intake_0_0', group='continuous', channel_map={'1319_Dried-fruit-intake_0_0':0, 'not-missing':1}, normalization = {'mean':0.8517375997417559, 'std':1.7534176502852705 }, annotation_units=2)
TMAPS['1438_0'] = TensorMap('1438_Bread-intake_0_0', group='continuous', channel_map={'1438_Bread-intake_0_0':0, 'not-missing':1}, normalization = {'mean':12.268363500319223, 'std':8.617219473176357 }, annotation_units=2)
TMAPS['1458_0'] = TensorMap('1458_Cereal-intake_0_0', group='continuous', channel_map={'1458_Cereal-intake_0_0':0, 'not-missing':1}, normalization = {'mean':4.496633822328278, 'std':2.795095210110548 }, annotation_units=2)
TMAPS['1488_0'] = TensorMap('1488_Tea-intake_0_0', group='continuous', channel_map={'1488_Tea-intake_0_0':0, 'not-missing':1}, normalization = {'mean':3.424536540233124, 'std':2.882540504454799 }, annotation_units=2)
TMAPS['1498_0'] = TensorMap('1498_Coffee-intake_0_0', group='continuous', channel_map={'1498_Coffee-intake_0_0':0, 'not-missing':1}, normalization = {'mean':2.015086529948216, 'std':2.0914960998390497 }, annotation_units=2)
TMAPS['1528_0'] = TensorMap('1528_Water-intake_0_0', group='continuous', channel_map={'1528_Water-intake_0_0':0, 'not-missing':1}, normalization = {'mean':2.7322977785723324, 'std':2.261996814128837 }, annotation_units=2)
TMAPS['3680_0'] = TensorMap('3680_Age-when-last-ate-meat_0_0', group='continuous', channel_map={'3680_Age-when-last-ate-meat_0_0':0, 'not-missing':1}, normalization = {'mean':29.74062983480561, 'std':14.417292213873964 }, annotation_units=2)
TMAPS['864_0'] = TensorMap('864_Number-of-daysweek-walked-10-minutes_0_0', group='continuous', channel_map={'864_Number-of-daysweek-walked-10-minutes_0_0':0, 'not-missing':1}, normalization = {'mean':5.369732285440756, 'std':1.9564911925721618 }, annotation_units=2)
TMAPS['874_0'] = TensorMap('874_Duration-of-walks_0_0', group='continuous', channel_map={'874_Duration-of-walks_0_0':0, 'not-missing':1}, normalization = {'mean':61.64092215093373, 'std':78.79522990818906 }, annotation_units=2)
TMAPS['884_0'] = TensorMap('884_Number-of-daysweek-of-moderate-physical-activity-10-minutes_0_0', group='continuous', channel_map={'884_Number-of-daysweek-of-moderate-physical-activity-10-minutes_0_0':0, 'not-missing':1}, normalization = {'mean':3.6258833281089258, 'std':2.3343738999823676 }, annotation_units=2)
TMAPS['894_0'] = TensorMap('894_Duration-of-moderate-activity_0_0', group='continuous', channel_map={'894_Duration-of-moderate-activity_0_0':0, 'not-missing':1}, normalization = {'mean':66.2862593866103, 'std':77.28681218835422 }, annotation_units=2)
TMAPS['904_0'] = TensorMap('904_Number-of-daysweek-of-vigorous-physical-activity-10-minutes_0_0', group='continuous', channel_map={'904_Number-of-daysweek-of-vigorous-physical-activity-10-minutes_0_0':0, 'not-missing':1}, normalization = {'mean':1.838718301735063, 'std':1.9593505421480895 }, annotation_units=2)
TMAPS['914_0'] = TensorMap('914_Duration-of-vigorous-activity_0_0', group='continuous', channel_map={'914_Duration-of-vigorous-activity_0_0':0, 'not-missing':1}, normalization = {'mean':44.854488382965144, 'std':48.159967071781466 }, annotation_units=2)
TMAPS['1070_0'] = TensorMap('1070_Time-spent-watching-television-TV_0_0', group='continuous', channel_map={'1070_Time-spent-watching-television-TV_0_0':0, 'not-missing':1}, normalization = {'mean':2.7753595642790914, 'std':1.7135478462887321 }, annotation_units=2)
TMAPS['1080_0'] = TensorMap('1080_Time-spent-using-computer_0_0', group='continuous', channel_map={'1080_Time-spent-using-computer_0_0':0, 'not-missing':1}, normalization = {'mean':0.9781465855433753, 'std':1.4444414103121512 }, annotation_units=2)
TMAPS['1090_0'] = TensorMap('1090_Time-spent-driving_0_0', group='continuous', channel_map={'1090_Time-spent-driving_0_0':0, 'not-missing':1}, normalization = {'mean':0.8219851505445748, 'std':1.304094814200189 }, annotation_units=2)
TMAPS['1050_0'] = TensorMap('1050_Time-spend-outdoors-in-summer_0_0', group='continuous', channel_map={'1050_Time-spend-outdoors-in-summer_0_0':0, 'not-missing':1}, normalization = {'mean':3.774492304870845, 'std':2.430483731404539 }, annotation_units=2)
TMAPS['1060_0'] = TensorMap('1060_Time-spent-outdoors-in-winter_0_0', group='continuous', channel_map={'1060_Time-spent-outdoors-in-winter_0_0':0, 'not-missing':1}, normalization = {'mean':1.8629686916635555, 'std':1.88916218603397 }, annotation_units=2)
TMAPS['1737_0'] = TensorMap('1737_Childhood-sunburn-occasions_0_0', group='continuous', channel_map={'1737_Childhood-sunburn-occasions_0_0':0, 'not-missing':1}, normalization = {'mean':1.61452756282664, 'std':5.099112887614853 }, annotation_units=2)
TMAPS['2277_0'] = TensorMap('2277_Frequency-of-solariumsunlamp-use_0_0', group='continuous', channel_map={'2277_Frequency-of-solariumsunlamp-use_0_0':0, 'not-missing':1}, normalization = {'mean':0.505790642711553, 'std':4.515383244116808 }, annotation_units=2)
TMAPS['1269_0'] = TensorMap('1269_Exposure-to-tobacco-smoke-at-home_0_0', group='continuous', channel_map={'1269_Exposure-to-tobacco-smoke-at-home_0_0':0, 'not-missing':1}, normalization = {'mean':0.5406430571803326, 'std':4.51625446450225 }, annotation_units=2)
TMAPS['1279_0'] = TensorMap('1279_Exposure-to-tobacco-smoke-outside-home_0_0', group='continuous', channel_map={'1279_Exposure-to-tobacco-smoke-outside-home_0_0':0, 'not-missing':1}, normalization = {'mean':0.5147870910224704, 'std':2.552075989818829 }, annotation_units=2)
TMAPS['2867_0'] = TensorMap('2867_Age-started-smoking-in-former-smokers_0_0', group='continuous', channel_map={'2867_Age-started-smoking-in-former-smokers_0_0':0, 'not-missing':1}, normalization = {'mean':17.282207671342153, 'std':3.7022140507314902 }, annotation_units=2)
TMAPS['2887_0'] = TensorMap('2887_Number-of-cigarettes-previously-smoked-daily_0_0', group='continuous', channel_map={'2887_Number-of-cigarettes-previously-smoked-daily_0_0':0, 'not-missing':1}, normalization = {'mean':18.92662147068755, 'std':10.590930376362259 }, annotation_units=2)
TMAPS['2897_0'] = TensorMap('2897_Age-stopped-smoking_0_0', group='continuous', channel_map={'2897_Age-stopped-smoking_0_0':0, 'not-missing':1}, normalization = {'mean':39.85977540791475, 'std':11.609102618636248 }, annotation_units=2)
TMAPS['2926_0'] = TensorMap('2926_Number-of-unsuccessful-stopsmoking-attempts_0_0', group='continuous', channel_map={'2926_Number-of-unsuccessful-stopsmoking-attempts_0_0':0, 'not-missing':1}, normalization = {'mean':2.959147913360183, 'std':7.501959528400597 }, annotation_units=2)
TMAPS['3436_0'] = TensorMap('3436_Age-started-smoking-in-current-smokers_0_0', group='continuous', channel_map={'3436_Age-started-smoking-in-current-smokers_0_0':0, 'not-missing':1}, normalization = {'mean':17.841531041242167, 'std':5.7931118244956386 }, annotation_units=2)
TMAPS['3456_0'] = TensorMap('3456_Number-of-cigarettes-currently-smoked-daily-current-cigarette-smokers_0_0', group='continuous', channel_map={'3456_Number-of-cigarettes-currently-smoked-daily-current-cigarette-smokers_0_0':0, 'not-missing':1}, normalization = {'mean':15.54162404268849, 'std':8.449748976287712 }, annotation_units=2)
TMAPS['3659_0'] = TensorMap('3659_Year-immigrated-to-UK-United-Kingdom_0_0', group='continuous', channel_map={'3659_Year-immigrated-to-UK-United-Kingdom_0_0':0, 'not-missing':1}, normalization = {'mean':22.465338409282605, 'std':13.686850791329379 }, annotation_units=2)
TMAPS['2684_0'] = TensorMap('2684_Years-since-last-breast-cancer-screening--mammogram_0_0', group='continuous', channel_map={'2684_Years-since-last-breast-cancer-screening--mammogram_0_0':0, 'not-missing':1}, normalization = {'mean':1.717074142781908, 'std':2.2587430015104646 }, annotation_units=2)
TMAPS['2704_0'] = TensorMap('2704_Years-since-last-cervical-smear-test_0_0', group='continuous', channel_map={'2704_Years-since-last-cervical-smear-test_0_0':0, 'not-missing':1}, normalization = {'mean':4.105777871089649, 'std':5.6740575459585685 }, annotation_units=2)
TMAPS['2714_0'] = TensorMap('2714_Age-when-periods-started-menarche_0_0', group='continuous', channel_map={'2714_Age-when-periods-started-menarche_0_0':0, 'not-missing':1}, normalization = {'mean':12.96990151097136, 'std':1.6232806075626698 }, annotation_units=2)
TMAPS['2734_0'] = TensorMap('2734_Number-of-live-births_0_0', group='continuous', channel_map={'2734_Number-of-live-births_0_0':0, 'not-missing':1}, normalization = {'mean':1.819376369137892, 'std':1.2026786746412692 }, annotation_units=2)
TMAPS['2744_0'] = TensorMap('2744_Birth-weight-of-first-child_0_0', group='continuous', channel_map={'2744_Birth-weight-of-first-child_0_0':0, 'not-missing':1}, normalization = {'mean':6.955495545886765, 'std':1.3349322634693284 }, annotation_units=2)
TMAPS['2754_0'] = TensorMap('2754_Age-at-first-live-birth_0_0', group='continuous', channel_map={'2754_Age-at-first-live-birth_0_0':0, 'not-missing':1}, normalization = {'mean':25.253777888273955, 'std':4.764480092881962 }, annotation_units=2)
TMAPS['2764_0'] = TensorMap('2764_Age-at-last-live-birth_0_0', group='continuous', channel_map={'2764_Age-at-last-live-birth_0_0':0, 'not-missing':1}, normalization = {'mean':30.142149126599794, 'std':5.261248437897753 }, annotation_units=2)
TMAPS['2794_0'] = TensorMap('2794_Age-started-oral-contraceptive-pill_0_0', group='continuous', channel_map={'2794_Age-started-oral-contraceptive-pill_0_0':0, 'not-missing':1}, normalization = {'mean':21.53547776280958, 'std':4.671792581709166 }, annotation_units=2)
TMAPS['2804_0'] = TensorMap('2804_Age-when-last-used-oral-contraceptive-pill_0_0', group='continuous', channel_map={'2804_Age-when-last-used-oral-contraceptive-pill_0_0':0, 'not-missing':1}, normalization = {'mean':31.031083050024282, 'std':8.925674963599976 }, annotation_units=2)
TMAPS['2824_0'] = TensorMap('2824_Age-at-hysterectomy_0_0', group='continuous', channel_map={'2824_Age-at-hysterectomy_0_0':0, 'not-missing':1}, normalization = {'mean':43.92788962861955, 'std':8.037252704751545 }, annotation_units=2)
TMAPS['3536_0'] = TensorMap('3536_Age-started-hormonereplacement-therapy-HRT_0_0', group='continuous', channel_map={'3536_Age-started-hormonereplacement-therapy-HRT_0_0':0, 'not-missing':1}, normalization = {'mean':47.37626406151141, 'std':5.445400814632194 }, annotation_units=2)
TMAPS['3546_0'] = TensorMap('3546_Age-last-used-hormonereplacement-therapy-HRT_0_0', group='continuous', channel_map={'3546_Age-last-used-hormonereplacement-therapy-HRT_0_0':0, 'not-missing':1}, normalization = {'mean':44.46084305238694, 'std':21.207204287805915 }, annotation_units=2)
TMAPS['3581_0'] = TensorMap('3581_Age-at-menopause-last-menstrual-period_0_0', group='continuous', channel_map={'3581_Age-at-menopause-last-menstrual-period_0_0':0, 'not-missing':1}, normalization = {'mean':49.664134229923704, 'std':5.141843249423144 }, annotation_units=2)
TMAPS['3700_0'] = TensorMap('3700_Time-since-last-menstrual-period_0_0', group='continuous', channel_map={'3700_Time-since-last-menstrual-period_0_0':0, 'not-missing':1}, normalization = {'mean':15.229601180633345, 'std':22.323697538097317 }, annotation_units=2)
TMAPS['3710_0'] = TensorMap('3710_Length-of-menstrual-cycle_0_0', group='continuous', channel_map={'3710_Length-of-menstrual-cycle_0_0':0, 'not-missing':1}, normalization = {'mean':21.86553062257466, 'std':12.21734466640996 }, annotation_units=2)
TMAPS['3829_0'] = TensorMap('3829_Number-of-stillbirths_0_0', group='continuous', channel_map={'3829_Number-of-stillbirths_0_0':0, 'not-missing':1}, normalization = {'mean':0.09749985631358124, 'std':0.3785289530156767 }, annotation_units=2)
TMAPS['3839_0'] = TensorMap('3839_Number-of-spontaneous-miscarriages_0_0', group='continuous', channel_map={'3839_Number-of-spontaneous-miscarriages_0_0':0, 'not-missing':1}, normalization = {'mean':0.9475369798626792, 'std':1.0744330075910697 }, annotation_units=2)
TMAPS['3849_0'] = TensorMap('3849_Number-of-pregnancy-terminations_0_0', group='continuous', channel_map={'3849_Number-of-pregnancy-terminations_0_0':0, 'not-missing':1}, normalization = {'mean':0.551079719793898, 'std':0.7548903594741069 }, annotation_units=2)
TMAPS['3872_0'] = TensorMap('3872_Age-of-primiparous-women-at-birth-of-child_0_0', group='continuous', channel_map={'3872_Age-of-primiparous-women-at-birth-of-child_0_0':0, 'not-missing':1}, normalization = {'mean':28.980699638118214, 'std':6.440492474969244 }, annotation_units=2)
TMAPS['3882_0'] = TensorMap('3882_Age-at-bilateral-oophorectomy-both-ovaries-removed_0_0', group='continuous', channel_map={'3882_Age-at-bilateral-oophorectomy-both-ovaries-removed_0_0':0, 'not-missing':1}, normalization = {'mean':47.445413817495876, 'std':7.7723992056880125 }, annotation_units=2)
TMAPS['2405_0'] = TensorMap('2405_Number-of-children-fathered_0_0', group='continuous', channel_map={'2405_Number-of-children-fathered_0_0':0, 'not-missing':1}, normalization = {'mean':1.8139426304953912, 'std':1.3398870571004238 }, annotation_units=2)
TMAPS['129_0'] = TensorMap('129_Place-of-birth-in-UK--north-coordinate_0_0', group='continuous', channel_map={'129_Place-of-birth-in-UK--north-coordinate_0_0':0, 'not-missing':1}, normalization = {'mean':354196.4251053943, 'std':167066.6628802383 }, annotation_units=2)
TMAPS['130_0'] = TensorMap('130_Place-of-birth-in-UK--east-coordinate_0_0', group='continuous', channel_map={'130_Place-of-birth-in-UK--east-coordinate_0_0':0, 'not-missing':1}, normalization = {'mean':405707.4754006309, 'std':94504.40431910308 }, annotation_units=2)
TMAPS['84_0'] = TensorMap('84_Cancer-yearage-first-occurred_0_0', group='continuous', channel_map={'84_Cancer-yearage-first-occurred_0_0':0, 'not-missing':1}, normalization = {'mean':50.74811777681868, 'std':11.472228279868467 }, annotation_units=2)
TMAPS['87_0'] = TensorMap('87_Noncancer-illness-yearage-first-occurred_0_0', group='continuous', channel_map={'87_Noncancer-illness-yearage-first-occurred_0_0':0, 'not-missing':1}, normalization = {'mean':41.85184859366128, 'std':18.171028411475508 }, annotation_units=2)
TMAPS['134_0'] = TensorMap('134_Number-of-selfreported-cancers_0_0', group='continuous', channel_map={'134_Number-of-selfreported-cancers_0_0':0, 'not-missing':1}, normalization = {'mean':0.0892987400200098, 'std':0.30857048542818705 }, annotation_units=2)
TMAPS['135_0'] = TensorMap('135_Number-of-selfreported-noncancer-illnesses_0_0', group='continuous', channel_map={'135_Number-of-selfreported-noncancer-illnesses_0_0':0, 'not-missing':1}, normalization = {'mean':1.8634848949883807, 'std':1.868721992736285 }, annotation_units=2)
TMAPS['137_0'] = TensorMap('137_Number-of-treatmentsmedications-taken_0_0', group='continuous', channel_map={'137_Number-of-treatmentsmedications-taken_0_0':0, 'not-missing':1}, normalization = {'mean':2.459715318662133, 'std':2.6811042175788256 }, annotation_units=2)
TMAPS['92_0'] = TensorMap('92_Operation-yearage-first-occurred_0_0', group='continuous', channel_map={'92_Operation-yearage-first-occurred_0_0':0, 'not-missing':1}, normalization = {'mean':33.150636873506826, 'std':18.22951068285375 }, annotation_units=2)
TMAPS['136_0'] = TensorMap('136_Number-of-operations-selfreported_0_0', group='continuous', channel_map={'136_Number-of-operations-selfreported_0_0':0, 'not-missing':1}, normalization = {'mean':1.7308202824491683, 'std':1.5516231717333469 }, annotation_units=2)
TMAPS['30314_0'] = TensorMap('30314_Volume-of-EDTA1-plasma-held-by-UKB_0_0', group='continuous', channel_map={'30314_Volume-of-EDTA1-plasma-held-by-UKB_0_0':0, 'not-missing':1}, normalization = {'mean':3196.4661523038253, 'std':511.1349857506888 }, annotation_units=2)
TMAPS['30324_0'] = TensorMap('30324_Volume-of-EDTA1-red-cells-held-by-UKB_0_0', group='continuous', channel_map={'30324_Volume-of-EDTA1-red-cells-held-by-UKB_0_0':0, 'not-missing':1}, normalization = {'mean':834.5815453560646, 'std':110.05863298631003 }, annotation_units=2)
TMAPS['30334_0'] = TensorMap('30334_Volume-of-EDTA1-buffy-held-by-UKB_0_0', group='continuous', channel_map={'30334_Volume-of-EDTA1-buffy-held-by-UKB_0_0':0, 'not-missing':1}, normalization = {'mean':464.9598200584563, 'std':420.3182260273604 }, annotation_units=2)
TMAPS['30344_0'] = TensorMap('30344_Volume-of-EDTA2-plasma-held-by-UKB_0_0', group='continuous', channel_map={'30344_Volume-of-EDTA2-plasma-held-by-UKB_0_0':0, 'not-missing':1}, normalization = {'mean':3175.5919609723555, 'std':516.8237576780759 }, annotation_units=2)
TMAPS['30354_0'] = TensorMap('30354_Volume-of-EDTA2-buffy-held-by-UKB_0_0', group='continuous', channel_map={'30354_Volume-of-EDTA2-buffy-held-by-UKB_0_0':0, 'not-missing':1}, normalization = {'mean':830.8601954989771, 'std':115.8669292957913 }, annotation_units=2)
TMAPS['30364_0'] = TensorMap('30364_Volume-of-EDTA2-red-cells-held-by-UKB_0_0', group='continuous', channel_map={'30364_Volume-of-EDTA2-red-cells-held-by-UKB_0_0':0, 'not-missing':1}, normalization = {'mean':835.0689845037228, 'std':106.88499156978263 }, annotation_units=2)
TMAPS['30374_0'] = TensorMap('30374_Volume-of-LiHep-plasma-held-by-UKB_0_0', group='continuous', channel_map={'30374_Volume-of-LiHep-plasma-held-by-UKB_0_0':0, 'not-missing':1}, normalization = {'mean':2621.2320971538934, 'std':582.5914294095846 }, annotation_units=2)
TMAPS['30384_0'] = TensorMap('30384_Volume-of-serum-held-by-UKB_0_0', group='continuous', channel_map={'30384_Volume-of-serum-held-by-UKB_0_0':0, 'not-missing':1}, normalization = {'mean':2262.6903809741616, 'std':585.776006379496 }, annotation_units=2)
TMAPS['30404_0'] = TensorMap('30404_Volume-of-ACD-held-by-UKB_0_0', group='continuous', channel_map={'30404_Volume-of-ACD-held-by-UKB_0_0':0, 'not-missing':1}, normalization = {'mean':1394.977048997058, 'std':78.49684339990159 }, annotation_units=2)
TMAPS['30414_0'] = TensorMap('30414_Volume-of-RNA-held-by-UKB_0_0', group='continuous', channel_map={'30414_Volume-of-RNA-held-by-UKB_0_0':0, 'not-missing':1}, normalization = {'mean':2606.67157712305, 'std':2548.684913468435 }, annotation_units=2)
TMAPS['40009_0'] = TensorMap('40009_Reported-occurrences-of-cancer_0_0', group='continuous', channel_map={'40009_Reported-occurrences-of-cancer_0_0':0, 'not-missing':1}, normalization = {'mean':2.9562907876764304, 'std':1.4500369426852708 }, annotation_units=2)
TMAPS['34_0'] = TensorMap('34_Year-of-birth_0_0', group='continuous', channel_map={'34_Year-of-birth_0_0':0, 'not-missing':1}, normalization = {'mean':1951.542591163035, 'std':8.11604630198076 }, annotation_units=2)


#  TensorMaps for MPG disease phenotypes
TMAPS['allergic_rhinitis'] = TensorMap('allergic_rhinitis', group = 'categorical_index', channel_map = {'no_allergic_rhinitis':0, 'allergic_rhinitis':1}, loss = weighted_crossentropy([1.0, 8], 'allergic_rhinitis'))
TMAPS['alzheimers_or_dementia'] = TensorMap('alzheimers_or_dementia', group = 'categorical_index', channel_map = {'no_alzheimers_or_dementia':0, 'alzheimers_or_dementia':1}, loss = weighted_crossentropy([1.0, 644], 'alzheimers_or_dementia'))
TMAPS['amyotrophic_lateral_sclerosis'] = TensorMap('amyotrophic_lateral_sclerosis', group = 'categorical_index', channel_map = {'no_amyotrophic_lateral_sclerosis':0, 'amyotrophic_lateral_sclerosis':1}, loss = weighted_crossentropy([1.0, 888], 'amyotrophic_lateral_sclerosis'))
TMAPS['anxiety'] = TensorMap('anxiety', group = 'categorical_index', channel_map = {'no_anxiety':0, 'anxiety':1}, loss = weighted_crossentropy([1.0, 29], 'anxiety'))
TMAPS['aortic_regurgitation'] = TensorMap('aortic_regurgitation', group = 'categorical_index', channel_map = {'no_aortic_regurgitation':0, 'aortic_regurgitation':1}, loss = weighted_crossentropy([1.0, 194], 'aortic_regurgitation'))
TMAPS['aortic_stenosis'] = TensorMap('aortic_stenosis', group = 'categorical_index', channel_map = {'no_aortic_stenosis':0, 'aortic_stenosis':1}, loss = weighted_crossentropy([1.0, 108], 'aortic_stenosis'))
TMAPS['aortic_valve_disease'] = TensorMap('aortic_valve_disease', group = 'categorical_index', channel_map = {'no_aortic_valve_disease':0, 'aortic_valve_disease':1}, loss = weighted_crossentropy([1.0, 59], 'aortic_valve_disease'))
TMAPS['asthma'] = TensorMap('asthma', group = 'categorical_index', channel_map = {'no_asthma':0, 'asthma':1}, loss = weighted_crossentropy([1.0, 3], 'asthma'))
TMAPS['atrial_fibrillation_or_flutter'] = TensorMap('atrial_fibrillation_or_flutter', group = 'categorical_index', channel_map = {'no_atrial_fibrillation_or_flutter':0, 'atrial_fibrillation_or_flutter':1}, loss = weighted_crossentropy([1.0, 13], 'atrial_fibrillation_or_flutter'))
TMAPS['atrial_septal_defect_patent_foramen_ovale'] = TensorMap('atrial_septal_defect_patent_foramen_ovale', group = 'categorical_index', channel_map = {'no_atrial_septal_defect_patent_foramen_ovale':0, 'atrial_septal_defect_patent_foramen_ovale':1}, loss = weighted_crossentropy([1.0, 419], 'atrial_septal_defect_patent_foramen_ovale'))
TMAPS['atrial_septal_defect_patent_foramen_ovale_v2'] = TensorMap('atrial_septal_defect_patent_foramen_ovale_v2', group = 'categorical_index', channel_map = {'no_atrial_septal_defect_patent_foramen_ovale_v2':0, 'atrial_septal_defect_patent_foramen_ovale_v2':1}, loss = weighted_crossentropy([1.0, 418], 'atrial_septal_defect_patent_foramen_ovale_v2'))
TMAPS['back_pain'] = TensorMap('back_pain', group = 'categorical_index', channel_map = {'no_back_pain':0, 'back_pain':1}, loss = weighted_crossentropy([1.0, 11], 'back_pain'))
TMAPS['bariatric_surgery'] = TensorMap('bariatric_surgery', group = 'categorical_index', channel_map = {'no_bariatric_surgery':0, 'bariatric_surgery':1}, loss = weighted_crossentropy([1.0, 317], 'bariatric_surgery'))
TMAPS['bariatric_surgery_v2'] = TensorMap('bariatric_surgery_v2', group = 'categorical_index', channel_map = {'no_bariatric_surgery_v2':0, 'bariatric_surgery_v2':1}, loss = weighted_crossentropy([1.0, 489], 'bariatric_surgery_v2'))
TMAPS['bipolar_disorder'] = TensorMap('bipolar_disorder', group = 'categorical_index', channel_map = {'no_bipolar_disorder':0, 'bipolar_disorder':1}, loss = weighted_crossentropy([1.0, 126], 'bipolar_disorder'))
TMAPS['bladder_cancer'] = TensorMap('bladder_cancer', group = 'categorical_index', channel_map = {'no_bladder_cancer':0, 'bladder_cancer':1}, loss = weighted_crossentropy([1.0, 90], 'bladder_cancer'))
TMAPS['bradyarrhythmia_av_block_or_distal_conduction_disease'] = TensorMap('bradyarrhythmia_av_block_or_distal_conduction_disease', group = 'categorical_index', channel_map = {'no_bradyarrhythmia_av_block_or_distal_conduction_disease':0, 'bradyarrhythmia_av_block_or_distal_conduction_disease':1}, loss = weighted_crossentropy([1.0, 40], 'bradyarrhythmia_av_block_or_distal_conduction_disease'))
TMAPS['bradyarrhythmia_av_block_or_distal_conduction_disease_hard'] = TensorMap('bradyarrhythmia_av_block_or_distal_conduction_disease_hard', group = 'categorical_index', channel_map = {'no_bradyarrhythmia_av_block_or_distal_conduction_disease_hard':0, 'bradyarrhythmia_av_block_or_distal_conduction_disease_hard':1}, loss = weighted_crossentropy([1.0, 69], 'bradyarrhythmia_av_block_or_distal_conduction_disease_hard'))
TMAPS['bradyarrhythmia_av_block_or_distal_conduction_disease_hard_v2'] = TensorMap('bradyarrhythmia_av_block_or_distal_conduction_disease_hard_v2', group = 'categorical_index', channel_map = {'no_bradyarrhythmia_av_block_or_distal_conduction_disease_hard_v2':0, 'bradyarrhythmia_av_block_or_distal_conduction_disease_hard_v2':1}, loss = weighted_crossentropy([1.0, 71], 'bradyarrhythmia_av_block_or_distal_conduction_disease_hard_v2'))
TMAPS['bradyarrhythmia_av_block_or_distal_conduction_disease_v2'] = TensorMap('bradyarrhythmia_av_block_or_distal_conduction_disease_v2', group = 'categorical_index', channel_map = {'no_bradyarrhythmia_av_block_or_distal_conduction_disease_v2':0, 'bradyarrhythmia_av_block_or_distal_conduction_disease_v2':1}, loss = weighted_crossentropy([1.0, 60], 'bradyarrhythmia_av_block_or_distal_conduction_disease_v2'))
TMAPS['bradyarrhythmia_av_block_or_distal_conduction_disease_v2_restricted'] = TensorMap('bradyarrhythmia_av_block_or_distal_conduction_disease_v2_restricted', group = 'categorical_index', channel_map = {'no_bradyarrhythmia_av_block_or_distal_conduction_disease_v2_restricted':0, 'bradyarrhythmia_av_block_or_distal_conduction_disease_v2_restricted':1}, loss = weighted_crossentropy([1.0, 254], 'bradyarrhythmia_av_block_or_distal_conduction_disease_v2_restricted'))
TMAPS['bradyarrhythmia_general_inclusive_definition'] = TensorMap('bradyarrhythmia_general_inclusive_definition', group = 'categorical_index', channel_map = {'no_bradyarrhythmia_general_inclusive_definition':0, 'bradyarrhythmia_general_inclusive_definition':1}, loss = weighted_crossentropy([1.0, 26], 'bradyarrhythmia_general_inclusive_definition'))
TMAPS['bradyarrhythmia_only'] = TensorMap('bradyarrhythmia_only', group = 'categorical_index', channel_map = {'no_bradyarrhythmia_only':0, 'bradyarrhythmia_only':1}, loss = weighted_crossentropy([1.0, 48], 'bradyarrhythmia_only'))
TMAPS['bradyarrhythmia_pacemaker'] = TensorMap('bradyarrhythmia_pacemaker', group = 'categorical_index', channel_map = {'no_bradyarrhythmia_pacemaker':0, 'bradyarrhythmia_pacemaker':1}, loss = weighted_crossentropy([1.0, 52], 'bradyarrhythmia_pacemaker'))
TMAPS['bradyarrhythmia_pacemaker_v2'] = TensorMap('bradyarrhythmia_pacemaker_v2', group = 'categorical_index', channel_map = {'no_bradyarrhythmia_pacemaker_v2':0, 'bradyarrhythmia_pacemaker_v2':1}, loss = weighted_crossentropy([1.0, 51], 'bradyarrhythmia_pacemaker_v2'))
TMAPS['bradyarrhythmia_sinus_node_dysfunction'] = TensorMap('bradyarrhythmia_sinus_node_dysfunction', group = 'categorical_index', channel_map = {'no_bradyarrhythmia_sinus_node_dysfunction':0, 'bradyarrhythmia_sinus_node_dysfunction':1}, loss = weighted_crossentropy([1.0, 492], 'bradyarrhythmia_sinus_node_dysfunction'))
TMAPS['bradyarrhythmia_sinus_node_dysfunction_hard'] = TensorMap('bradyarrhythmia_sinus_node_dysfunction_hard', group = 'categorical_index', channel_map = {'no_bradyarrhythmia_sinus_node_dysfunction_hard':0, 'bradyarrhythmia_sinus_node_dysfunction_hard':1}, loss = weighted_crossentropy([1.0, 701], 'bradyarrhythmia_sinus_node_dysfunction_hard'))
TMAPS['bradyarrhythmia_sinus_node_dysfunction_hard_v2'] = TensorMap('bradyarrhythmia_sinus_node_dysfunction_hard_v2', group = 'categorical_index', channel_map = {'no_bradyarrhythmia_sinus_node_dysfunction_hard_v2':0, 'bradyarrhythmia_sinus_node_dysfunction_hard_v2':1}, loss = weighted_crossentropy([1.0, 724], 'bradyarrhythmia_sinus_node_dysfunction_hard_v2'))
TMAPS['bradyarrhythmia_sinus_node_dysfunction_v2'] = TensorMap('bradyarrhythmia_sinus_node_dysfunction_v2', group = 'categorical_index', channel_map = {'no_bradyarrhythmia_sinus_node_dysfunction_v2':0, 'bradyarrhythmia_sinus_node_dysfunction_v2':1}, loss = weighted_crossentropy([1.0, 622], 'bradyarrhythmia_sinus_node_dysfunction_v2'))
TMAPS['bradyarrhythmia_sinus_node_dysfunction_v2_restricted'] = TensorMap('bradyarrhythmia_sinus_node_dysfunction_v2_restricted', group = 'categorical_index', channel_map = {'no_bradyarrhythmia_sinus_node_dysfunction_v2_restricted':0, 'bradyarrhythmia_sinus_node_dysfunction_v2_restricted':1}, loss = weighted_crossentropy([1.0, 826], 'bradyarrhythmia_sinus_node_dysfunction_v2_restricted'))
TMAPS['bradyarrrhythmia_av_block_or_distal_conduction_disease_clinical'] = TensorMap('bradyarrrhythmia_av_block_or_distal_conduction_disease_clinical', group = 'categorical_index', channel_map = {'no_bradyarrrhythmia_av_block_or_distal_conduction_disease_clinical':0, 'bradyarrrhythmia_av_block_or_distal_conduction_disease_clinical':1}, loss = weighted_crossentropy([1.0, 48], 'bradyarrrhythmia_av_block_or_distal_conduction_disease_clinical'))
TMAPS['bradyarrrhythmia_general_inclusive_definition_clinical'] = TensorMap('bradyarrrhythmia_general_inclusive_definition_clinical', group = 'categorical_index', channel_map = {'no_bradyarrrhythmia_general_inclusive_definition_clinical':0, 'bradyarrrhythmia_general_inclusive_definition_clinical':1}, loss = weighted_crossentropy([1.0, 47], 'bradyarrrhythmia_general_inclusive_definition_clinical'))
TMAPS['breast_cancer'] = TensorMap('breast_cancer', group = 'categorical_index', channel_map = {'no_breast_cancer':0, 'breast_cancer':1}, loss = weighted_crossentropy([1.0, 15], 'breast_cancer'))
TMAPS['cardiac_surgery'] = TensorMap('cardiac_surgery', group = 'categorical_index', channel_map = {'no_cardiac_surgery':0, 'cardiac_surgery':1}, loss = weighted_crossentropy([1.0, 33], 'cardiac_surgery'))
TMAPS['cataract'] = TensorMap('cataract', group = 'categorical_index', channel_map = {'no_cataract':0, 'cataract':1}, loss = weighted_crossentropy([1.0, 8], 'cataract'))
TMAPS['cervical_cancer'] = TensorMap('cervical_cancer', group = 'categorical_index', channel_map = {'no_cervical_cancer':0, 'cervical_cancer':1}, loss = weighted_crossentropy([1.0, 116], 'cervical_cancer'))
TMAPS['cholelithiasis_or_gallstones'] = TensorMap('cholelithiasis_or_gallstones', group = 'categorical_index', channel_map = {'no_cholelithiasis_or_gallstones':0, 'cholelithiasis_or_gallstones':1}, loss = weighted_crossentropy([1.0, 11], 'cholelithiasis_or_gallstones'))
TMAPS['chronic_kidney_disease'] = TensorMap('chronic_kidney_disease', group = 'categorical_index', channel_map = {'no_chronic_kidney_disease':0, 'chronic_kidney_disease':1}, loss = weighted_crossentropy([1.0, 36], 'chronic_kidney_disease'))
TMAPS['chronic_obstructive_pulmonary_disease'] = TensorMap('chronic_obstructive_pulmonary_disease', group = 'categorical_index', channel_map = {'no_chronic_obstructive_pulmonary_disease':0, 'chronic_obstructive_pulmonary_disease':1}, loss = weighted_crossentropy([1.0, 14], 'chronic_obstructive_pulmonary_disease'))
TMAPS['colorectal_cancer'] = TensorMap('colorectal_cancer', group = 'categorical_index', channel_map = {'no_colorectal_cancer':0, 'colorectal_cancer':1}, loss = weighted_crossentropy([1.0, 50], 'colorectal_cancer'))
TMAPS['conduction_system_disease_only'] = TensorMap('conduction_system_disease_only', group = 'categorical_index', channel_map = {'no_conduction_system_disease_only':0, 'conduction_system_disease_only':1}, loss = weighted_crossentropy([1.0, 49], 'conduction_system_disease_only'))
TMAPS['congenital_heart_disease'] = TensorMap('congenital_heart_disease', group = 'categorical_index', channel_map = {'no_congenital_heart_disease':0, 'congenital_heart_disease':1}, loss = weighted_crossentropy([1.0, 222], 'congenital_heart_disease'))
TMAPS['congenital_heart_disease_ebstein_anomaly'] = TensorMap('congenital_heart_disease_ebstein_anomaly', group = 'categorical_index', channel_map = {'no_congenital_heart_disease_ebstein_anomaly':0, 'congenital_heart_disease_ebstein_anomaly':1}, loss = weighted_crossentropy([1.0, 19331], 'congenital_heart_disease_ebstein_anomaly'))
TMAPS['coronary_artery_disease'] = TensorMap('coronary_artery_disease', group = 'categorical_index', channel_map = {'no_coronary_artery_disease':0, 'coronary_artery_disease':1}, loss = weighted_crossentropy([1.0, 10], 'coronary_artery_disease'))
TMAPS['coronary_artery_disease_hard'] = TensorMap('coronary_artery_disease_hard', group = 'categorical_index', channel_map = {'no_coronary_artery_disease_hard':0, 'coronary_artery_disease_hard':1}, loss = weighted_crossentropy([1.0, 9], 'coronary_artery_disease_hard'))
TMAPS['coronary_artery_disease_intermediate'] = TensorMap('coronary_artery_disease_intermediate', group = 'categorical_index', channel_map = {'no_coronary_artery_disease_intermediate':0, 'coronary_artery_disease_intermediate':1}, loss = weighted_crossentropy([1.0, 7], 'coronary_artery_disease_intermediate'))
TMAPS['coronary_artery_disease_soft'] = TensorMap('coronary_artery_disease_soft', group = 'categorical_index', channel_map = {'no_coronary_artery_disease_soft':0, 'coronary_artery_disease_soft':1}, loss = weighted_crossentropy([1.0, 5], 'coronary_artery_disease_soft'))
TMAPS['crohns_disease'] = TensorMap('crohns_disease', group = 'categorical_index', channel_map = {'no_crohns_disease':0, 'crohns_disease':1}, loss = weighted_crossentropy([1.0, 117], 'crohns_disease'))
TMAPS['death'] = TensorMap('death', group = 'categorical_index', channel_map = {'no_death':0, 'death':1}, loss = weighted_crossentropy([1.0, 17], 'death'))
TMAPS['depression'] = TensorMap('depression', group = 'categorical_index', channel_map = {'no_depression':0, 'depression':1}, loss = weighted_crossentropy([1.0, 6], 'depression'))
TMAPS['dermatitis'] = TensorMap('dermatitis', group = 'categorical_index', channel_map = {'no_dermatitis':0, 'dermatitis':1}, loss = weighted_crossentropy([1.0, 14], 'dermatitis'))
TMAPS['diabetes_all'] = TensorMap('diabetes_all', group = 'categorical_index', channel_map = {'no_diabetes_all':0, 'diabetes_all':1}, loss = weighted_crossentropy([1.0, 7], 'diabetes_all'))
TMAPS['diabetes_type_1'] = TensorMap('diabetes_type_1', group = 'categorical_index', channel_map = {'no_diabetes_type_1':0, 'diabetes_type_1':1}, loss = weighted_crossentropy([1.0, 66], 'diabetes_type_1'))
TMAPS['diabetes_type_2'] = TensorMap('diabetes_type_2', group = 'categorical_index', channel_map = {'no_diabetes_type_2':0, 'diabetes_type_2':1}, loss = weighted_crossentropy([1.0, 9], 'diabetes_type_2'))
TMAPS['diverticular_disease'] = TensorMap('diverticular_disease', group = 'categorical_index', channel_map = {'no_diverticular_disease':0, 'diverticular_disease':1}, loss = weighted_crossentropy([1.0, 7], 'diverticular_disease'))
TMAPS['enlarged_prostate'] = TensorMap('enlarged_prostate', group = 'categorical_index', channel_map = {'no_enlarged_prostate':0, 'enlarged_prostate':1}, loss = weighted_crossentropy([1.0, 14], 'enlarged_prostate'))
TMAPS['epilepsy'] = TensorMap('epilepsy', group = 'categorical_index', channel_map = {'no_epilepsy':0, 'epilepsy':1}, loss = weighted_crossentropy([1.0, 41], 'epilepsy'))
TMAPS['gastroesophageal_reflux_disease'] = TensorMap('gastroesophageal_reflux_disease', group = 'categorical_index', channel_map = {'no_gastroesophageal_reflux_disease':0, 'gastroesophageal_reflux_disease':1}, loss = weighted_crossentropy([1.0, 5], 'gastroesophageal_reflux_disease'))
TMAPS['glaucoma'] = TensorMap('glaucoma', group = 'categorical_index', channel_map = {'no_glaucoma':0, 'glaucoma':1}, loss = weighted_crossentropy([1.0, 28], 'glaucoma'))
TMAPS['gout'] = TensorMap('gout', group = 'categorical_index', channel_map = {'no_gout':0, 'gout':1}, loss = weighted_crossentropy([1.0, 27], 'gout'))
TMAPS['heart_failure'] = TensorMap('heart_failure', group = 'categorical_index', channel_map = {'no_heart_failure':0, 'heart_failure':1}, loss = weighted_crossentropy([1.0, 32], 'heart_failure'))
TMAPS['heart_failure_v2'] = TensorMap('heart_failure_v2', group = 'categorical_index', channel_map = {'no_heart_failure_v2':0, 'heart_failure_v2':1}, loss = weighted_crossentropy([1.0, 32], 'heart_failure_v2'))
TMAPS['hypercholesterolemia'] = TensorMap('hypercholesterolemia', group = 'categorical_index', channel_map = {'no_hypercholesterolemia':0, 'hypercholesterolemia':1}, loss = weighted_crossentropy([1.0, 2], 'hypercholesterolemia'))
TMAPS['hypertension'] = TensorMap('hypertension', group = 'categorical_index', channel_map = {'no_hypertension':0, 'hypertension':1}, loss = weighted_crossentropy([1.0, 1], 'hypertension'))
TMAPS['hyperthyroidism'] = TensorMap('hyperthyroidism', group = 'categorical_index', channel_map = {'no_hyperthyroidism':0, 'hyperthyroidism':1}, loss = weighted_crossentropy([1.0, 44], 'hyperthyroidism'))
TMAPS['hypertrophic_cardiomyopathy'] = TensorMap('hypertrophic_cardiomyopathy', group = 'categorical_index', channel_map = {'no_hypertrophic_cardiomyopathy':0, 'hypertrophic_cardiomyopathy':1}, loss = weighted_crossentropy([1.0, 684], 'hypertrophic_cardiomyopathy'))
TMAPS['hypothyroidism'] = TensorMap('hypothyroidism', group = 'categorical_index', channel_map = {'no_hypothyroidism':0, 'hypothyroidism':1}, loss = weighted_crossentropy([1.0, 8], 'hypothyroidism'))
TMAPS['implantable_cardioverter_defibrillator'] = TensorMap('implantable_cardioverter_defibrillator', group = 'categorical_index', channel_map = {'no_implantable_cardioverter_defibrillator':0, 'implantable_cardioverter_defibrillator':1}, loss = weighted_crossentropy([1.0, 327], 'implantable_cardioverter_defibrillator'))
TMAPS['inflammatory_bowel_disease'] = TensorMap('inflammatory_bowel_disease', group = 'categorical_index', channel_map = {'no_inflammatory_bowel_disease':0, 'inflammatory_bowel_disease':1}, loss = weighted_crossentropy([1.0, 37], 'inflammatory_bowel_disease'))
TMAPS['intervertebral_disc_displacement'] = TensorMap('intervertebral_disc_displacement', group = 'categorical_index', channel_map = {'no_intervertebral_disc_displacement':0, 'intervertebral_disc_displacement':1}, loss = weighted_crossentropy([1.0, 21], 'intervertebral_disc_displacement'))
TMAPS['intracerebral_hemorrhage'] = TensorMap('intracerebral_hemorrhage', group = 'categorical_index', channel_map = {'no_intracerebral_hemorrhage':0, 'intracerebral_hemorrhage':1}, loss = weighted_crossentropy([1.0, 239], 'intracerebral_hemorrhage'))
TMAPS['iron_deficiency_anemia'] = TensorMap('iron_deficiency_anemia', group = 'categorical_index', channel_map = {'no_iron_deficiency_anemia':0, 'iron_deficiency_anemia':1}, loss = weighted_crossentropy([1.0, 20], 'iron_deficiency_anemia'))
TMAPS['irritable_bowel_syndrome'] = TensorMap('irritable_bowel_syndrome', group = 'categorical_index', channel_map = {'no_irritable_bowel_syndrome':0, 'irritable_bowel_syndrome':1}, loss = weighted_crossentropy([1.0, 14], 'irritable_bowel_syndrome'))
TMAPS['ischemic_stroke'] = TensorMap('ischemic_stroke', group = 'categorical_index', channel_map = {'no_ischemic_stroke':0, 'ischemic_stroke':1}, loss = weighted_crossentropy([1.0, 51], 'ischemic_stroke'))
TMAPS['lung_cancer'] = TensorMap('lung_cancer', group = 'categorical_index', channel_map = {'no_lung_cancer':0, 'lung_cancer':1}, loss = weighted_crossentropy([1.0, 86], 'lung_cancer'))
TMAPS['lupus_erythematosus'] = TensorMap('lupus_erythematosus', group = 'categorical_index', channel_map = {'no_lupus_erythematosus':0, 'lupus_erythematosus':1}, loss = weighted_crossentropy([1.0, 277], 'lupus_erythematosus'))
TMAPS['migraine'] = TensorMap('migraine', group = 'categorical_index', channel_map = {'no_migraine':0, 'migraine':1}, loss = weighted_crossentropy([1.0, 14], 'migraine'))
TMAPS['mitral_regurgitation'] = TensorMap('mitral_regurgitation', group = 'categorical_index', channel_map = {'no_mitral_regurgitation':0, 'mitral_regurgitation':1}, loss = weighted_crossentropy([1.0, 90], 'mitral_regurgitation'))
TMAPS['mitral_stenosis'] = TensorMap('mitral_stenosis', group = 'categorical_index', channel_map = {'no_mitral_stenosis':0, 'mitral_stenosis':1}, loss = weighted_crossentropy([1.0, 1231], 'mitral_stenosis'))
TMAPS['mitral_valve_disease'] = TensorMap('mitral_valve_disease', group = 'categorical_index', channel_map = {'no_mitral_valve_disease':0, 'mitral_valve_disease':1}, loss = weighted_crossentropy([1.0, 52], 'mitral_valve_disease'))
TMAPS['mitral_valve_prolapse'] = TensorMap('mitral_valve_prolapse', group = 'categorical_index', channel_map = {'no_mitral_valve_prolapse':0, 'mitral_valve_prolapse':1}, loss = weighted_crossentropy([1.0, 358], 'mitral_valve_prolapse'))
TMAPS['multiple_sclerosis'] = TensorMap('multiple_sclerosis', group = 'categorical_index', channel_map = {'no_multiple_sclerosis':0, 'multiple_sclerosis':1}, loss = weighted_crossentropy([1.0, 117], 'multiple_sclerosis'))
TMAPS['myocardial_infarction'] = TensorMap('myocardial_infarction', group = 'categorical_index', channel_map = {'no_myocardial_infarction':0, 'myocardial_infarction':1}, loss = weighted_crossentropy([1.0, 13], 'myocardial_infarction'))
TMAPS['osteoarthritis'] = TensorMap('osteoarthritis', group = 'categorical_index', channel_map = {'no_osteoarthritis':0, 'osteoarthritis':1}, loss = weighted_crossentropy([1.0, 3], 'osteoarthritis'))
TMAPS['osteoporosis'] = TensorMap('osteoporosis', group = 'categorical_index', channel_map = {'no_osteoporosis':0, 'osteoporosis':1}, loss = weighted_crossentropy([1.0, 18], 'osteoporosis'))
TMAPS['pancreatitis'] = TensorMap('pancreatitis', group = 'categorical_index', channel_map = {'no_pancreatitis':0, 'pancreatitis':1}, loss = weighted_crossentropy([1.0, 79], 'pancreatitis'))
TMAPS['parkinsons_disease'] = TensorMap('parkinsons_disease', group = 'categorical_index', channel_map = {'no_parkinsons_disease':0, 'parkinsons_disease':1}, loss = weighted_crossentropy([1.0, 157], 'parkinsons_disease'))
TMAPS['peripheral_vascular_disease'] = TensorMap('peripheral_vascular_disease', group = 'categorical_index', channel_map = {'no_peripheral_vascular_disease':0, 'peripheral_vascular_disease':1}, loss = weighted_crossentropy([1.0, 42], 'peripheral_vascular_disease'))
TMAPS['pneumonia'] = TensorMap('pneumonia', group = 'categorical_index', channel_map = {'no_pneumonia':0, 'pneumonia':1}, loss = weighted_crossentropy([1.0, 13], 'pneumonia'))
TMAPS['posttraumatic_stress_disorder'] = TensorMap('posttraumatic_stress_disorder', group = 'categorical_index', channel_map = {'no_posttraumatic_stress_disorder':0, 'posttraumatic_stress_disorder':1}, loss = weighted_crossentropy([1.0, 513], 'posttraumatic_stress_disorder'))
TMAPS['prostate_cancer'] = TensorMap('prostate_cancer', group = 'categorical_index', channel_map = {'no_prostate_cancer':0, 'prostate_cancer':1}, loss = weighted_crossentropy([1.0, 32], 'prostate_cancer'))
TMAPS['psoriasis'] = TensorMap('psoriasis', group = 'categorical_index', channel_map = {'no_psoriasis':0, 'psoriasis':1}, loss = weighted_crossentropy([1.0, 34], 'psoriasis'))
TMAPS['pulmonary_hypertension'] = TensorMap('pulmonary_hypertension', group = 'categorical_index', channel_map = {'no_pulmonary_hypertension':0, 'pulmonary_hypertension':1}, loss = weighted_crossentropy([1.0, 280], 'pulmonary_hypertension'))
TMAPS['pulmonary_regurgitation'] = TensorMap('pulmonary_regurgitation', group = 'categorical_index', channel_map = {'no_pulmonary_regurgitation':0, 'pulmonary_regurgitation':1}, loss = weighted_crossentropy([1.0, 2305], 'pulmonary_regurgitation'))
TMAPS['pulmonary_stenosis'] = TensorMap('pulmonary_stenosis', group = 'categorical_index', channel_map = {'no_pulmonary_stenosis':0, 'pulmonary_stenosis':1}, loss = weighted_crossentropy([1.0, 14783], 'pulmonary_stenosis'))
TMAPS['pulmonary_valve_disease'] = TensorMap('pulmonary_valve_disease', group = 'categorical_index', channel_map = {'no_pulmonary_valve_disease':0, 'pulmonary_valve_disease':1}, loss = weighted_crossentropy([1.0, 1782], 'pulmonary_valve_disease'))
TMAPS['rheumatoid_arthritis'] = TensorMap('rheumatoid_arthritis', group = 'categorical_index', channel_map = {'no_rheumatoid_arthritis':0, 'rheumatoid_arthritis':1}, loss = weighted_crossentropy([1.0, 29], 'rheumatoid_arthritis'))
TMAPS['sarcoidosis'] = TensorMap('sarcoidosis', group = 'categorical_index', channel_map = {'no_sarcoidosis':0, 'sarcoidosis':1}, loss = weighted_crossentropy([1.0, 184], 'sarcoidosis'))
TMAPS['schizophrenia'] = TensorMap('schizophrenia', group = 'categorical_index', channel_map = {'no_schizophrenia':0, 'schizophrenia':1}, loss = weighted_crossentropy([1.0, 240], 'schizophrenia'))
TMAPS['sciatica'] = TensorMap('sciatica', group = 'categorical_index', channel_map = {'no_sciatica':0, 'sciatica':1}, loss = weighted_crossentropy([1.0, 32], 'sciatica'))
TMAPS['skin_cancer'] = TensorMap('skin_cancer', group = 'categorical_index', channel_map = {'no_skin_cancer':0, 'skin_cancer':1}, loss = weighted_crossentropy([1.0, 11], 'skin_cancer'))
TMAPS['sleep_apnea'] = TensorMap('sleep_apnea', group = 'categorical_index', channel_map = {'no_sleep_apnea':0, 'sleep_apnea':1}, loss = weighted_crossentropy([1.0, 39], 'sleep_apnea'))
TMAPS['stroke'] = TensorMap('stroke', group = 'categorical_index', channel_map = {'no_stroke':0, 'stroke':1}, loss = weighted_crossentropy([1.0, 21], 'stroke'))
TMAPS['subarachnoid_hemorrhage'] = TensorMap('subarachnoid_hemorrhage', group = 'categorical_index', channel_map = {'no_subarachnoid_hemorrhage':0, 'subarachnoid_hemorrhage':1}, loss = weighted_crossentropy([1.0, 192], 'subarachnoid_hemorrhage'))
TMAPS['supraventricular_arrhythmia_general_inclusive_definition'] = TensorMap('supraventricular_arrhythmia_general_inclusive_definition', group = 'categorical_index', channel_map = {'no_supraventricular_arrhythmia_general_inclusive_definition':0, 'supraventricular_arrhythmia_general_inclusive_definition':1}, loss = weighted_crossentropy([1.0, 68], 'supraventricular_arrhythmia_general_inclusive_definition'))
TMAPS['supraventricular_arrhythmia_general_inclusive_definition_clinical'] = TensorMap('supraventricular_arrhythmia_general_inclusive_definition_clinical', group = 'categorical_index', channel_map = {'no_supraventricular_arrhythmia_general_inclusive_definition_clinical':0, 'supraventricular_arrhythmia_general_inclusive_definition_clinical':1}, loss = weighted_crossentropy([1.0, 66], 'supraventricular_arrhythmia_general_inclusive_definition_clinical'))
TMAPS['supraventricular_arrhythmia_premature_atrial_contractions'] = TensorMap('supraventricular_arrhythmia_premature_atrial_contractions', group = 'categorical_index', channel_map = {'no_supraventricular_arrhythmia_premature_atrial_contractions':0, 'supraventricular_arrhythmia_premature_atrial_contractions':1}, loss = weighted_crossentropy([1.0, 1757], 'supraventricular_arrhythmia_premature_atrial_contractions'))
TMAPS['supraventricular_arrhythmia_svt'] = TensorMap('supraventricular_arrhythmia_svt', group = 'categorical_index', channel_map = {'no_supraventricular_arrhythmia_svt':0, 'supraventricular_arrhythmia_svt':1}, loss = weighted_crossentropy([1.0, 69], 'supraventricular_arrhythmia_svt'))
TMAPS['supraventricular_arrhythmia_wpw'] = TensorMap('supraventricular_arrhythmia_wpw', group = 'categorical_index', channel_map = {'no_supraventricular_arrhythmia_wpw':0, 'supraventricular_arrhythmia_wpw':1}, loss = weighted_crossentropy([1.0, 615], 'supraventricular_arrhythmia_wpw'))
TMAPS['supraventricular_arrhythmia_wpw_v2'] = TensorMap('supraventricular_arrhythmia_wpw_v2', group = 'categorical_index', channel_map = {'no_supraventricular_arrhythmia_wpw_v2':0, 'supraventricular_arrhythmia_wpw_v2':1}, loss = weighted_crossentropy([1.0, 623], 'supraventricular_arrhythmia_wpw_v2'))
TMAPS['tricuspid_regurgitation'] = TensorMap('tricuspid_regurgitation', group = 'categorical_index', channel_map = {'no_tricuspid_regurgitation':0, 'tricuspid_regurgitation':1}, loss = weighted_crossentropy([1.0, 494], 'tricuspid_regurgitation'))
TMAPS['tricuspid_stenosis'] = TensorMap('tricuspid_stenosis', group = 'categorical_index', channel_map = {'no_tricuspid_stenosis':0, 'tricuspid_stenosis':1}, loss = weighted_crossentropy([1.0, 27923], 'tricuspid_stenosis'))
TMAPS['tricuspid_valve_disease'] = TensorMap('tricuspid_valve_disease', group = 'categorical_index', channel_map = {'no_tricuspid_valve_disease':0, 'tricuspid_valve_disease':1}, loss = weighted_crossentropy([1.0, 138], 'tricuspid_valve_disease'))
TMAPS['ulcerative_colitis'] = TensorMap('ulcerative_colitis', group = 'categorical_index', channel_map = {'no_ulcerative_colitis':0, 'ulcerative_colitis':1}, loss = weighted_crossentropy([1.0, 53], 'ulcerative_colitis'))
TMAPS['uterine_fibroids'] = TensorMap('uterine_fibroids', group = 'categorical_index', channel_map = {'no_uterine_fibroids':0, 'uterine_fibroids':1}, loss = weighted_crossentropy([1.0, 11], 'uterine_fibroids'))
TMAPS['valve_disease'] = TensorMap('valve_disease', group = 'categorical_index', channel_map = {'no_valve_disease':0, 'valve_disease':1}, loss = weighted_crossentropy([1.0, 31], 'valve_disease'))
TMAPS['valvular_disease_unspecified'] = TensorMap('valvular_disease_unspecified', group = 'categorical_index', channel_map = {'no_valvular_disease_unspecified':0, 'valvular_disease_unspecified':1}, loss = weighted_crossentropy([1.0, 65], 'valvular_disease_unspecified'))
TMAPS['venous_thromboembolism'] = TensorMap('venous_thromboembolism', group = 'categorical_index', channel_map = {'no_venous_thromboembolism':0, 'venous_thromboembolism':1}, loss = weighted_crossentropy([1.0, 14], 'venous_thromboembolism'))
TMAPS['ventricular_arrhythmia_general_inclusive_definition'] = TensorMap('ventricular_arrhythmia_general_inclusive_definition', group = 'categorical_index', channel_map = {'no_ventricular_arrhythmia_general_inclusive_definition':0, 'ventricular_arrhythmia_general_inclusive_definition':1}, loss = weighted_crossentropy([1.0, 80], 'ventricular_arrhythmia_general_inclusive_definition'))
TMAPS['ventricular_arrhythmia_general_inclusive_definition_clinical'] = TensorMap('ventricular_arrhythmia_general_inclusive_definition_clinical', group = 'categorical_index', channel_map = {'no_ventricular_arrhythmia_general_inclusive_definition_clinical':0, 'ventricular_arrhythmia_general_inclusive_definition_clinical':1}, loss = weighted_crossentropy([1.0, 93], 'ventricular_arrhythmia_general_inclusive_definition_clinical'))
TMAPS['ventricular_arrhythmia_sudden_cardiac_death'] = TensorMap('ventricular_arrhythmia_sudden_cardiac_death', group = 'categorical_index', channel_map = {'no_ventricular_arrhythmia_sudden_cardiac_death':0, 'ventricular_arrhythmia_sudden_cardiac_death':1}, loss = weighted_crossentropy([1.0, 168], 'ventricular_arrhythmia_sudden_cardiac_death'))
TMAPS['ventricular_arrhythmia_ventricular_premature_depolarizations'] = TensorMap('ventricular_arrhythmia_ventricular_premature_depolarizations', group = 'categorical_index', channel_map = {'no_ventricular_arrhythmia_ventricular_premature_depolarizations':0, 'ventricular_arrhythmia_ventricular_premature_depolarizations':1}, loss = weighted_crossentropy([1.0, 490], 'ventricular_arrhythmia_ventricular_premature_depolarizations'))
TMAPS['ventricular_arrhythmia_vt'] = TensorMap('ventricular_arrhythmia_vt', group = 'categorical_index', channel_map = {'no_ventricular_arrhythmia_vt':0, 'ventricular_arrhythmia_vt':1}, loss = weighted_crossentropy([1.0, 170], 'ventricular_arrhythmia_vt'))


#  TensorMaps for date regression on MPG disease phenotypes
TMAPS['allergic_rhinitis_time']=TensorMap('allergic_rhinitis',group='diagnosis_time',channel_map={'allergic_rhinitis_time':0},loss='mse')
TMAPS['alzheimers_or_dementia_time']=TensorMap('alzheimers_or_dementia',group='diagnosis_time',channel_map={'alzheimers_or_dementia_time':0},loss='mse')
TMAPS['amyotrophic_lateral_sclerosis_time']=TensorMap('amyotrophic_lateral_sclerosis',group='diagnosis_time',channel_map={'amyotrophic_lateral_sclerosis_time':0},loss='mse')
TMAPS['anxiety_time']=TensorMap('anxiety',group='diagnosis_time',channel_map={'anxiety_time':0},loss='mse')
TMAPS['aortic_regurgitation_time']=TensorMap('aortic_regurgitation',group='diagnosis_time',channel_map={'aortic_regurgitation_time':0},loss='mse')
TMAPS['aortic_stenosis_time']=TensorMap('aortic_stenosis',group='diagnosis_time',channel_map={'aortic_stenosis_time':0},loss='mse')
TMAPS['aortic_valve_disease_time']=TensorMap('aortic_valve_disease',group='diagnosis_time',channel_map={'aortic_valve_disease_time':0},loss='mse')
TMAPS['asthma_time']=TensorMap('asthma',group='diagnosis_time',channel_map={'asthma_time':0},loss='mse')
TMAPS['atrial_fibrillation_or_flutter_time']=TensorMap('atrial_fibrillation_or_flutter',group='diagnosis_time',channel_map={'atrial_fibrillation_or_flutter_time':0},loss='mse')
TMAPS['atrial_septal_defect_patent_foramen_ovale_time']=TensorMap('atrial_septal_defect_patent_foramen_ovale',group='diagnosis_time',channel_map={'atrial_septal_defect_patent_foramen_ovale_time':0},loss='mse')
TMAPS['atrial_septal_defect_patent_foramen_ovale_v2_time']=TensorMap('atrial_septal_defect_patent_foramen_ovale_v2',group='diagnosis_time',channel_map={'atrial_septal_defect_patent_foramen_ovale_v2_time':0},loss='mse')
TMAPS['back_pain_time']=TensorMap('back_pain',group='diagnosis_time',channel_map={'back_pain_time':0},loss='mse')
TMAPS['bariatric_surgery_time']=TensorMap('bariatric_surgery',group='diagnosis_time',channel_map={'bariatric_surgery_time':0},loss='mse')
TMAPS['bariatric_surgery_v2_time']=TensorMap('bariatric_surgery_v2',group='diagnosis_time',channel_map={'bariatric_surgery_v2_time':0},loss='mse')
TMAPS['bipolar_disorder_time']=TensorMap('bipolar_disorder',group='diagnosis_time',channel_map={'bipolar_disorder_time':0},loss='mse')
TMAPS['bladder_cancer_time']=TensorMap('bladder_cancer',group='diagnosis_time',channel_map={'bladder_cancer_time':0},loss='mse')
TMAPS['bradyarrhythmia_av_block_or_distal_conduction_disease_time']=TensorMap('bradyarrhythmia_av_block_or_distal_conduction_disease',group='diagnosis_time',channel_map={'bradyarrhythmia_av_block_or_distal_conduction_disease_time':0},loss='mse')
TMAPS['bradyarrhythmia_av_block_or_distal_conduction_disease_hard_time']=TensorMap('bradyarrhythmia_av_block_or_distal_conduction_disease_hard',group='diagnosis_time',channel_map={'bradyarrhythmia_av_block_or_distal_conduction_disease_hard_time':0},loss='mse')
TMAPS['bradyarrhythmia_av_block_or_distal_conduction_disease_hard_v2_time']=TensorMap('bradyarrhythmia_av_block_or_distal_conduction_disease_hard_v2',group='diagnosis_time',channel_map={'bradyarrhythmia_av_block_or_distal_conduction_disease_hard_v2_time':0},loss='mse')
TMAPS['bradyarrhythmia_av_block_or_distal_conduction_disease_v2_time']=TensorMap('bradyarrhythmia_av_block_or_distal_conduction_disease_v2',group='diagnosis_time',channel_map={'bradyarrhythmia_av_block_or_distal_conduction_disease_v2_time':0},loss='mse')
TMAPS['bradyarrhythmia_av_block_or_distal_conduction_disease_v2_restricted_time']=TensorMap('bradyarrhythmia_av_block_or_distal_conduction_disease_v2_restricted',group='diagnosis_time',channel_map={'bradyarrhythmia_av_block_or_distal_conduction_disease_v2_restricted_time':0},loss='mse')
TMAPS['bradyarrhythmia_general_inclusive_definition_time']=TensorMap('bradyarrhythmia_general_inclusive_definition',group='diagnosis_time',channel_map={'bradyarrhythmia_general_inclusive_definition_time':0},loss='mse')
TMAPS['bradyarrhythmia_only_time']=TensorMap('bradyarrhythmia_only',group='diagnosis_time',channel_map={'bradyarrhythmia_only_time':0},loss='mse')
TMAPS['bradyarrhythmia_pacemaker_time']=TensorMap('bradyarrhythmia_pacemaker',group='diagnosis_time',channel_map={'bradyarrhythmia_pacemaker_time':0},loss='mse')
TMAPS['bradyarrhythmia_pacemaker_v2_time']=TensorMap('bradyarrhythmia_pacemaker_v2',group='diagnosis_time',channel_map={'bradyarrhythmia_pacemaker_v2_time':0},loss='mse')
TMAPS['bradyarrhythmia_sinus_node_dysfunction_time']=TensorMap('bradyarrhythmia_sinus_node_dysfunction',group='diagnosis_time',channel_map={'bradyarrhythmia_sinus_node_dysfunction_time':0},loss='mse')
TMAPS['bradyarrhythmia_sinus_node_dysfunction_hard_time']=TensorMap('bradyarrhythmia_sinus_node_dysfunction_hard',group='diagnosis_time',channel_map={'bradyarrhythmia_sinus_node_dysfunction_hard_time':0},loss='mse')
TMAPS['bradyarrhythmia_sinus_node_dysfunction_hard_v2_time']=TensorMap('bradyarrhythmia_sinus_node_dysfunction_hard_v2',group='diagnosis_time',channel_map={'bradyarrhythmia_sinus_node_dysfunction_hard_v2_time':0},loss='mse')
TMAPS['bradyarrhythmia_sinus_node_dysfunction_v2_time']=TensorMap('bradyarrhythmia_sinus_node_dysfunction_v2',group='diagnosis_time',channel_map={'bradyarrhythmia_sinus_node_dysfunction_v2_time':0},loss='mse')
TMAPS['bradyarrhythmia_sinus_node_dysfunction_v2_restricted_time']=TensorMap('bradyarrhythmia_sinus_node_dysfunction_v2_restricted',group='diagnosis_time',channel_map={'bradyarrhythmia_sinus_node_dysfunction_v2_restricted_time':0},loss='mse')
TMAPS['bradyarrrhythmia_av_block_or_distal_conduction_disease_clinical_time']=TensorMap('bradyarrrhythmia_av_block_or_distal_conduction_disease_clinical',group='diagnosis_time',channel_map={'bradyarrrhythmia_av_block_or_distal_conduction_disease_clinical_time':0},loss='mse')
TMAPS['bradyarrrhythmia_general_inclusive_definition_clinical_time']=TensorMap('bradyarrrhythmia_general_inclusive_definition_clinical',group='diagnosis_time',channel_map={'bradyarrrhythmia_general_inclusive_definition_clinical_time':0},loss='mse')
TMAPS['breast_cancer_time']=TensorMap('breast_cancer',group='diagnosis_time',channel_map={'breast_cancer_time':0},loss='mse')
TMAPS['cardiac_surgery_time']=TensorMap('cardiac_surgery',group='diagnosis_time',channel_map={'cardiac_surgery_time':0},loss='mse')
TMAPS['cataract_time']=TensorMap('cataract',group='diagnosis_time',channel_map={'cataract_time':0},loss='mse')
TMAPS['cervical_cancer_time']=TensorMap('cervical_cancer',group='diagnosis_time',channel_map={'cervical_cancer_time':0},loss='mse')
TMAPS['cholelithiasis_or_gallstones_time']=TensorMap('cholelithiasis_or_gallstones',group='diagnosis_time',channel_map={'cholelithiasis_or_gallstones_time':0},loss='mse')
TMAPS['chronic_kidney_disease_time']=TensorMap('chronic_kidney_disease',group='diagnosis_time',channel_map={'chronic_kidney_disease_time':0},loss='mse')
TMAPS['chronic_obstructive_pulmonary_disease_time']=TensorMap('chronic_obstructive_pulmonary_disease',group='diagnosis_time',channel_map={'chronic_obstructive_pulmonary_disease_time':0},loss='mse')
TMAPS['colorectal_cancer_time']=TensorMap('colorectal_cancer',group='diagnosis_time',channel_map={'colorectal_cancer_time':0},loss='mse')
TMAPS['conduction_system_disease_only_time']=TensorMap('conduction_system_disease_only',group='diagnosis_time',channel_map={'conduction_system_disease_only_time':0},loss='mse')
TMAPS['congenital_heart_disease_time']=TensorMap('congenital_heart_disease',group='diagnosis_time',channel_map={'congenital_heart_disease_time':0},loss='mse')
TMAPS['congenital_heart_disease_ebstein_anomaly_time']=TensorMap('congenital_heart_disease_ebstein_anomaly',group='diagnosis_time',channel_map={'congenital_heart_disease_ebstein_anomaly_time':0},loss='mse')
TMAPS['coronary_artery_disease_time']=TensorMap('coronary_artery_disease',group='diagnosis_time',channel_map={'coronary_artery_disease_time':0},loss='mse')
TMAPS['coronary_artery_disease_hard_time']=TensorMap('coronary_artery_disease_hard',group='diagnosis_time',channel_map={'coronary_artery_disease_hard_time':0},loss='mse')
TMAPS['coronary_artery_disease_intermediate_time']=TensorMap('coronary_artery_disease_intermediate',group='diagnosis_time',channel_map={'coronary_artery_disease_intermediate_time':0},loss='mse')
TMAPS['coronary_artery_disease_soft_time']=TensorMap('coronary_artery_disease_soft',group='diagnosis_time',channel_map={'coronary_artery_disease_soft_time':0},loss='mse')
TMAPS['crohns_disease_time']=TensorMap('crohns_disease',group='diagnosis_time',channel_map={'crohns_disease_time':0},loss='mse')
TMAPS['death_time']=TensorMap('death',group='diagnosis_time',channel_map={'death_time':0},loss='mse')
TMAPS['depression_time']=TensorMap('depression',group='diagnosis_time',channel_map={'depression_time':0},loss='mse')
TMAPS['dermatitis_time']=TensorMap('dermatitis',group='diagnosis_time',channel_map={'dermatitis_time':0},loss='mse')
TMAPS['diabetes_all_time']=TensorMap('diabetes_all',group='diagnosis_time',channel_map={'diabetes_all_time':0},loss='mse')
TMAPS['diabetes_type_1_time']=TensorMap('diabetes_type_1',group='diagnosis_time',channel_map={'diabetes_type_1_time':0},loss='mse')
TMAPS['diabetes_type_2_time']=TensorMap('diabetes_type_2',group='diagnosis_time',channel_map={'diabetes_type_2_time':0},loss='mse')
TMAPS['diverticular_disease_time']=TensorMap('diverticular_disease',group='diagnosis_time',channel_map={'diverticular_disease_time':0},loss='mse')
TMAPS['enlarged_prostate_time']=TensorMap('enlarged_prostate',group='diagnosis_time',channel_map={'enlarged_prostate_time':0},loss='mse')
TMAPS['epilepsy_time']=TensorMap('epilepsy',group='diagnosis_time',channel_map={'epilepsy_time':0},loss='mse')
TMAPS['gastroesophageal_reflux_disease_time']=TensorMap('gastroesophageal_reflux_disease',group='diagnosis_time',channel_map={'gastroesophageal_reflux_disease_time':0},loss='mse')
TMAPS['glaucoma_time']=TensorMap('glaucoma',group='diagnosis_time',channel_map={'glaucoma_time':0},loss='mse')
TMAPS['gout_time']=TensorMap('gout',group='diagnosis_time',channel_map={'gout_time':0},loss='mse')
TMAPS['heart_failure_time']=TensorMap('heart_failure',group='diagnosis_time',channel_map={'heart_failure_time':0},loss='mse')
TMAPS['heart_failure_v2_time']=TensorMap('heart_failure_v2',group='diagnosis_time',channel_map={'heart_failure_v2_time':0},loss='mse')
TMAPS['hypercholesterolemia_time']=TensorMap('hypercholesterolemia',group='diagnosis_time',channel_map={'hypercholesterolemia_time':0},loss='mse')
TMAPS['hypertension_time']=TensorMap('hypertension',group='diagnosis_time',channel_map={'hypertension_time':0},loss='mse')
TMAPS['hyperthyroidism_time']=TensorMap('hyperthyroidism',group='diagnosis_time',channel_map={'hyperthyroidism_time':0},loss='mse')
TMAPS['hypertrophic_cardiomyopathy_time']=TensorMap('hypertrophic_cardiomyopathy',group='diagnosis_time',channel_map={'hypertrophic_cardiomyopathy_time':0},loss='mse')
TMAPS['hypothyroidism_time']=TensorMap('hypothyroidism',group='diagnosis_time',channel_map={'hypothyroidism_time':0},loss='mse')
TMAPS['implantable_cardioverter_defibrillator_time']=TensorMap('implantable_cardioverter_defibrillator',group='diagnosis_time',channel_map={'implantable_cardioverter_defibrillator_time':0},loss='mse')
TMAPS['inflammatory_bowel_disease_time']=TensorMap('inflammatory_bowel_disease',group='diagnosis_time',channel_map={'inflammatory_bowel_disease_time':0},loss='mse')
TMAPS['intervertebral_disc_displacement_time']=TensorMap('intervertebral_disc_displacement',group='diagnosis_time',channel_map={'intervertebral_disc_displacement_time':0},loss='mse')
TMAPS['intracerebral_hemorrhage_time']=TensorMap('intracerebral_hemorrhage',group='diagnosis_time',channel_map={'intracerebral_hemorrhage_time':0},loss='mse')
TMAPS['iron_deficiency_anemia_time']=TensorMap('iron_deficiency_anemia',group='diagnosis_time',channel_map={'iron_deficiency_anemia_time':0},loss='mse')
TMAPS['irritable_bowel_syndrome_time']=TensorMap('irritable_bowel_syndrome',group='diagnosis_time',channel_map={'irritable_bowel_syndrome_time':0},loss='mse')
TMAPS['ischemic_stroke_time']=TensorMap('ischemic_stroke',group='diagnosis_time',channel_map={'ischemic_stroke_time':0},loss='mse')
TMAPS['lung_cancer_time']=TensorMap('lung_cancer',group='diagnosis_time',channel_map={'lung_cancer_time':0},loss='mse')
TMAPS['lupus_erythematosus_time']=TensorMap('lupus_erythematosus',group='diagnosis_time',channel_map={'lupus_erythematosus_time':0},loss='mse')
TMAPS['migraine_time']=TensorMap('migraine',group='diagnosis_time',channel_map={'migraine_time':0},loss='mse')
TMAPS['mitral_regurgitation_time']=TensorMap('mitral_regurgitation',group='diagnosis_time',channel_map={'mitral_regurgitation_time':0},loss='mse')
TMAPS['mitral_stenosis_time']=TensorMap('mitral_stenosis',group='diagnosis_time',channel_map={'mitral_stenosis_time':0},loss='mse')
TMAPS['mitral_valve_disease_time']=TensorMap('mitral_valve_disease',group='diagnosis_time',channel_map={'mitral_valve_disease_time':0},loss='mse')
TMAPS['mitral_valve_prolapse_time']=TensorMap('mitral_valve_prolapse',group='diagnosis_time',channel_map={'mitral_valve_prolapse_time':0},loss='mse')
TMAPS['multiple_sclerosis_time']=TensorMap('multiple_sclerosis',group='diagnosis_time',channel_map={'multiple_sclerosis_time':0},loss='mse')
TMAPS['myocardial_infarction_time']=TensorMap('myocardial_infarction',group='diagnosis_time',channel_map={'myocardial_infarction_time':0},loss='mse')
TMAPS['osteoarthritis_time']=TensorMap('osteoarthritis',group='diagnosis_time',channel_map={'osteoarthritis_time':0},loss='mse')
TMAPS['osteoporosis_time']=TensorMap('osteoporosis',group='diagnosis_time',channel_map={'osteoporosis_time':0},loss='mse')
TMAPS['pancreatitis_time']=TensorMap('pancreatitis',group='diagnosis_time',channel_map={'pancreatitis_time':0},loss='mse')
TMAPS['parkinsons_disease_time']=TensorMap('parkinsons_disease',group='diagnosis_time',channel_map={'parkinsons_disease_time':0},loss='mse')
TMAPS['peripheral_vascular_disease_time']=TensorMap('peripheral_vascular_disease',group='diagnosis_time',channel_map={'peripheral_vascular_disease_time':0},loss='mse')
TMAPS['pneumonia_time']=TensorMap('pneumonia',group='diagnosis_time',channel_map={'pneumonia_time':0},loss='mse')
TMAPS['posttraumatic_stress_disorder_time']=TensorMap('posttraumatic_stress_disorder',group='diagnosis_time',channel_map={'posttraumatic_stress_disorder_time':0},loss='mse')
TMAPS['prostate_cancer_time']=TensorMap('prostate_cancer',group='diagnosis_time',channel_map={'prostate_cancer_time':0},loss='mse')
TMAPS['psoriasis_time']=TensorMap('psoriasis',group='diagnosis_time',channel_map={'psoriasis_time':0},loss='mse')
TMAPS['pulmonary_hypertension_time']=TensorMap('pulmonary_hypertension',group='diagnosis_time',channel_map={'pulmonary_hypertension_time':0},loss='mse')
TMAPS['pulmonary_regurgitation_time']=TensorMap('pulmonary_regurgitation',group='diagnosis_time',channel_map={'pulmonary_regurgitation_time':0},loss='mse')
TMAPS['pulmonary_stenosis_time']=TensorMap('pulmonary_stenosis',group='diagnosis_time',channel_map={'pulmonary_stenosis_time':0},loss='mse')
TMAPS['pulmonary_valve_disease_time']=TensorMap('pulmonary_valve_disease',group='diagnosis_time',channel_map={'pulmonary_valve_disease_time':0},loss='mse')
TMAPS['rheumatoid_arthritis_time']=TensorMap('rheumatoid_arthritis',group='diagnosis_time',channel_map={'rheumatoid_arthritis_time':0},loss='mse')
TMAPS['sarcoidosis_time']=TensorMap('sarcoidosis',group='diagnosis_time',channel_map={'sarcoidosis_time':0},loss='mse')
TMAPS['schizophrenia_time']=TensorMap('schizophrenia',group='diagnosis_time',channel_map={'schizophrenia_time':0},loss='mse')
TMAPS['sciatica_time']=TensorMap('sciatica',group='diagnosis_time',channel_map={'sciatica_time':0},loss='mse')
TMAPS['skin_cancer_time']=TensorMap('skin_cancer',group='diagnosis_time',channel_map={'skin_cancer_time':0},loss='mse')
TMAPS['sleep_apnea_time']=TensorMap('sleep_apnea',group='diagnosis_time',channel_map={'sleep_apnea_time':0},loss='mse')
TMAPS['stroke_time']=TensorMap('stroke',group='diagnosis_time',channel_map={'stroke_time':0},loss='mse')
TMAPS['subarachnoid_hemorrhage_time']=TensorMap('subarachnoid_hemorrhage',group='diagnosis_time',channel_map={'subarachnoid_hemorrhage_time':0},loss='mse')
TMAPS['supraventricular_arrhythmia_general_inclusive_definition_time']=TensorMap('supraventricular_arrhythmia_general_inclusive_definition',group='diagnosis_time',channel_map={'supraventricular_arrhythmia_general_inclusive_definition_time':0},loss='mse')
TMAPS['supraventricular_arrhythmia_general_inclusive_definition_clinical_time']=TensorMap('supraventricular_arrhythmia_general_inclusive_definition_clinical',group='diagnosis_time',channel_map={'supraventricular_arrhythmia_general_inclusive_definition_clinical_time':0},loss='mse')
TMAPS['supraventricular_arrhythmia_premature_atrial_contractions_time']=TensorMap('supraventricular_arrhythmia_premature_atrial_contractions',group='diagnosis_time',channel_map={'supraventricular_arrhythmia_premature_atrial_contractions_time':0},loss='mse')
TMAPS['supraventricular_arrhythmia_svt_time']=TensorMap('supraventricular_arrhythmia_svt',group='diagnosis_time',channel_map={'supraventricular_arrhythmia_svt_time':0},loss='mse')
TMAPS['supraventricular_arrhythmia_wpw_time']=TensorMap('supraventricular_arrhythmia_wpw',group='diagnosis_time',channel_map={'supraventricular_arrhythmia_wpw_time':0},loss='mse')
TMAPS['supraventricular_arrhythmia_wpw_v2_time']=TensorMap('supraventricular_arrhythmia_wpw_v2',group='diagnosis_time',channel_map={'supraventricular_arrhythmia_wpw_v2_time':0},loss='mse')
TMAPS['tricuspid_regurgitation_time']=TensorMap('tricuspid_regurgitation',group='diagnosis_time',channel_map={'tricuspid_regurgitation_time':0},loss='mse')
TMAPS['tricuspid_stenosis_time']=TensorMap('tricuspid_stenosis',group='diagnosis_time',channel_map={'tricuspid_stenosis_time':0},loss='mse')
TMAPS['tricuspid_valve_disease_time']=TensorMap('tricuspid_valve_disease',group='diagnosis_time',channel_map={'tricuspid_valve_disease_time':0},loss='mse')
TMAPS['ulcerative_colitis_time']=TensorMap('ulcerative_colitis',group='diagnosis_time',channel_map={'ulcerative_colitis_time':0},loss='mse')
TMAPS['uterine_fibroids_time']=TensorMap('uterine_fibroids',group='diagnosis_time',channel_map={'uterine_fibroids_time':0},loss='mse')
TMAPS['valve_disease_time']=TensorMap('valve_disease',group='diagnosis_time',channel_map={'valve_disease_time':0},loss='mse')
TMAPS['valvular_disease_unspecified_time']=TensorMap('valvular_disease_unspecified',group='diagnosis_time',channel_map={'valvular_disease_unspecified_time':0},loss='mse')
TMAPS['venous_thromboembolism_time']=TensorMap('venous_thromboembolism',group='diagnosis_time',channel_map={'venous_thromboembolism_time':0},loss='mse')
TMAPS['ventricular_arrhythmia_general_inclusive_definition_time']=TensorMap('ventricular_arrhythmia_general_inclusive_definition',group='diagnosis_time',channel_map={'ventricular_arrhythmia_general_inclusive_definition_time':0},loss='mse')
TMAPS['ventricular_arrhythmia_general_inclusive_definition_clinical_time']=TensorMap('ventricular_arrhythmia_general_inclusive_definition_clinical',group='diagnosis_time',channel_map={'ventricular_arrhythmia_general_inclusive_definition_clinical_time':0},loss='mse')
TMAPS['ventricular_arrhythmia_sudden_cardiac_death_time']=TensorMap('ventricular_arrhythmia_sudden_cardiac_death',group='diagnosis_time',channel_map={'ventricular_arrhythmia_sudden_cardiac_death_time':0},loss='mse')
TMAPS['ventricular_arrhythmia_ventricular_premature_depolarizations_time']=TensorMap('ventricular_arrhythmia_ventricular_premature_depolarizations',group='diagnosis_time',channel_map={'ventricular_arrhythmia_ventricular_premature_depolarizations_time':0},loss='mse')
TMAPS['ventricular_arrhythmia_vt_time']=TensorMap('ventricular_arrhythmia_vt',group='diagnosis_time',channel_map={'ventricular_arrhythmia_vt_time':0},loss='mse')


#  TensorMaps for prevalent and incident MPG disease phenotypes
TMAPS['allergic_rhinitis_prevalent_incident'] = TensorMap('allergic_rhinitis', group='categorical_date', channel_map={'no_allergic_rhinitis':0, 'prevalent_allergic_rhinitis':1, 'incident_allergic_rhinitis':2}, loss=weighted_crossentropy([1.0, 5, 68], 'allergic_rhinitis_prevalent_incident'))
TMAPS['alzheimers_or_dementia_prevalent_incident'] = TensorMap('alzheimers_or_dementia', group='categorical_date', channel_map={'no_alzheimers_or_dementia':0, 'prevalent_alzheimers_or_dementia':1, 'incident_alzheimers_or_dementia':2}, loss=weighted_crossentropy([1.0, 1369, 649], 'alzheimers_or_dementia_prevalent_incident'))
TMAPS['amyotrophic_lateral_sclerosis_prevalent_incident'] = TensorMap('amyotrophic_lateral_sclerosis', group='categorical_date', channel_map={'no_amyotrophic_lateral_sclerosis':0, 'prevalent_amyotrophic_lateral_sclerosis':1, 'incident_amyotrophic_lateral_sclerosis':2}, loss=weighted_crossentropy([1.0, 3999, 704], 'amyotrophic_lateral_sclerosis_prevalent_incident'))
TMAPS['anxiety_prevalent_incident'] = TensorMap('anxiety', group='categorical_date', channel_map={'no_anxiety':0, 'prevalent_anxiety':1, 'incident_anxiety':2}, loss=weighted_crossentropy([1.0, 56, 29], 'anxiety_prevalent_incident'))
TMAPS['aortic_regurgitation_prevalent_incident'] = TensorMap('aortic_regurgitation', group='categorical_date', channel_map={'no_aortic_regurgitation':0, 'prevalent_aortic_regurgitation':1, 'incident_aortic_regurgitation':2}, loss=weighted_crossentropy([1.0, 302, 194], 'aortic_regurgitation_prevalent_incident'))
TMAPS['aortic_stenosis_prevalent_incident'] = TensorMap('aortic_stenosis', group='categorical_date', channel_map={'no_aortic_stenosis':0, 'prevalent_aortic_stenosis':1, 'incident_aortic_stenosis':2}, loss=weighted_crossentropy([1.0, 189, 103], 'aortic_stenosis_prevalent_incident'))
TMAPS['aortic_valve_disease_prevalent_incident'] = TensorMap('aortic_valve_disease', group='categorical_date', channel_map={'no_aortic_valve_disease':0, 'prevalent_aortic_valve_disease':1, 'incident_aortic_valve_disease':2}, loss=weighted_crossentropy([1.0, 90, 63], 'aortic_valve_disease_prevalent_incident'))
TMAPS['asthma_prevalent_incident'] = TensorMap('asthma', group='categorical_date', channel_map={'no_asthma':0, 'prevalent_asthma':1, 'incident_asthma':2}, loss=weighted_crossentropy([1.0, 2, 32], 'asthma_prevalent_incident'))
TMAPS['atrial_fibrillation_or_flutter_prevalent_incident'] = TensorMap('atrial_fibrillation_or_flutter', group='categorical_date', channel_map={'no_atrial_fibrillation_or_flutter':0, 'prevalent_atrial_fibrillation_or_flutter':1, 'incident_atrial_fibrillation_or_flutter':2}, loss=weighted_crossentropy([1.0, 21, 15], 'atrial_fibrillation_or_flutter_prevalent_incident'))
TMAPS['atrial_septal_defect_patent_foramen_ovale_prevalent_incident'] = TensorMap('atrial_septal_defect_patent_foramen_ovale', group='categorical_date', channel_map={'no_atrial_septal_defect_patent_foramen_ovale':0, 'prevalent_atrial_septal_defect_patent_foramen_ovale':1, 'incident_atrial_septal_defect_patent_foramen_ovale':2}, loss=weighted_crossentropy([1.0, 473, 518], 'atrial_septal_defect_patent_foramen_ovale_prevalent_incident'))
TMAPS['atrial_septal_defect_patent_foramen_ovale_v2_prevalent_incident'] = TensorMap('atrial_septal_defect_patent_foramen_ovale_v2', group='categorical_date', channel_map={'no_atrial_septal_defect_patent_foramen_ovale_v2':0, 'prevalent_atrial_septal_defect_patent_foramen_ovale_v2':1, 'incident_atrial_septal_defect_patent_foramen_ovale_v2':2}, loss=weighted_crossentropy([1.0, 473, 518], 'atrial_septal_defect_patent_foramen_ovale_v2_prevalent_incident'))
TMAPS['back_pain_prevalent_incident'] = TensorMap('back_pain', group='categorical_date', channel_map={'no_back_pain':0, 'prevalent_back_pain':1, 'incident_back_pain':2}, loss=weighted_crossentropy([1.0, 13, 17], 'back_pain_prevalent_incident'))
TMAPS['bariatric_surgery_prevalent_incident'] = TensorMap('bariatric_surgery', group='categorical_date', channel_map={'no_bariatric_surgery':0, 'prevalent_bariatric_surgery':1, 'incident_bariatric_surgery':2}, loss=weighted_crossentropy([1.0, 751, 304], 'bariatric_surgery_prevalent_incident'))
TMAPS['bariatric_surgery_v2_prevalent_incident'] = TensorMap('bariatric_surgery_v2', group='categorical_date', channel_map={'no_bariatric_surgery_v2':0, 'prevalent_bariatric_surgery_v2':1, 'incident_bariatric_surgery_v2':2}, loss=weighted_crossentropy([1.0, 1492, 404], 'bariatric_surgery_v2_prevalent_incident'))
TMAPS['bipolar_disorder_prevalent_incident'] = TensorMap('bipolar_disorder', group='categorical_date', channel_map={'no_bipolar_disorder':0, 'prevalent_bipolar_disorder':1, 'incident_bipolar_disorder':2}, loss=weighted_crossentropy([1.0, 109, 420], 'bipolar_disorder_prevalent_incident'))
TMAPS['bladder_cancer_prevalent_incident'] = TensorMap('bladder_cancer', group='categorical_date', channel_map={'no_bladder_cancer':0, 'prevalent_bladder_cancer':1, 'incident_bladder_cancer':2}, loss=weighted_crossentropy([1.0, 116, 125], 'bladder_cancer_prevalent_incident'))
TMAPS['bradyarrhythmia_av_block_or_distal_conduction_disease_prevalent_incident'] = TensorMap('bradyarrhythmia_av_block_or_distal_conduction_disease', group='categorical_date', channel_map={'no_bradyarrhythmia_av_block_or_distal_conduction_disease':0, 'prevalent_bradyarrhythmia_av_block_or_distal_conduction_disease':1, 'incident_bradyarrhythmia_av_block_or_distal_conduction_disease':2}, loss=weighted_crossentropy([1.0, 90, 38], 'bradyarrhythmia_av_block_or_distal_conduction_disease_prevalent_incident'))
TMAPS['bradyarrhythmia_av_block_or_distal_conduction_disease_hard_prevalent_incident'] = TensorMap('bradyarrhythmia_av_block_or_distal_conduction_disease_hard', group='categorical_date', channel_map={'no_bradyarrhythmia_av_block_or_distal_conduction_disease_hard':0, 'prevalent_bradyarrhythmia_av_block_or_distal_conduction_disease_hard':1, 'incident_bradyarrhythmia_av_block_or_distal_conduction_disease_hard':2}, loss=weighted_crossentropy([1.0, 167, 65], 'bradyarrhythmia_av_block_or_distal_conduction_disease_hard_prevalent_incident'))
TMAPS['bradyarrhythmia_av_block_or_distal_conduction_disease_hard_v2_prevalent_incident'] = TensorMap('bradyarrhythmia_av_block_or_distal_conduction_disease_hard_v2', group='categorical_date', channel_map={'no_bradyarrhythmia_av_block_or_distal_conduction_disease_hard_v2':0, 'prevalent_bradyarrhythmia_av_block_or_distal_conduction_disease_hard_v2':1, 'incident_bradyarrhythmia_av_block_or_distal_conduction_disease_hard_v2':2}, loss=weighted_crossentropy([1.0, 176, 66], 'bradyarrhythmia_av_block_or_distal_conduction_disease_hard_v2_prevalent_incident'))
TMAPS['bradyarrhythmia_av_block_or_distal_conduction_disease_v2_prevalent_incident'] = TensorMap('bradyarrhythmia_av_block_or_distal_conduction_disease_v2', group='categorical_date', channel_map={'no_bradyarrhythmia_av_block_or_distal_conduction_disease_v2':0, 'prevalent_bradyarrhythmia_av_block_or_distal_conduction_disease_v2':1, 'incident_bradyarrhythmia_av_block_or_distal_conduction_disease_v2':2}, loss=weighted_crossentropy([1.0, 132, 58], 'bradyarrhythmia_av_block_or_distal_conduction_disease_v2_prevalent_incident'))
TMAPS['bradyarrhythmia_av_block_or_distal_conduction_disease_v2_restricted_prevalent_incident'] = TensorMap('bradyarrhythmia_av_block_or_distal_conduction_disease_v2_restricted', group='categorical_date', channel_map={'no_bradyarrhythmia_av_block_or_distal_conduction_disease_v2_restricted':0, 'prevalent_bradyarrhythmia_av_block_or_distal_conduction_disease_v2_restricted':1, 'incident_bradyarrhythmia_av_block_or_distal_conduction_disease_v2_restricted':2}, loss=weighted_crossentropy([1.0, 480, 257], 'bradyarrhythmia_av_block_or_distal_conduction_disease_v2_restricted_prevalent_incident'))
TMAPS['bradyarrhythmia_general_inclusive_definition_prevalent_incident'] = TensorMap('bradyarrhythmia_general_inclusive_definition', group='categorical_date', channel_map={'no_bradyarrhythmia_general_inclusive_definition':0, 'prevalent_bradyarrhythmia_general_inclusive_definition':1, 'incident_bradyarrhythmia_general_inclusive_definition':2}, loss=weighted_crossentropy([1.0, 51, 27], 'bradyarrhythmia_general_inclusive_definition_prevalent_incident'))
TMAPS['bradyarrhythmia_only_prevalent_incident'] = TensorMap('bradyarrhythmia_only', group='categorical_date', channel_map={'no_bradyarrhythmia_only':0, 'prevalent_bradyarrhythmia_only':1, 'incident_bradyarrhythmia_only':2}, loss=weighted_crossentropy([1.0, 81, 53], 'bradyarrhythmia_only_prevalent_incident'))
TMAPS['bradyarrhythmia_pacemaker_prevalent_incident'] = TensorMap('bradyarrhythmia_pacemaker', group='categorical_date', channel_map={'no_bradyarrhythmia_pacemaker':0, 'prevalent_bradyarrhythmia_pacemaker':1, 'incident_bradyarrhythmia_pacemaker':2}, loss=weighted_crossentropy([1.0, 89, 57], 'bradyarrhythmia_pacemaker_prevalent_incident'))
TMAPS['bradyarrhythmia_pacemaker_v2_prevalent_incident'] = TensorMap('bradyarrhythmia_pacemaker_v2', group='categorical_date', channel_map={'no_bradyarrhythmia_pacemaker_v2':0, 'prevalent_bradyarrhythmia_pacemaker_v2':1, 'incident_bradyarrhythmia_pacemaker_v2':2}, loss=weighted_crossentropy([1.0, 88, 56], 'bradyarrhythmia_pacemaker_v2_prevalent_incident'))
TMAPS['bradyarrhythmia_sinus_node_dysfunction_prevalent_incident'] = TensorMap('bradyarrhythmia_sinus_node_dysfunction', group='categorical_date', channel_map={'no_bradyarrhythmia_sinus_node_dysfunction':0, 'prevalent_bradyarrhythmia_sinus_node_dysfunction':1, 'incident_bradyarrhythmia_sinus_node_dysfunction':2}, loss=weighted_crossentropy([1.0, 1176, 460], 'bradyarrhythmia_sinus_node_dysfunction_prevalent_incident'))
TMAPS['bradyarrhythmia_sinus_node_dysfunction_hard_prevalent_incident'] = TensorMap('bradyarrhythmia_sinus_node_dysfunction_hard', group='categorical_date', channel_map={'no_bradyarrhythmia_sinus_node_dysfunction_hard':0, 'prevalent_bradyarrhythmia_sinus_node_dysfunction_hard':1, 'incident_bradyarrhythmia_sinus_node_dysfunction_hard':2}, loss=weighted_crossentropy([1.0, 1639, 689], 'bradyarrhythmia_sinus_node_dysfunction_hard_prevalent_incident'))
TMAPS['bradyarrhythmia_sinus_node_dysfunction_hard_v2_prevalent_incident'] = TensorMap('bradyarrhythmia_sinus_node_dysfunction_hard_v2', group='categorical_date', channel_map={'no_bradyarrhythmia_sinus_node_dysfunction_hard_v2':0, 'prevalent_bradyarrhythmia_sinus_node_dysfunction_hard_v2':1, 'incident_bradyarrhythmia_sinus_node_dysfunction_hard_v2':2}, loss=weighted_crossentropy([1.0, 1724, 735], 'bradyarrhythmia_sinus_node_dysfunction_hard_v2_prevalent_incident'))
TMAPS['bradyarrhythmia_sinus_node_dysfunction_v2_prevalent_incident'] = TensorMap('bradyarrhythmia_sinus_node_dysfunction_v2', group='categorical_date', channel_map={'no_bradyarrhythmia_sinus_node_dysfunction_v2':0, 'prevalent_bradyarrhythmia_sinus_node_dysfunction_v2':1, 'incident_bradyarrhythmia_sinus_node_dysfunction_v2':2}, loss=weighted_crossentropy([1.0, 1315, 636], 'bradyarrhythmia_sinus_node_dysfunction_v2_prevalent_incident'))
TMAPS['bradyarrhythmia_sinus_node_dysfunction_v2_restricted_prevalent_incident'] = TensorMap('bradyarrhythmia_sinus_node_dysfunction_v2_restricted', group='categorical_date', channel_map={'no_bradyarrhythmia_sinus_node_dysfunction_v2_restricted':0, 'prevalent_bradyarrhythmia_sinus_node_dysfunction_v2_restricted':1, 'incident_bradyarrhythmia_sinus_node_dysfunction_v2_restricted':2}, loss=weighted_crossentropy([1.0, 1562, 826], 'bradyarrhythmia_sinus_node_dysfunction_v2_restricted_prevalent_incident'))
TMAPS['bradyarrrhythmia_av_block_or_distal_conduction_disease_clinical_prevalent_incident'] = TensorMap('bradyarrrhythmia_av_block_or_distal_conduction_disease_clinical', group='categorical_date', channel_map={'no_bradyarrrhythmia_av_block_or_distal_conduction_disease_clinical':0, 'prevalent_bradyarrrhythmia_av_block_or_distal_conduction_disease_clinical':1, 'incident_bradyarrrhythmia_av_block_or_distal_conduction_disease_clinical':2}, loss=weighted_crossentropy([1.0, 82, 53], 'bradyarrrhythmia_av_block_or_distal_conduction_disease_clinical_prevalent_incident'))
TMAPS['bradyarrrhythmia_general_inclusive_definition_clinical_prevalent_incident'] = TensorMap('bradyarrrhythmia_general_inclusive_definition_clinical', group='categorical_date', channel_map={'no_bradyarrrhythmia_general_inclusive_definition_clinical':0, 'prevalent_bradyarrrhythmia_general_inclusive_definition_clinical':1, 'incident_bradyarrrhythmia_general_inclusive_definition_clinical':2}, loss=weighted_crossentropy([1.0, 81, 52], 'bradyarrrhythmia_general_inclusive_definition_clinical_prevalent_incident'))
TMAPS['breast_cancer_prevalent_incident'] = TensorMap('breast_cancer', group='categorical_date', channel_map={'no_breast_cancer':0, 'prevalent_breast_cancer':1, 'incident_breast_cancer':2}, loss=weighted_crossentropy([1.0, 14, 32], 'breast_cancer_prevalent_incident'))
TMAPS['cardiac_surgery_prevalent_incident'] = TensorMap('cardiac_surgery', group='categorical_date', channel_map={'no_cardiac_surgery':0, 'prevalent_cardiac_surgery':1, 'incident_cardiac_surgery':2}, loss=weighted_crossentropy([1.0, 38, 48], 'cardiac_surgery_prevalent_incident'))
TMAPS['cataract_prevalent_incident'] = TensorMap('cataract', group='categorical_date', channel_map={'no_cataract':0, 'prevalent_cataract':1, 'incident_cataract':2}, loss=weighted_crossentropy([1.0, 11, 10], 'cataract_prevalent_incident'))
TMAPS['cervical_cancer_prevalent_incident'] = TensorMap('cervical_cancer', group='categorical_date', channel_map={'no_cervical_cancer':0, 'prevalent_cervical_cancer':1, 'incident_cervical_cancer':2}, loss=weighted_crossentropy([1.0, 78, 1369], 'cervical_cancer_prevalent_incident'))
TMAPS['cholelithiasis_or_gallstones_prevalent_incident'] = TensorMap('cholelithiasis_or_gallstones', group='categorical_date', channel_map={'no_cholelithiasis_or_gallstones':0, 'prevalent_cholelithiasis_or_gallstones':1, 'incident_cholelithiasis_or_gallstones':2}, loss=weighted_crossentropy([1.0, 11, 22], 'cholelithiasis_or_gallstones_prevalent_incident'))
TMAPS['chronic_kidney_disease_prevalent_incident'] = TensorMap('chronic_kidney_disease', group='categorical_date', channel_map={'no_chronic_kidney_disease':0, 'prevalent_chronic_kidney_disease':1, 'incident_chronic_kidney_disease':2}, loss=weighted_crossentropy([1.0, 103, 31], 'chronic_kidney_disease_prevalent_incident'))
TMAPS['chronic_obstructive_pulmonary_disease_prevalent_incident'] = TensorMap('chronic_obstructive_pulmonary_disease', group='categorical_date', channel_map={'no_chronic_obstructive_pulmonary_disease':0, 'prevalent_chronic_obstructive_pulmonary_disease':1, 'incident_chronic_obstructive_pulmonary_disease':2}, loss=weighted_crossentropy([1.0, 15, 26], 'chronic_obstructive_pulmonary_disease_prevalent_incident'))
TMAPS['colorectal_cancer_prevalent_incident'] = TensorMap('colorectal_cancer', group='categorical_date', channel_map={'no_colorectal_cancer':0, 'prevalent_colorectal_cancer':1, 'incident_colorectal_cancer':2}, loss=weighted_crossentropy([1.0, 57, 71], 'colorectal_cancer_prevalent_incident'))
TMAPS['conduction_system_disease_only_prevalent_incident'] = TensorMap('conduction_system_disease_only', group='categorical_date', channel_map={'no_conduction_system_disease_only':0, 'prevalent_conduction_system_disease_only':1, 'incident_conduction_system_disease_only':2}, loss=weighted_crossentropy([1.0, 115, 45], 'conduction_system_disease_only_prevalent_incident'))
TMAPS['congenital_heart_disease_prevalent_incident'] = TensorMap('congenital_heart_disease', group='categorical_date', channel_map={'no_congenital_heart_disease':0, 'prevalent_congenital_heart_disease':1, 'incident_congenital_heart_disease':2}, loss=weighted_crossentropy([1.0, 294, 251], 'congenital_heart_disease_prevalent_incident'))
TMAPS['congenital_heart_disease_ebstein_anomaly_prevalent_incident'] = TensorMap('congenital_heart_disease_ebstein_anomaly', group='categorical_date', channel_map={'no_congenital_heart_disease_ebstein_anomaly':0, 'prevalent_congenital_heart_disease_ebstein_anomaly':1, 'incident_congenital_heart_disease_ebstein_anomaly':2}, loss=weighted_crossentropy([1.0, 24998, 99992], 'congenital_heart_disease_ebstein_anomaly_prevalent_incident'))
TMAPS['coronary_artery_disease_prevalent_incident'] = TensorMap('coronary_artery_disease', group='categorical_date', channel_map={'no_coronary_artery_disease':0, 'prevalent_coronary_artery_disease':1, 'incident_coronary_artery_disease':2}, loss=weighted_crossentropy([1.0, 10, 18], 'coronary_artery_disease_prevalent_incident'))
TMAPS['coronary_artery_disease_hard_prevalent_incident'] = TensorMap('coronary_artery_disease_hard', group='categorical_date', channel_map={'no_coronary_artery_disease_hard':0, 'prevalent_coronary_artery_disease_hard':1, 'incident_coronary_artery_disease_hard':2}, loss=weighted_crossentropy([1.0, 9, 18], 'coronary_artery_disease_hard_prevalent_incident'))
TMAPS['coronary_artery_disease_intermediate_prevalent_incident'] = TensorMap('coronary_artery_disease_intermediate', group='categorical_date', channel_map={'no_coronary_artery_disease_intermediate':0, 'prevalent_coronary_artery_disease_intermediate':1, 'incident_coronary_artery_disease_intermediate':2}, loss=weighted_crossentropy([1.0, 8, 11], 'coronary_artery_disease_intermediate_prevalent_incident'))
TMAPS['coronary_artery_disease_soft_prevalent_incident'] = TensorMap('coronary_artery_disease_soft', group='categorical_date', channel_map={'no_coronary_artery_disease_soft':0, 'prevalent_coronary_artery_disease_soft':1, 'incident_coronary_artery_disease_soft':2}, loss=weighted_crossentropy([1.0, 6, 10], 'coronary_artery_disease_soft_prevalent_incident'))
TMAPS['crohns_disease_prevalent_incident'] = TensorMap('crohns_disease', group='categorical_date', channel_map={'no_crohns_disease':0, 'prevalent_crohns_disease':1, 'incident_crohns_disease':2}, loss=weighted_crossentropy([1.0, 112, 242], 'crohns_disease_prevalent_incident'))
TMAPS['death_prevalent_incident'] = TensorMap('death', group='categorical_date', channel_map={'no_death':0, 'prevalent_death':1, 'incident_death':2}, loss=weighted_crossentropy([1.0, 24998, 11], 'death_prevalent_incident'))
TMAPS['depression_prevalent_incident'] = TensorMap('depression', group='categorical_date', channel_map={'no_depression':0, 'prevalent_depression':1, 'incident_depression':2}, loss=weighted_crossentropy([1.0, 5, 22], 'depression_prevalent_incident'))
TMAPS['dermatitis_prevalent_incident'] = TensorMap('dermatitis', group='categorical_date', channel_map={'no_dermatitis':0, 'prevalent_dermatitis':1, 'incident_dermatitis':2}, loss=weighted_crossentropy([1.0, 12, 56], 'dermatitis_prevalent_incident'))
TMAPS['diabetes_all_prevalent_incident'] = TensorMap('diabetes_all', group='categorical_date', channel_map={'no_diabetes_all':0, 'prevalent_diabetes_all':1, 'incident_diabetes_all':2}, loss=weighted_crossentropy([1.0, 6, 23], 'diabetes_all_prevalent_incident'))
TMAPS['diabetes_type_1_prevalent_incident'] = TensorMap('diabetes_type_1', group='categorical_date', channel_map={'no_diabetes_type_1':0, 'prevalent_diabetes_type_1':1, 'incident_diabetes_type_1':2}, loss=weighted_crossentropy([1.0, 61, 130], 'diabetes_type_1_prevalent_incident'))
TMAPS['diabetes_type_2_prevalent_incident'] = TensorMap('diabetes_type_2', group='categorical_date', channel_map={'no_diabetes_type_2':0, 'prevalent_diabetes_type_2':1, 'incident_diabetes_type_2':2}, loss=weighted_crossentropy([1.0, 14, 12], 'diabetes_type_2_prevalent_incident'))
TMAPS['diverticular_disease_prevalent_incident'] = TensorMap('diverticular_disease', group='categorical_date', channel_map={'no_diverticular_disease':0, 'prevalent_diverticular_disease':1, 'incident_diverticular_disease':2}, loss=weighted_crossentropy([1.0, 11, 8], 'diverticular_disease_prevalent_incident'))
TMAPS['enlarged_prostate_prevalent_incident'] = TensorMap('enlarged_prostate', group='categorical_date', channel_map={'no_enlarged_prostate':0, 'prevalent_enlarged_prostate':1, 'incident_enlarged_prostate':2}, loss=weighted_crossentropy([1.0, 16, 21], 'enlarged_prostate_prevalent_incident'))
TMAPS['epilepsy_prevalent_incident'] = TensorMap('epilepsy', group='categorical_date', channel_map={'no_epilepsy':0, 'prevalent_epilepsy':1, 'incident_epilepsy':2}, loss=weighted_crossentropy([1.0, 33, 131], 'epilepsy_prevalent_incident'))
TMAPS['gastroesophageal_reflux_disease_prevalent_incident'] = TensorMap('gastroesophageal_reflux_disease', group='categorical_date', channel_map={'no_gastroesophageal_reflux_disease':0, 'prevalent_gastroesophageal_reflux_disease':1, 'incident_gastroesophageal_reflux_disease':2}, loss=weighted_crossentropy([1.0, 5, 11], 'gastroesophageal_reflux_disease_prevalent_incident'))
TMAPS['glaucoma_prevalent_incident'] = TensorMap('glaucoma', group='categorical_date', channel_map={'no_glaucoma':0, 'prevalent_glaucoma':1, 'incident_glaucoma':2}, loss=weighted_crossentropy([1.0, 28, 59], 'glaucoma_prevalent_incident'))
TMAPS['gout_prevalent_incident'] = TensorMap('gout', group='categorical_date', channel_map={'no_gout':0, 'prevalent_gout':1, 'incident_gout':2}, loss=weighted_crossentropy([1.0, 22, 98], 'gout_prevalent_incident'))
TMAPS['heart_failure_prevalent_incident'] = TensorMap('heart_failure', group='categorical_date', channel_map={'no_heart_failure':0, 'prevalent_heart_failure':1, 'incident_heart_failure':2}, loss=weighted_crossentropy([1.0, 57, 34], 'heart_failure_prevalent_incident'))
TMAPS['heart_failure_v2_prevalent_incident'] = TensorMap('heart_failure_v2', group='categorical_date', channel_map={'no_heart_failure_v2':0, 'prevalent_heart_failure_v2':1, 'incident_heart_failure_v2':2}, loss=weighted_crossentropy([1.0, 57, 34], 'heart_failure_v2_prevalent_incident'))
TMAPS['hypercholesterolemia_prevalent_incident'] = TensorMap('hypercholesterolemia', group='categorical_date', channel_map={'no_hypercholesterolemia':0, 'prevalent_hypercholesterolemia':1, 'incident_hypercholesterolemia':2}, loss=weighted_crossentropy([1.0, 2, 8], 'hypercholesterolemia_prevalent_incident'))
TMAPS['hypertension_prevalent_incident'] = TensorMap('hypertension', group='categorical_date', channel_map={'no_hypertension':0, 'prevalent_hypertension':1, 'incident_hypertension':2}, loss=weighted_crossentropy([1.0, 1, 7], 'hypertension_prevalent_incident'))
TMAPS['hyperthyroidism_prevalent_incident'] = TensorMap('hyperthyroidism', group='categorical_date', channel_map={'no_hyperthyroidism':0, 'prevalent_hyperthyroidism':1, 'incident_hyperthyroidism':2}, loss=weighted_crossentropy([1.0, 37, 160], 'hyperthyroidism_prevalent_incident'))
TMAPS['hypertrophic_cardiomyopathy_prevalent_incident'] = TensorMap('hypertrophic_cardiomyopathy', group='categorical_date', channel_map={'no_hypertrophic_cardiomyopathy':0, 'prevalent_hypertrophic_cardiomyopathy':1, 'incident_hypertrophic_cardiomyopathy':2}, loss=weighted_crossentropy([1.0, 751, 970], 'hypertrophic_cardiomyopathy_prevalent_incident'))
TMAPS['hypothyroidism_prevalent_incident'] = TensorMap('hypothyroidism', group='categorical_date', channel_map={'no_hypothyroidism':0, 'prevalent_hypothyroidism':1, 'incident_hypothyroidism':2}, loss=weighted_crossentropy([1.0, 6, 37], 'hypothyroidism_prevalent_incident'))
TMAPS['implantable_cardioverter_defibrillator_prevalent_incident'] = TensorMap('implantable_cardioverter_defibrillator', group='categorical_date', channel_map={'no_implantable_cardioverter_defibrillator':0, 'prevalent_implantable_cardioverter_defibrillator':1, 'incident_implantable_cardioverter_defibrillator':2}, loss=weighted_crossentropy([1.0, 1315, 263], 'implantable_cardioverter_defibrillator_prevalent_incident'))
TMAPS['inflammatory_bowel_disease_prevalent_incident'] = TensorMap('inflammatory_bowel_disease', group='categorical_date', channel_map={'no_inflammatory_bowel_disease':0, 'prevalent_inflammatory_bowel_disease':1, 'incident_inflammatory_bowel_disease':2}, loss=weighted_crossentropy([1.0, 31, 137], 'inflammatory_bowel_disease_prevalent_incident'))
TMAPS['intervertebral_disc_displacement_prevalent_incident'] = TensorMap('intervertebral_disc_displacement', group='categorical_date', channel_map={'no_intervertebral_disc_displacement':0, 'prevalent_intervertebral_disc_displacement':1, 'incident_intervertebral_disc_displacement':2}, loss=weighted_crossentropy([1.0, 17, 80], 'intervertebral_disc_displacement_prevalent_incident'))
TMAPS['intracerebral_hemorrhage_prevalent_incident'] = TensorMap('intracerebral_hemorrhage', group='categorical_date', channel_map={'no_intracerebral_hemorrhage':0, 'prevalent_intracerebral_hemorrhage':1, 'incident_intracerebral_hemorrhage':2}, loss=weighted_crossentropy([1.0, 328, 240], 'intracerebral_hemorrhage_prevalent_incident'))
TMAPS['iron_deficiency_anemia_prevalent_incident'] = TensorMap('iron_deficiency_anemia', group='categorical_date', channel_map={'no_iron_deficiency_anemia':0, 'prevalent_iron_deficiency_anemia':1, 'incident_iron_deficiency_anemia':2}, loss=weighted_crossentropy([1.0, 26, 26], 'iron_deficiency_anemia_prevalent_incident'))
TMAPS['irritable_bowel_syndrome_prevalent_incident'] = TensorMap('irritable_bowel_syndrome', group='categorical_date', channel_map={'no_irritable_bowel_syndrome':0, 'prevalent_irritable_bowel_syndrome':1, 'incident_irritable_bowel_syndrome':2}, loss=weighted_crossentropy([1.0, 12, 55], 'irritable_bowel_syndrome_prevalent_incident'))
TMAPS['ischemic_stroke_prevalent_incident'] = TensorMap('ischemic_stroke', group='categorical_date', channel_map={'no_ischemic_stroke':0, 'prevalent_ischemic_stroke':1, 'incident_ischemic_stroke':2}, loss=weighted_crossentropy([1.0, 86, 55], 'ischemic_stroke_prevalent_incident'))
TMAPS['lung_cancer_prevalent_incident'] = TensorMap('lung_cancer', group='categorical_date', channel_map={'no_lung_cancer':0, 'prevalent_lung_cancer':1, 'incident_lung_cancer':2}, loss=weighted_crossentropy([1.0, 304, 68], 'lung_cancer_prevalent_incident'))
TMAPS['lupus_erythematosus_prevalent_incident'] = TensorMap('lupus_erythematosus', group='categorical_date', channel_map={'no_lupus_erythematosus':0, 'prevalent_lupus_erythematosus':1, 'incident_lupus_erythematosus':2}, loss=weighted_crossentropy([1.0, 223, 847], 'lupus_erythematosus_prevalent_incident'))
TMAPS['migraine_prevalent_incident'] = TensorMap('migraine', group='categorical_date', channel_map={'no_migraine':0, 'prevalent_migraine':1, 'incident_migraine':2}, loss=weighted_crossentropy([1.0, 11, 76], 'migraine_prevalent_incident'))
TMAPS['mitral_regurgitation_prevalent_incident'] = TensorMap('mitral_regurgitation', group='categorical_date', channel_map={'no_mitral_regurgitation':0, 'prevalent_mitral_regurgitation':1, 'incident_mitral_regurgitation':2}, loss=weighted_crossentropy([1.0, 201, 105], 'mitral_regurgitation_prevalent_incident'))
TMAPS['mitral_stenosis_prevalent_incident'] = TensorMap('mitral_stenosis', group='categorical_date', channel_map={'no_mitral_stenosis':0, 'prevalent_mitral_stenosis':1, 'incident_mitral_stenosis':2}, loss=weighted_crossentropy([1.0, 1492, 3225], 'mitral_stenosis_prevalent_incident'))
TMAPS['mitral_valve_disease_prevalent_incident'] = TensorMap('mitral_valve_disease', group='categorical_date', channel_map={'no_mitral_valve_disease':0, 'prevalent_mitral_valve_disease':1, 'incident_mitral_valve_disease':2}, loss=weighted_crossentropy([1.0, 108, 60], 'mitral_valve_disease_prevalent_incident'))
TMAPS['mitral_valve_prolapse_prevalent_incident'] = TensorMap('mitral_valve_prolapse', group='categorical_date', channel_map={'no_mitral_valve_prolapse':0, 'prevalent_mitral_valve_prolapse':1, 'incident_mitral_valve_prolapse':2}, loss=weighted_crossentropy([1.0, 602, 518], 'mitral_valve_prolapse_prevalent_incident'))
TMAPS['multiple_sclerosis_prevalent_incident'] = TensorMap('multiple_sclerosis', group='categorical_date', channel_map={'no_multiple_sclerosis':0, 'prevalent_multiple_sclerosis':1, 'incident_multiple_sclerosis':2}, loss=weighted_crossentropy([1.0, 78, 787], 'multiple_sclerosis_prevalent_incident'))
TMAPS['myocardial_infarction_prevalent_incident'] = TensorMap('myocardial_infarction', group='categorical_date', channel_map={'no_myocardial_infarction':0, 'prevalent_myocardial_infarction':1, 'incident_myocardial_infarction':2}, loss=weighted_crossentropy([1.0, 13, 27], 'myocardial_infarction_prevalent_incident'))
TMAPS['osteoarthritis_prevalent_incident'] = TensorMap('osteoarthritis', group='categorical_date', channel_map={'no_osteoarthritis':0, 'prevalent_osteoarthritis':1, 'incident_osteoarthritis':2}, loss=weighted_crossentropy([1.0, 3, 6], 'osteoarthritis_prevalent_incident'))
TMAPS['osteoporosis_prevalent_incident'] = TensorMap('osteoporosis', group='categorical_date', channel_map={'no_osteoporosis':0, 'prevalent_osteoporosis':1, 'incident_osteoporosis':2}, loss=weighted_crossentropy([1.0, 17, 42], 'osteoporosis_prevalent_incident'))
TMAPS['pancreatitis_prevalent_incident'] = TensorMap('pancreatitis', group='categorical_date', channel_map={'no_pancreatitis':0, 'prevalent_pancreatitis':1, 'incident_pancreatitis':2}, loss=weighted_crossentropy([1.0, 88, 131], 'pancreatitis_prevalent_incident'))
TMAPS['parkinsons_disease_prevalent_incident'] = TensorMap('parkinsons_disease', group='categorical_date', channel_map={'no_parkinsons_disease':0, 'prevalent_parkinsons_disease':1, 'incident_parkinsons_disease':2}, loss=weighted_crossentropy([1.0, 184, 240], 'parkinsons_disease_prevalent_incident'))
TMAPS['peripheral_vascular_disease_prevalent_incident'] = TensorMap('peripheral_vascular_disease', group='categorical_date', channel_map={'no_peripheral_vascular_disease':0, 'prevalent_peripheral_vascular_disease':1, 'incident_peripheral_vascular_disease':2}, loss=weighted_crossentropy([1.0, 49, 72], 'peripheral_vascular_disease_prevalent_incident'))
TMAPS['pneumonia_prevalent_incident'] = TensorMap('pneumonia', group='categorical_date', channel_map={'no_pneumonia':0, 'prevalent_pneumonia':1, 'incident_pneumonia':2}, loss=weighted_crossentropy([1.0, 17, 19], 'pneumonia_prevalent_incident'))
TMAPS['posttraumatic_stress_disorder_prevalent_incident'] = TensorMap('posttraumatic_stress_disorder', group='categorical_date', channel_map={'no_posttraumatic_stress_disorder':0, 'prevalent_posttraumatic_stress_disorder':1, 'incident_posttraumatic_stress_disorder':2}, loss=weighted_crossentropy([1.0, 487, 1818], 'posttraumatic_stress_disorder_prevalent_incident'))
TMAPS['prostate_cancer_prevalent_incident'] = TensorMap('prostate_cancer', group='categorical_date', channel_map={'no_prostate_cancer':0, 'prevalent_prostate_cancer':1, 'incident_prostate_cancer':2}, loss=weighted_crossentropy([1.0, 45, 41], 'prostate_cancer_prevalent_incident'))
TMAPS['psoriasis_prevalent_incident'] = TensorMap('psoriasis', group='categorical_date', channel_map={'no_psoriasis':0, 'prevalent_psoriasis':1, 'incident_psoriasis':2}, loss=weighted_crossentropy([1.0, 26, 138], 'psoriasis_prevalent_incident'))
TMAPS['pulmonary_hypertension_prevalent_incident'] = TensorMap('pulmonary_hypertension', group='categorical_date', channel_map={'no_pulmonary_hypertension':0, 'prevalent_pulmonary_hypertension':1, 'incident_pulmonary_hypertension':2}, loss=weighted_crossentropy([1.0, 970, 232], 'pulmonary_hypertension_prevalent_incident'))
TMAPS['pulmonary_regurgitation_prevalent_incident'] = TensorMap('pulmonary_regurgitation', group='categorical_date', channel_map={'no_pulmonary_regurgitation':0, 'prevalent_pulmonary_regurgitation':1, 'incident_pulmonary_regurgitation':2}, loss=weighted_crossentropy([1.0, 9999, 1562], 'pulmonary_regurgitation_prevalent_incident'))
TMAPS['pulmonary_stenosis_prevalent_incident'] = TensorMap('pulmonary_stenosis', group='categorical_date', channel_map={'no_pulmonary_stenosis':0, 'prevalent_pulmonary_stenosis':1, 'incident_pulmonary_stenosis':2}, loss=weighted_crossentropy([1.0, 7691, 9999], 'pulmonary_stenosis_prevalent_incident'))
TMAPS['pulmonary_valve_disease_prevalent_incident'] = TensorMap('pulmonary_valve_disease', group='categorical_date', channel_map={'no_pulmonary_valve_disease':0, 'prevalent_pulmonary_valve_disease':1, 'incident_pulmonary_valve_disease':2}, loss=weighted_crossentropy([1.0, 3571, 1265], 'pulmonary_valve_disease_prevalent_incident'))
TMAPS['rheumatoid_arthritis_prevalent_incident'] = TensorMap('rheumatoid_arthritis', group='categorical_date', channel_map={'no_rheumatoid_arthritis':0, 'prevalent_rheumatoid_arthritis':1, 'incident_rheumatoid_arthritis':2}, loss=weighted_crossentropy([1.0, 25, 83], 'rheumatoid_arthritis_prevalent_incident'))
TMAPS['sarcoidosis_prevalent_incident'] = TensorMap('sarcoidosis', group='categorical_date', channel_map={'no_sarcoidosis':0, 'prevalent_sarcoidosis':1, 'incident_sarcoidosis':2}, loss=weighted_crossentropy([1.0, 151, 917], 'sarcoidosis_prevalent_incident'))
TMAPS['schizophrenia_prevalent_incident'] = TensorMap('schizophrenia', group='categorical_date', channel_map={'no_schizophrenia':0, 'prevalent_schizophrenia':1, 'incident_schizophrenia':2}, loss=weighted_crossentropy([1.0, 185, 806], 'schizophrenia_prevalent_incident'))
TMAPS['sciatica_prevalent_incident'] = TensorMap('sciatica', group='categorical_date', channel_map={'no_sciatica':0, 'prevalent_sciatica':1, 'incident_sciatica':2}, loss=weighted_crossentropy([1.0, 28, 100], 'sciatica_prevalent_incident'))
TMAPS['skin_cancer_prevalent_incident'] = TensorMap('skin_cancer', group='categorical_date', channel_map={'no_skin_cancer':0, 'prevalent_skin_cancer':1, 'incident_skin_cancer':2}, loss=weighted_crossentropy([1.0, 13, 19], 'skin_cancer_prevalent_incident'))
TMAPS['sleep_apnea_prevalent_incident'] = TensorMap('sleep_apnea', group='categorical_date', channel_map={'no_sleep_apnea':0, 'prevalent_sleep_apnea':1, 'incident_sleep_apnea':2}, loss=weighted_crossentropy([1.0, 48, 57], 'sleep_apnea_prevalent_incident'))
TMAPS['stroke_prevalent_incident'] = TensorMap('stroke', group='categorical_date', channel_map={'no_stroke':0, 'prevalent_stroke':1, 'incident_stroke':2}, loss=weighted_crossentropy([1.0, 21, 42], 'stroke_prevalent_incident'))
TMAPS['subarachnoid_hemorrhage_prevalent_incident'] = TensorMap('subarachnoid_hemorrhage', group='categorical_date', channel_map={'no_subarachnoid_hemorrhage':0, 'prevalent_subarachnoid_hemorrhage':1, 'incident_subarachnoid_hemorrhage':2}, loss=weighted_crossentropy([1.0, 167, 357], 'subarachnoid_hemorrhage_prevalent_incident'))
TMAPS['supraventricular_arrhythmia_general_inclusive_definition_prevalent_incident'] = TensorMap('supraventricular_arrhythmia_general_inclusive_definition', group='categorical_date', channel_map={'no_supraventricular_arrhythmia_general_inclusive_definition':0, 'prevalent_supraventricular_arrhythmia_general_inclusive_definition':1, 'incident_supraventricular_arrhythmia_general_inclusive_definition':2}, loss=weighted_crossentropy([1.0, 80, 98], 'supraventricular_arrhythmia_general_inclusive_definition_prevalent_incident'))
TMAPS['supraventricular_arrhythmia_general_inclusive_definition_clinical_prevalent_incident'] = TensorMap('supraventricular_arrhythmia_general_inclusive_definition_clinical', group='categorical_date', channel_map={'no_supraventricular_arrhythmia_general_inclusive_definition_clinical':0, 'prevalent_supraventricular_arrhythmia_general_inclusive_definition_clinical':1, 'incident_supraventricular_arrhythmia_general_inclusive_definition_clinical':2}, loss=weighted_crossentropy([1.0, 76, 102], 'supraventricular_arrhythmia_general_inclusive_definition_clinical_prevalent_incident'))
TMAPS['supraventricular_arrhythmia_premature_atrial_contractions_prevalent_incident'] = TensorMap('supraventricular_arrhythmia_premature_atrial_contractions', group='categorical_date', channel_map={'no_supraventricular_arrhythmia_premature_atrial_contractions':0, 'prevalent_supraventricular_arrhythmia_premature_atrial_contractions':1, 'incident_supraventricular_arrhythmia_premature_atrial_contractions':2}, loss=weighted_crossentropy([1.0, 2325, 1639], 'supraventricular_arrhythmia_premature_atrial_contractions_prevalent_incident'))
TMAPS['supraventricular_arrhythmia_svt_prevalent_incident'] = TensorMap('supraventricular_arrhythmia_svt', group='categorical_date', channel_map={'no_supraventricular_arrhythmia_svt':0, 'prevalent_supraventricular_arrhythmia_svt':1, 'incident_supraventricular_arrhythmia_svt':2}, loss=weighted_crossentropy([1.0, 81, 108], 'supraventricular_arrhythmia_svt_prevalent_incident'))
TMAPS['supraventricular_arrhythmia_wpw_prevalent_incident'] = TensorMap('supraventricular_arrhythmia_wpw', group='categorical_date', channel_map={'no_supraventricular_arrhythmia_wpw':0, 'prevalent_supraventricular_arrhythmia_wpw':1, 'incident_supraventricular_arrhythmia_wpw':2}, loss=weighted_crossentropy([1.0, 675, 806], 'supraventricular_arrhythmia_wpw_prevalent_incident'))
TMAPS['supraventricular_arrhythmia_wpw_v2_prevalent_incident'] = TensorMap('supraventricular_arrhythmia_wpw_v2', group='categorical_date', channel_map={'no_supraventricular_arrhythmia_wpw_v2':0, 'prevalent_supraventricular_arrhythmia_wpw_v2':1, 'incident_supraventricular_arrhythmia_wpw_v2':2}, loss=weighted_crossentropy([1.0, 689, 806], 'supraventricular_arrhythmia_wpw_v2_prevalent_incident'))
TMAPS['tricuspid_regurgitation_prevalent_incident'] = TensorMap('tricuspid_regurgitation', group='categorical_date', channel_map={'no_tricuspid_regurgitation':0, 'prevalent_tricuspid_regurgitation':1, 'incident_tricuspid_regurgitation':2}, loss=weighted_crossentropy([1.0, 1639, 414], 'tricuspid_regurgitation_prevalent_incident'))
TMAPS['tricuspid_stenosis_prevalent_incident'] = TensorMap('tricuspid_stenosis', group='categorical_date', channel_map={'no_tricuspid_stenosis':0, 'prevalent_tricuspid_stenosis':1, 'incident_tricuspid_stenosis':2}, loss=weighted_crossentropy([1.0, 24998, 24998], 'tricuspid_stenosis_prevalent_incident'))
TMAPS['tricuspid_valve_disease_prevalent_incident'] = TensorMap('tricuspid_valve_disease', group='categorical_date', channel_map={'no_tricuspid_valve_disease':0, 'prevalent_tricuspid_valve_disease':1, 'incident_tricuspid_valve_disease':2}, loss=weighted_crossentropy([1.0, 510, 119], 'tricuspid_valve_disease_prevalent_incident'))
TMAPS['ulcerative_colitis_prevalent_incident'] = TensorMap('ulcerative_colitis', group='categorical_date', channel_map={'no_ulcerative_colitis':0, 'prevalent_ulcerative_colitis':1, 'incident_ulcerative_colitis':2}, loss=weighted_crossentropy([1.0, 46, 170], 'ulcerative_colitis_prevalent_incident'))
TMAPS['uterine_fibroids_prevalent_incident'] = TensorMap('uterine_fibroids', group='categorical_date', channel_map={'no_uterine_fibroids':0, 'prevalent_uterine_fibroids':1, 'incident_uterine_fibroids':2}, loss=weighted_crossentropy([1.0, 9, 47], 'uterine_fibroids_prevalent_incident'))
TMAPS['valve_disease_prevalent_incident'] = TensorMap('valve_disease', group='categorical_date', channel_map={'no_valve_disease':0, 'prevalent_valve_disease':1, 'incident_valve_disease':2}, loss=weighted_crossentropy([1.0, 53, 35], 'valve_disease_prevalent_incident'))
TMAPS['valvular_disease_unspecified_prevalent_incident'] = TensorMap('valvular_disease_unspecified', group='categorical_date', channel_map={'no_valvular_disease_unspecified':0, 'prevalent_valvular_disease_unspecified':1, 'incident_valvular_disease_unspecified':2}, loss=weighted_crossentropy([1.0, 45, 806], 'valvular_disease_unspecified_prevalent_incident'))
TMAPS['venous_thromboembolism_prevalent_incident'] = TensorMap('venous_thromboembolism', group='categorical_date', channel_map={'no_venous_thromboembolism':0, 'prevalent_venous_thromboembolism':1, 'incident_venous_thromboembolism':2}, loss=weighted_crossentropy([1.0, 12, 41], 'venous_thromboembolism_prevalent_incident'))
TMAPS['ventricular_arrhythmia_general_inclusive_definition_prevalent_incident'] = TensorMap('ventricular_arrhythmia_general_inclusive_definition', group='categorical_date', channel_map={'no_ventricular_arrhythmia_general_inclusive_definition':0, 'prevalent_ventricular_arrhythmia_general_inclusive_definition':1, 'incident_ventricular_arrhythmia_general_inclusive_definition':2}, loss=weighted_crossentropy([1.0, 159, 90], 'ventricular_arrhythmia_general_inclusive_definition_prevalent_incident'))
TMAPS['ventricular_arrhythmia_general_inclusive_definition_clinical_prevalent_incident'] = TensorMap('ventricular_arrhythmia_general_inclusive_definition_clinical', group='categorical_date', channel_map={'no_ventricular_arrhythmia_general_inclusive_definition_clinical':0, 'prevalent_ventricular_arrhythmia_general_inclusive_definition_clinical':1, 'incident_ventricular_arrhythmia_general_inclusive_definition_clinical':2}, loss=weighted_crossentropy([1.0, 182, 107], 'ventricular_arrhythmia_general_inclusive_definition_clinical_prevalent_incident'))
TMAPS['ventricular_arrhythmia_sudden_cardiac_death_prevalent_incident'] = TensorMap('ventricular_arrhythmia_sudden_cardiac_death', group='categorical_date', channel_map={'no_ventricular_arrhythmia_sudden_cardiac_death':0, 'prevalent_ventricular_arrhythmia_sudden_cardiac_death':1, 'incident_ventricular_arrhythmia_sudden_cardiac_death':2}, loss=weighted_crossentropy([1.0, 386, 168], 'ventricular_arrhythmia_sudden_cardiac_death_prevalent_incident'))
TMAPS['ventricular_arrhythmia_ventricular_premature_depolarizations_prevalent_incident'] = TensorMap('ventricular_arrhythmia_ventricular_premature_depolarizations', group='categorical_date', channel_map={'no_ventricular_arrhythmia_ventricular_premature_depolarizations':0, 'prevalent_ventricular_arrhythmia_ventricular_premature_depolarizations':1, 'incident_ventricular_arrhythmia_ventricular_premature_depolarizations':2}, loss=weighted_crossentropy([1.0, 1176, 495], 'ventricular_arrhythmia_ventricular_premature_depolarizations_prevalent_incident'))
TMAPS['ventricular_arrhythmia_vt_prevalent_incident'] = TensorMap('ventricular_arrhythmia_vt', group='categorical_date', channel_map={'no_ventricular_arrhythmia_vt':0, 'prevalent_ventricular_arrhythmia_vt':1, 'incident_ventricular_arrhythmia_vt':2}, loss=weighted_crossentropy([1.0, 319, 214], 'ventricular_arrhythmia_vt_prevalent_incident'))

